Detection ID,Latest Commit ID,PMD Version,Rule Name,File Path,Violation Introducing Commit ID,VIC Date,VIC Line Num.,Latest Detection Commit ID,LDC ID Date,LDC Line Num.,Violation Fixed Commit ID,VFC Date,VFC Line Num.,Fixed Period(day),Original Code,Fixed Code,Really Fixed?,Time
2963,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/com/netflix/iceberg/Schema.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,55,,,,6b534317e8f5d214a9d0c838e03c700fce40ba33,1513804847,-1,1513804847/1513643108,"    this.aliasToId = null;"," 
   public Schema(List<Types.NestedField> columns) {
     this.struct = Types.StructType.of(columns);
-    this.idToField = TypeUtil.indexById(struct);
-    this.aliasToId = null;
   }
 
   private Map<Integer, Types.NestedField> lazyIdToField() {
",,7441
2964,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/avro/src/main/java/com/netflix/iceberg/avro/AvroFileAppender.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,51,75088f6875fc8d3cc4c3af38899742de1b919abf,1518806875,60,,,,,"      this.writer = null;",,,7441
2965,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/common/src/main/java/com/netflix/iceberg/common/DynConstructors.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,123,a370d3d77cc70f9fddf3984a99da96f540128b9d,1524071540,128,,,,,"      this.baseClass = null;",,,7441
2966,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,185,8d92f92d411a9397874191df2308adccdab71f83,1551808033,217,,,,,"      this.spec = null;",,,7441
2967,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,186,8d92f92d411a9397874191df2308adccdab71f83,1551808033,218,,,,,"      this.partitionData = null;",,,7441
2968,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,200,8d92f92d411a9397874191df2308adccdab71f83,1551808033,232,,,,,"      this.filePath = null;",,,7441
2969,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,201,8d92f92d411a9397874191df2308adccdab71f83,1551808033,233,,,,,"      this.format = null;",,,7441
2970,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,205,8d92f92d411a9397874191df2308adccdab71f83,1551808033,237,,,,,"      this.columnSizes = null;",,,7441
2971,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,206,8d92f92d411a9397874191df2308adccdab71f83,1551808033,238,,,,,"      this.valueCounts = null;",,,7441
2972,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,207,8d92f92d411a9397874191df2308adccdab71f83,1551808033,241,,,,,"      this.nullValueCounts = null;",,,7441
2973,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,208,455195774c9eef6717ec02cdcb60bdda378a0898,1515607692,208,75088f6875fc8d3cc4c3af38899742de1b919abf,1518806875,-1,1518806875/1513643108,"      this.distinctCounts = null;","       this.columnSizes = null;
       this.valueCounts = null;
       this.nullValueCounts = null;
-      this.distinctCounts = null;
     }
 
     public Builder copy(DataFile toCopy) {
",,7441
2974,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,310,8d92f92d411a9397874191df2308adccdab71f83,1551808033,366,,,,,"          filePath, format, isPartitioned ? partitionData.copy() : null,",,,7441
2975,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/FastAppend.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,74,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,77,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,-1,1544059206/1513643108,"      newManifestLocation = null;","   }
 
   @Override
-  protected void cleanUncommitted(Set<String> committed) {
-    if (!committed.contains(newManifestLocation)) {
-      deleteFile(newManifestLocation);
+  protected void cleanUncommitted(Set<ManifestFile> committed) {
+    if (!committed.contains(newManifest)) {
+      deleteFile(newManifest.path());
     }
   }
 
-  private String writeManifest() {
-    if (hasNewFiles && newManifestLocation != null) {
-      deleteFile(newManifestLocation);
-      hasNewFiles = false;
-      newManifestLocation = null;
+  private ManifestFile writeManifest() throws IOException {
+    if (hasNewFiles && newManifest != null) {
+      deleteFile(newManifest.path());
+      newManifest = null;
     }
 
-    if (newManifestLocation == null) {
+    if (newManifest == null) {
       OutputFile out = manifestPath(0);
 
-      try (ManifestWriter writer = new ManifestWriter(spec, out, snapshotId())) {
-
+      ManifestWriter writer = new ManifestWriter(spec, out, snapshotId());
+      try {
         writer.addAll(newFiles);
-
-      } catch (IOException e) {
-        throw new RuntimeIOException(e, ""Failed to write manifest: %s"", out);
+      } finally {
+        writer.close();
       }
 
-      this.newManifestLocation = out.location();
+      this.newManifest = writer.toManifestFile();
+      hasNewFiles = false;
     }
 
-    return newManifestLocation;
+    return newManifest;
   }
 }
",,7441
2976,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,105,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,114,,,,,"    this.fileOrdinal = null;",,,7441
2977,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,106,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,115,,,,,"    this.sortColumns = null;",,,7441
2978,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,107,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,116,,,,,"    this.columnSizes = null;",,,7441
2979,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,108,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,117,,,,,"    this.valueCounts = null;",,,7441
2980,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,109,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,118,,,,,"    this.nullValueCounts = null;",,,7441
2981,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,110,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,120,75088f6875fc8d3cc4c3af38899742de1b919abf,1518806875,-1,1518806875/1513643108,"    this.distinctCounts = null;","     this.columnSizes = null;
     this.valueCounts = null;
     this.nullValueCounts = null;
-    this.distinctCounts = null;
     this.fromProjectionPos = null;
   }
 
",,7441
2982,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,111,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,119,,,,,"    this.fromProjectionPos = null;",,,7441
2983,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,123,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,133,,,,,"    this.fileOrdinal = null;",,,7441
2984,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,124,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,134,,,,,"    this.sortColumns = null;",,,7441
2985,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,125,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,135,,,,,"    this.columnSizes = null;",,,7441
2986,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,126,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,136,,,,,"    this.valueCounts = null;",,,7441
2987,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,127,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,137,,,,,"    this.nullValueCounts = null;",,,7441
2988,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,128,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,140,75088f6875fc8d3cc4c3af38899742de1b919abf,1518806875,-1,1518806875/1513643108,"    this.distinctCounts = null;","     this.columnSizes = null;
     this.valueCounts = null;
     this.nullValueCounts = null;
-    this.distinctCounts = null;
     this.fromProjectionPos = null;
   }
 
",,7441
2989,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,129,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,138,,,,,"    this.fromProjectionPos = null;",,,7441
2990,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,150,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,161,,,,,"    this.fileOrdinal = null;",,,7441
2991,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,151,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,162,,,,,"    this.sortColumns = null;",,,7441
2992,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,156,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,168,,,,,"    this.fromProjectionPos = null;",,,7441
2993,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/SchemaUpdate.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,57,18c8c1e459cb2d9d61d751630d4aad08020a8a01,1547502336,64,,,,,"    this.ops = null;",,,7441
2994,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/SchemaUpdate.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,58,18c8c1e459cb2d9d61d751630d4aad08020a8a01,1547502336,65,,,,,"    this.base = null;",,,7441
2995,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/StreamingDelete.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,153,ab84940b24e58b366f1bd8f3bd4ae57d3fa0bf59,1519161123,149,256df979a7cfc758bee4925047875c431379e24d,1522974421,-1,1522974421/1513643108,"      filtered = null;"," 
       // only use the new manifest if this produced changes.
       String filtered;
-      if (selectedFilesCount == 0) {
-        deleteFile(filteredCopy.location());
-        filtered = null;
-      } else if (deletedFilesCount > 0) {
+      if (deletedFilesCount > 0) {
         filtered = filteredCopy.location();
       } else {
         deleteFile(filteredCopy.location());
",,7441
2996,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/ParquetWriteAdapter.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,44,5e6bf4adbefe8bffb16675ef68601e4db5b0d942,1553035311,63,,,,,"      this.writer = null;",,,7441
2997,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/PruneColumns.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,61,,,,,,,,"      this.current = null;",,,7441
2998,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/IcebergSource.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,138,4000069ce50c525159c362b13355eb9887b30f2a,1513804847,143,,,,,"      this.tasks = null; // invalidate cached tasks, if present",,,7441
2999,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/IcebergSource.java,a5eb3f6ba171ecfc517a4f09ae9654e7d8ae0291,1513643108,268,4000069ce50c525159c362b13355eb9887b30f2a,1513804847,294,ed4c938b2072bf5f0db5036696e3d0c086a0ac86,1513971316,-1,1513971316/1513643108,"      this.closeable = (rows instanceof Closeable) ? (Closeable) rows : null;"," 
     throw new IllegalArgumentException(""Cannot open table without a location"");
   }
-
-  private static class Reader implements DataSourceV2Reader, SupportsScanUnsafeRow,
-      SupportsPushDownRequiredColumns, SupportsPushDownFilters, SupportsReportStatistics {
-    private final Table table;
-    private final String location;
-    private final SerializableConfiguration conf;
-    private Schema schema = null;
-    private StructType type = null; // cached because Spark accesses it multiple times
-    private List<Expression> filterExpressions = null;
-    private Filter[] pushedFilters = NO_FILTERS;
-    private List<FileScanTask> tasks = null; // lazy cache of tasks
-
-    private Reader(Table table, String location, Configuration conf) {
-      this.table = table;
-      this.location = location;
-      this.conf = new SerializableConfiguration(conf);
-      this.schema = table.schema();
-      this.type = convert(schema);
-    }
-
-    @Override
-    public StructType readSchema() {
-      return type; // this is called from
-    }
-
-    @Override
-    public List<ReadTask<UnsafeRow>> createUnsafeRowReadTasks() {
-      String schemaString;
-      try {
-        schemaString = SchemaParser.toJson(schema);
-      } catch (IOException e) {
-        throw new RuntimeIOException(e);
-      }
-
-      List<ReadTask<UnsafeRow>> readTasks = Lists.newArrayList();
-      for (FileScanTask fileTask : tasks()) {
-        readTasks.add(new ScanTask(fileTask, schemaString, conf));
-      }
-
-      return readTasks;
-    }
-
-    @Override
-    public Filter[] pushFilters(Filter[] filters) {
-      // TODO: this needs to add columns to the projection
-      this.tasks = null; // invalidate cached tasks, if present
-
-      List<Expression> expressions = Lists.newArrayListWithExpectedSize(filters.length);
-      List<Filter> pushed = Lists.newArrayListWithExpectedSize(filters.length);
-      List<Filter> notSupported = Lists.newArrayListWithExpectedSize(0);
-
-      for (Filter filter : filters) {
-        Expression expr = SparkFilters.convert(filter);
-        if (expr != null) {
-          expressions.add(expr);
-          pushed.add(filter);
-        } else {
-          notSupported.add(filter);
-        }
-      }
-
-      this.filterExpressions = expressions;
-      this.pushedFilters = pushed.toArray(new Filter[pushed.size()]);
-
-      return notSupported.toArray(new Filter[notSupported.size()]);
-    }
-
-    @Override
-    public Filter[] pushedFilters() {
-      return pushedFilters;
-    }
-
-    @Override
-    public void pruneColumns(StructType requiredSchema) {
-      this.schema = prune(table.schema(), requiredSchema);
-      this.type = convert(schema);
-    }
-
-    @Override
-    public Statistics getStatistics() {
-      long sizeInBytes = 0L;
-      long numRows = 0L;
-
-      for (FileScanTask task : tasks) {
-        sizeInBytes += task.length();
-        numRows += task.file().recordCount();
-      }
-
-      return new Stats(sizeInBytes, numRows);
-    }
-
-    private List<FileScanTask> tasks() {
-      if (tasks == null) {
-        TableScan scan = table.newScan().select(SNAPSHOT_COLUMNS);
-
-        if (filterExpressions != null) {
-          for (Expression filter : filterExpressions) {
-            scan = scan.filter(filter);
-          }
-        }
-
-        this.tasks = Lists.newArrayList(scan.planFiles());
-      }
-
-      return tasks;
-    }
-
-    @Override
-    public String toString() {
-      return String.format(
-          ""IcebergTable(location=%s, type=%s, filters=%s)"",
-          location, schema.asStruct(), filterExpressions);
-    }
-  }
-
-  private static class ScanTask implements ReadTask<UnsafeRow>, Serializable {
-    private final FileScanTask task;
-    private final String schemaString;
-    private final SerializableConfiguration conf;
-
-    private transient UnsafeTransform transform = null;
-    private transient Schema schema = null;
-    private transient StructType type = null;
-
-    private ScanTask(FileScanTask task, String schemaString, SerializableConfiguration conf) {
-      this.task = task;
-      this.schemaString = schemaString;
-      this.conf = conf;
-    }
-
-    @Override
-    public DataReader<UnsafeRow> createDataReader() {
-      DataFile file = task.file();
-      InputFile location = HadoopInputFile.fromLocation(file.path(), conf.value());
-      Schema schema = lazySchema();
-
-      switch (file.format()) {
-        case PARQUET:
-          // TODO: need to add the partition columns to the output rows for identity partitions
-          Iterable<UnsafeRow> reader = Parquet.read(location)
-              .project(schema)
-              .split(task.start(), task.length())
-              .readSupport(new ParquetReadSupport())
-              .filter(task.residual())
-              .set(""org.apache.spark.sql.parquet.row.requested_schema"", lazyType().json())
-              .set(""spark.sql.parquet.binaryAsString"", ""false"")
-              .set(""spark.sql.parquet.int96AsTimestamp"", ""false"")
-              .callInit()
-              .build();
-
-          return new IteratorReader(reader.iterator());
-
-        case AVRO:
-          Iterable<InternalRow> avro = Avro.read(location)
-              .reuseContainers()
-              .project(schema)
-              .split(task.start(), task.length())
-              .createReaderFunc(SparkAvroReader::new)
-              .build();
-
-          return new IteratorReader(Iterators.transform(avro.iterator(), lazyTransform()));
-
-        default:
-          throw new UnsupportedOperationException(""Cannot read unknown format: "" + file.format());
-      }
-    }
-
-    private UnsafeTransform lazyTransform() {
-      if (transform == null) {
-        this.transform = new UnsafeTransform(UnsafeProjection.create(lazyType()));
-      }
-      return transform;
-    }
-
-    private StructType lazyType() {
-      if (type == null) {
-        this.type = SparkSchemaUtil.convert(lazySchema());
-      }
-      return type;
-    }
-
-    private Schema lazySchema() {
-      if (schema == null) {
-        this.schema = SchemaParser.fromJson(schemaString);
-      }
-      return schema;
-    }
-  }
-
-  private static class IteratorReader implements DataReader<UnsafeRow> {
-    private final Iterator<UnsafeRow> rows;
-    private final Closeable closeable;
-    private UnsafeRow current = null;
-
-    private IteratorReader(Iterator<UnsafeRow> rows) {
-      this.rows = rows;
-      this.closeable = (rows instanceof Closeable) ? (Closeable) rows : null;
-    }
-
-    @Override
-    public boolean next() throws IOException {
-      if (rows.hasNext()) {
-        this.current = rows.next();
-        return true;
-      }
-      return false;
-    }
-
-    @Override
-    public UnsafeRow get() {
-      return current;
-    }
-
-    @Override
-    public void close() throws IOException {
-      if (closeable != null) {
-        closeable.close();
-      }
-    }
-  }
-
-  private static class Stats implements Statistics {
-    private final OptionalLong sizeInBytes;
-    private final OptionalLong numRows;
-
-    private Stats(long sizeInBytes, long numRows) {
-      this.sizeInBytes = OptionalLong.of(sizeInBytes);
-      this.numRows = OptionalLong.of(numRows);
-    }
-
-    @Override
-    public OptionalLong sizeInBytes() {
-      return sizeInBytes;
-    }
-
-    @Override
-    public OptionalLong numRows() {
-      return numRows;
-    }
-  }
 }
",,7441
3000,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/data/TestParquetScan.java,fdf5b54268d7e8ca69b43555c7490fdbc6360350,1513804847,71,,,,,,,,"    TestParquetScan.spark = null;",,,7441
3001,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Reader.java,ed4c938b2072bf5f0db5036696e3d0c086a0ac86,1513971316,113,5e37ff424a7be3a5ac107421d41e5df8c0dbe33c,1552956399,158,,,,,"    this.tasks = null; // invalidate cached tasks, if present",,,7441
3002,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Reader.java,ed4c938b2072bf5f0db5036696e3d0c086a0ac86,1513971316,261,f68f13cca16bdddb6aeffd0d03bdc867d9b92337,1520987405,532,,,,,"      this.closeable = (rows instanceof Closeable) ? (Closeable) rows : null;",,,7441
3003,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestParquetScan.java,a8588a3d781f4e7edb1ddb4dd5b3352c98dc811c,1513971316,71,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,72,,,,,"    TestParquetScan.spark = null;",,,7441
3004,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestAvroScan.java,8ebca0134cd7504af2555593547dfb3ab51210d1,1513971316,64,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,67,,,,,"    TestAvroScan.spark = null;",,,7441
3005,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,332960acaad213ac3747709aa7aa5135cf7833b9,1513973373,307,b88ff12e60dc8048ee21c914a3840d2027cd8b16,1516405045,309,,,,,"        this.appender = null;",,,7441
3006,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,332960acaad213ac3747709aa7aa5135cf7833b9,1513973373,382,67fbe5da00c1e3da5893c462b4b40e274b4b1fba,1546995354,425,,,,,"        this.currentAppender = null;",,,7441
3007,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,332960acaad213ac3747709aa7aa5135cf7833b9,1513973373,390,0342f23a37d25c4e80c0cc0d82acae2c673e062d,1544560619,448,,,,,"        this.currentAppender = null;",,,7441
3008,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestParquetWrite.java,332960acaad213ac3747709aa7aa5135cf7833b9,1513973373,65,0342f23a37d25c4e80c0cc0d82acae2c673e062d,1544560619,66,,,,,"    TestParquetWrite.spark = null;",,,7441
3009,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestDataFrameWrites.java,3aac7e83c761991fb02a8fdb8b5a40c6d8470f43,1513973398,88,0342f23a37d25c4e80c0cc0d82acae2c673e062d,1544560619,91,d6fd74dcc4370cd957245fbf3aa73b34e3630e9d,1514923612,-1,1514923612/1513973398,"    TestAvroWrite.spark = null;","     };
   }
 
-  public TestAvroWrite(String format) {
+  public TestDataFrameWrites(String format) {
     this.format = format;
   }
 
-  @Rule
-  public TemporaryFolder temp = new TemporaryFolder();
-
   private static SparkSession spark = null;
   private static JavaSparkContext sc = null;
 
   @BeforeClass
   public static void startSpark() {
-    TestAvroWrite.spark = SparkSession.builder().master(""local[2]"").getOrCreate();
-    TestAvroWrite.sc = new JavaSparkContext(spark.sparkContext());
+    TestDataFrameWrites.spark = SparkSession.builder().master(""local[2]"").getOrCreate();
+    TestDataFrameWrites.sc = new JavaSparkContext(spark.sparkContext());
   }
 
   @AfterClass
   public static void stopSpark() {
-    SparkSession spark = TestAvroWrite.spark;
-    TestAvroWrite.spark = null;
-    TestAvroWrite.sc = null;
+    SparkSession spark = TestDataFrameWrites.spark;
+    TestDataFrameWrites.spark = null;
+    TestDataFrameWrites.sc = null;
     spark.stop();
   }
 
",,7441
3010,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestDataFrameWrites.java,3aac7e83c761991fb02a8fdb8b5a40c6d8470f43,1513973398,89,,,,d6fd74dcc4370cd957245fbf3aa73b34e3630e9d,1514923612,-1,1514923612/1513973398,"    TestAvroWrite.sc = null;","     };
   }
 
-  public TestAvroWrite(String format) {
+  public TestDataFrameWrites(String format) {
     this.format = format;
   }
 
-  @Rule
-  public TemporaryFolder temp = new TemporaryFolder();
-
   private static SparkSession spark = null;
   private static JavaSparkContext sc = null;
 
   @BeforeClass
   public static void startSpark() {
-    TestAvroWrite.spark = SparkSession.builder().master(""local[2]"").getOrCreate();
-    TestAvroWrite.sc = new JavaSparkContext(spark.sparkContext());
+    TestDataFrameWrites.spark = SparkSession.builder().master(""local[2]"").getOrCreate();
+    TestDataFrameWrites.sc = new JavaSparkContext(spark.sparkContext());
   }
 
   @AfterClass
   public static void stopSpark() {
-    SparkSession spark = TestAvroWrite.spark;
-    TestAvroWrite.spark = null;
-    TestAvroWrite.sc = null;
+    SparkSession spark = TestDataFrameWrites.spark;
+    TestDataFrameWrites.spark = null;
+    TestDataFrameWrites.sc = null;
     spark.stop();
   }
 
",,7441
3011,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestDataFrameWrites.java,d6fd74dcc4370cd957245fbf3aa73b34e3630e9d,1514923612,83,0342f23a37d25c4e80c0cc0d82acae2c673e062d,1544560619,90,,,,,"    TestDataFrameWrites.spark = null;",,,7441
3012,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestDataFrameWrites.java,d6fd74dcc4370cd957245fbf3aa73b34e3630e9d,1514923612,84,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,88,,,,,"    TestDataFrameWrites.sc = null;",,,7441
3013,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestSparkReadProjection.java,3097bd89e93a0761fc8b1432292619a1b58cb48a,1515091241,64,,,,,,,,"    TestSparkReadProjection.spark = null;",,,7441
3014,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestFilteredScan.java,d71b419d5f84abb4a93e14b1b8ddb789e629f227,1515448746,126,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,138,,,,,"    TestFilteredScan.spark = null;",,,7441
3015,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/PruneColumnsWithReordering.java,731d12d3e70e1e01c640c8c84cbd5fba76c5c0eb,1515531624,64,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,67,,,,,"      this.current = null;",,,7441
3016,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/PruneColumnsWithoutReordering.java,731d12d3e70e1e01c640c8c84cbd5fba76c5c0eb,1515531624,63,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,66,,,,,"      this.current = null;",,,7441
3017,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Reader.java,731d12d3e70e1e01c640c8c84cbd5fba76c5c0eb,1515531624,155,5e37ff424a7be3a5ac107421d41e5df8c0dbe33c,1552956399,175,,,,,"    this.schema = null;",,,7441
3018,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Reader.java,731d12d3e70e1e01c640c8c84cbd5fba76c5c0eb,1515531624,156,5e37ff424a7be3a5ac107421d41e5df8c0dbe33c,1552956399,176,,,,,"    this.type = null;",,,7441
3019,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Reader.java,731d12d3e70e1e01c640c8c84cbd5fba76c5c0eb,1515531624,171,5e37ff424a7be3a5ac107421d41e5df8c0dbe33c,1552956399,193,,,,,"    this.schema = null;",,,7441
3020,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Reader.java,731d12d3e70e1e01c640c8c84cbd5fba76c5c0eb,1515531624,172,5e37ff424a7be3a5ac107421d41e5df8c0dbe33c,1552956399,194,,,,,"    this.type = null;",,,7441
3021,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestSparkReadProjection.java,731d12d3e70e1e01c640c8c84cbd5fba76c5c0eb,1515531624,82,dd009546eb291e19320aa3fe7bf49e7813c6a72d,1544463315,85,,,,,"    TestSparkReadProjection.spark = null;",,,7441
3022,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/com/netflix/iceberg/types/CheckReadability.java,a574ea6d678d23db727d2eae684d039a2b8027ae,1516383371,58,,,,,,,,"      this.currentType = null;",,,7441
3023,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/com/netflix/iceberg/types/ReassignIds.java,d4f2904f5284d1eea53c70ce1235c8ebd6d31ef3,1516405045,39,0de4ca4a5a3d8d2fef73fa5957fad1cb072195a6,1545336358,42,,,,,"      this.sourceType = null;",,,7441
3024,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/com/netflix/iceberg/types/CheckCompatibility.java,60e6eb888a2edf3a97de52cdb1a4e1a78e48d55b,1516405045,73,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,76,,,,,"      this.currentType = null;",,,7441
3025,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,454aba7c4caf7e79892beb3800157799140ad3ea,1518469854,302,5a8f5eca7df6f48ef4d3d837b3405c9938394b11,1523313688,325,,,,,"        this.appender = null;",,,7441
3026,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,454aba7c4caf7e79892beb3800157799140ad3ea,1518469854,385,51c45131491629b3145490746a4ebe3e861b75e1,1518556093,392,,,,,"        this.currentAppender = null;",,,7441
3027,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/util/BinPacking.java,f3daca81616d56494b9f2ccd88f114b6f41fa9ef,1519161110,62,,,,6b78b7c4b3747ad6dd43c31f3cd0915d956169d1,1522974381,-1,1522974381/1519161110,"        this.weightFunc = null;"," 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableList;
+import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
+import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.List;
+import java.util.NoSuchElementException;
 import java.util.function.Function;
 
 public class BinPacking {
-  public static class ListPacker<T> extends Packer<T> {
-    private final List<List<T>> bins = Lists.newArrayList();
-    private Function<T, Long> weightFunc = null;
-    private boolean reverseBins = false;
-
-    public ListPacker(long targetWeight, int lookback) {
-      super(targetWeight, lookback);
-    }
-
-    @Override
-    protected long weigh(T item) {
-      return weightFunc.apply(item);
-    }
-
-    @Override
-    protected void output(List<T> bin) {
-      if (reverseBins) {
-        bins.add(Lists.reverse(bin));
-      } else {
-        bins.add(bin);
-      }
-    }
-
-    public List<List<T>> packEnd(List<T> items, Function<T, Long> weightFunc) {
-      bins.clear();
-      this.weightFunc = weightFunc;
-
-      try {
-        reverseBins = true;
-        pack(Lists.reverse(items));
-        return Lists.reverse(ImmutableList.copyOf(bins));
-
-      } finally {
-        reverseBins = false;
-        bins.clear();
-        this.weightFunc = null;
-      }
-    }
-
-    public List<List<T>> pack(Iterable<T> items, Function<T, Long> weightFunc) {
-      bins.clear();
-      this.weightFunc = weightFunc;
-
-      try {
-        reverseBins = false;
-        pack(items);
-        return ImmutableList.copyOf(bins);
-
-      } finally {
-        bins.clear();
-        this.weightFunc = null;
-      }
-    }
-  }
-
-  private abstract static class Packer<T> {
+  public static class ListPacker<T> {
     private final long targetWeight;
     private final int lookback;
 
-    protected Packer(long targetWeight, int lookback) {
-      Preconditions.checkArgument(lookback > 0,
-          ""Bin look-back size must be greater than 0: %s"", lookback);
+    public ListPacker(long targetWeight, int lookback) {
       this.targetWeight = targetWeight;
       this.lookback = lookback;
     }
 
-    protected abstract long weigh(T item);
+    public List<List<T>> packEnd(List<T> items, Function<T, Long> weightFunc) {
+      return Lists.reverse(ImmutableList.copyOf(Iterables.transform(
+          new PackingIterable<>(Lists.reverse(items), targetWeight, lookback, weightFunc),
+          Lists::reverse)));
+    }
 
-    protected abstract void output(List<T> bin);
+    public List<List<T>> pack(Iterable<T> items, Function<T, Long> weightFunc) {
+      return ImmutableList.copyOf(new PackingIterable<>(items, targetWeight, lookback, weightFunc));
+    }
+  }
 
-    @SuppressWarnings(""unchecked"")
-    protected void pack(Iterable<T> items) {
-      LinkedList<Bin> bins = Lists.newLinkedList();
+  public static class PackingIterable<T> implements Iterable<List<T>> {
+    private final Iterable<T> iterable;
+    private final long targetWeight;
+    private final int lookback;
+    private final Function<T, Long> weightFunc;
 
-      for (T item : items) {
-        long weight = weigh(item);
+    public PackingIterable(Iterable<T> iterable, long targetWeight, int lookback,
+                           Function<T, Long> weightFunc) {
+      Preconditions.checkArgument(lookback > 0,
+          ""Bin look-back size must be greater than 0: %s"", lookback);
+      this.iterable = iterable;
+      this.targetWeight = targetWeight;
+      this.lookback = lookback;
+      this.weightFunc = weightFunc;
+    }
+
+    @Override
+    public Iterator<List<T>> iterator() {
+      return new PackingIterator<>(iterable.iterator(), targetWeight, lookback, weightFunc);
+    }
+  }
+
+  private static class PackingIterator<T> implements Iterator<List<T>> {
+    private final LinkedList<Bin> bins = Lists.newLinkedList();
+    private final Iterator<T> items;
+    private final long targetWeight;
+    private final int lookback;
+    private final Function<T, Long> weightFunc;
+
+    private PackingIterator(Iterator<T> items, long targetWeight, int lookback,
+                            Function<T, Long> weightFunc) {
+      this.items = items;
+      this.targetWeight = targetWeight;
+      this.lookback = lookback;
+      this.weightFunc = weightFunc;
+    }
+
+    public boolean hasNext() {
+      return items.hasNext() || !bins.isEmpty();
+    }
+
+    public List<T> next() {
+      while (items.hasNext()) {
+        T item = items.next();
+
+        long weight = weightFunc.apply(item);
         Bin bin = find(bins, weight);
 
         if (bin != null) {
",,7441
3028,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/util/BinPacking.java,f3daca81616d56494b9f2ccd88f114b6f41fa9ef,1519161110,77,,,,6b78b7c4b3747ad6dd43c31f3cd0915d956169d1,1522974381,-1,1522974381/1519161110,"        this.weightFunc = null;"," 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableList;
+import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
+import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.List;
+import java.util.NoSuchElementException;
 import java.util.function.Function;
 
 public class BinPacking {
-  public static class ListPacker<T> extends Packer<T> {
-    private final List<List<T>> bins = Lists.newArrayList();
-    private Function<T, Long> weightFunc = null;
-    private boolean reverseBins = false;
-
-    public ListPacker(long targetWeight, int lookback) {
-      super(targetWeight, lookback);
-    }
-
-    @Override
-    protected long weigh(T item) {
-      return weightFunc.apply(item);
-    }
-
-    @Override
-    protected void output(List<T> bin) {
-      if (reverseBins) {
-        bins.add(Lists.reverse(bin));
-      } else {
-        bins.add(bin);
-      }
-    }
-
-    public List<List<T>> packEnd(List<T> items, Function<T, Long> weightFunc) {
-      bins.clear();
-      this.weightFunc = weightFunc;
-
-      try {
-        reverseBins = true;
-        pack(Lists.reverse(items));
-        return Lists.reverse(ImmutableList.copyOf(bins));
-
-      } finally {
-        reverseBins = false;
-        bins.clear();
-        this.weightFunc = null;
-      }
-    }
-
-    public List<List<T>> pack(Iterable<T> items, Function<T, Long> weightFunc) {
-      bins.clear();
-      this.weightFunc = weightFunc;
-
-      try {
-        reverseBins = false;
-        pack(items);
-        return ImmutableList.copyOf(bins);
-
-      } finally {
-        bins.clear();
-        this.weightFunc = null;
-      }
-    }
-  }
-
-  private abstract static class Packer<T> {
+  public static class ListPacker<T> {
     private final long targetWeight;
     private final int lookback;
 
-    protected Packer(long targetWeight, int lookback) {
-      Preconditions.checkArgument(lookback > 0,
-          ""Bin look-back size must be greater than 0: %s"", lookback);
+    public ListPacker(long targetWeight, int lookback) {
       this.targetWeight = targetWeight;
       this.lookback = lookback;
     }
 
-    protected abstract long weigh(T item);
+    public List<List<T>> packEnd(List<T> items, Function<T, Long> weightFunc) {
+      return Lists.reverse(ImmutableList.copyOf(Iterables.transform(
+          new PackingIterable<>(Lists.reverse(items), targetWeight, lookback, weightFunc),
+          Lists::reverse)));
+    }
 
-    protected abstract void output(List<T> bin);
+    public List<List<T>> pack(Iterable<T> items, Function<T, Long> weightFunc) {
+      return ImmutableList.copyOf(new PackingIterable<>(items, targetWeight, lookback, weightFunc));
+    }
+  }
 
-    @SuppressWarnings(""unchecked"")
-    protected void pack(Iterable<T> items) {
-      LinkedList<Bin> bins = Lists.newLinkedList();
+  public static class PackingIterable<T> implements Iterable<List<T>> {
+    private final Iterable<T> iterable;
+    private final long targetWeight;
+    private final int lookback;
+    private final Function<T, Long> weightFunc;
 
-      for (T item : items) {
-        long weight = weigh(item);
+    public PackingIterable(Iterable<T> iterable, long targetWeight, int lookback,
+                           Function<T, Long> weightFunc) {
+      Preconditions.checkArgument(lookback > 0,
+          ""Bin look-back size must be greater than 0: %s"", lookback);
+      this.iterable = iterable;
+      this.targetWeight = targetWeight;
+      this.lookback = lookback;
+      this.weightFunc = weightFunc;
+    }
+
+    @Override
+    public Iterator<List<T>> iterator() {
+      return new PackingIterator<>(iterable.iterator(), targetWeight, lookback, weightFunc);
+    }
+  }
+
+  private static class PackingIterator<T> implements Iterator<List<T>> {
+    private final LinkedList<Bin> bins = Lists.newLinkedList();
+    private final Iterator<T> items;
+    private final long targetWeight;
+    private final int lookback;
+    private final Function<T, Long> weightFunc;
+
+    private PackingIterator(Iterator<T> items, long targetWeight, int lookback,
+                            Function<T, Long> weightFunc) {
+      this.items = items;
+      this.targetWeight = targetWeight;
+      this.lookback = lookback;
+      this.weightFunc = weightFunc;
+    }
+
+    public boolean hasNext() {
+      return items.hasNext() || !bins.isEmpty();
+    }
+
+    public List<T> next() {
+      while (items.hasNext()) {
+        T item = items.next();
+
+        long weight = weightFunc.apply(item);
         Bin bin = find(bins, weight);
 
         if (bin != null) {
",,7441
3029,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/ManifestReader.java,a48b1474177a06a477521cbd35638b19351d1dd2,1519161119,93,fd8a162e4d39aaeaca8da61a96ed62d4f391dfb9,1544039586,108,,,,,"    this.entries = null;",,,7441
3030,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/ManifestReader.java,a48b1474177a06a477521cbd35638b19351d1dd2,1519161119,97,fd8a162e4d39aaeaca8da61a96ed62d4f391dfb9,1544039586,112,,,,,"    this.file = null;",,,7441
3031,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestOrcScan.java,c59138eadcfb4eb2558a15f73c00b54528d02e12,1520981095,79,,,,,,,,"    TestOrcScan.spark = null;",,,7441
3032,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestOrcWrite.java,c59138eadcfb4eb2558a15f73c00b54528d02e12,1520981095,66,,,,,,,,"    TestOrcWrite.spark = null;",,,7441
3033,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Reader.java,b5026afbfe6b6518e145bbe915174566ddfc96cd,1522974377,332,,,,d83097cf76c799cd18a775bd8d32985b28e68199,1522974393,-1,1522974393/1522974377,"        this.currentIterator = null;","     @Override
     public void close() throws IOException {
       // close the current iterator
-      if (currentIterator instanceof Closeable) {
-        ((Closeable) currentIterator).close();
-        this.currentIterator = null;
-      }
+      this.currentCloseable.close();
 
       // exhaust the task iterator
       while (tasks.hasNext()) {
",,7441
3034,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/avro/AvroFileAppender.java,8731b90547e21163cf0dc30bb5aa33a931b02b04,1523048349,60,5e6bf4adbefe8bffb16675ef68601e4db5b0d942,1553035311,81,,,,,"      this.writer = null;",,,7441
3035,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,b6fa5494c28f5e99a52af1ce3963352b4dc1aaf5,1523379034,372,0342f23a37d25c4e80c0cc0d82acae2c673e062d,1544560619,367,,,,,"        this.appender = null;",,,7441
3036,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/avro/ValueReaders.java,71d0657738fa6bdce4df0ead075afba77d93e619,1524071540,425,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,429,,,,,"        this.lastList = null;",,,7441
3037,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/avro/ValueReaders.java,71d0657738fa6bdce4df0ead075afba77d93e619,1524071540,460,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,464,,,,,"        this.lastMap = null;",,,7441
3038,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/avro/ValueReaders.java,71d0657738fa6bdce4df0ead075afba77d93e619,1524071540,514,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,518,,,,,"        this.lastMap = null;",,,7441
3039,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/data/TestHelpers.java,0f9370b5d0346826296e3cbb6ada591760fd4cf5,1524071540,499,146094ac0b601e90754bd0d992458c14b8da2edd,1553029421,507,,,,,"            data[i] = null;",,,7441
3040,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,60645579c4c4e6c8de89758ee22034667c4a8e48,1525283684,209,8d92f92d411a9397874191df2308adccdab71f83,1551808033,239,,,,,"      this.nullValueCounts = null;",,,7441
3041,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,60645579c4c4e6c8de89758ee22034667c4a8e48,1525283684,210,8d92f92d411a9397874191df2308adccdab71f83,1551808033,240,,,,,"      this.lowerBounds = null;",,,7441
3042,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,60645579c4c4e6c8de89758ee22034667c4a8e48,1525283684,106,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,121,,,,,"    this.fromProjectionPos = null;",,,7441
3043,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericDataFile.java,60645579c4c4e6c8de89758ee22034667c4a8e48,1525283684,124,1a78ed5de193f0b7040e9d7da6c0da5ba96a2ac7,1551831676,139,,,,,"    this.upperBounds = null;",,,7441
3044,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/PageIterator.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,147,6a4924dd02f7131eed7782b0e2212f046a50c56d,1547238815,151,,,,,"    this.page = null;",,,7441
3045,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/PageIterator.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,150,6a4924dd02f7131eed7782b0e2212f046a50c56d,1547238815,154,,,,,"    this.definitionLevels = null;",,,7441
3046,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/PageIterator.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,151,6a4924dd02f7131eed7782b0e2212f046a50c56d,1547238815,155,,,,,"    this.repetitionLevels = null;",,,7441
3047,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/PageIterator.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,152,6a4924dd02f7131eed7782b0e2212f046a50c56d,1547238815,156,,,,,"    this.values = null;",,,7441
3048,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/ParquetAvroValueReaders.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,421,,,,9aea28aa49aafefce1294224be50cbcd0f65fcf5,1536703484,-1,1536703484/1530226696,"        this.lastList = null;","     }
   }
 
-  static class BytesReader extends ParquetValueReaders.PrimitiveReader<ByteBuffer> {
-    BytesReader(ColumnDescriptor desc) {
+  public static class TimeMillisReader extends UnboxedReader<Long> {
+    TimeMillisReader(ColumnDescriptor desc) {
       super(desc);
     }
 
     @Override
-    public ByteBuffer read(ByteBuffer reuse) {
-      Binary binary = column.nextBinary();
-      ByteBuffer data = binary.toByteBuffer();
-      if (reuse != null && reuse.hasArray() && reuse.capacity() >= data.remaining()) {
-        data.get(reuse.array(), reuse.arrayOffset(), data.remaining());
-        reuse.position(0);
-        reuse.limit(data.remaining());
-        return reuse;
-      } else {
-        byte[] array = new byte[data.remaining()];
-        data.get(array, 0, data.remaining());
-        return ByteBuffer.wrap(array);
-      }
+    public long readLong() {
+      return 1000 * column.nextLong();
     }
   }
 
-  static class ListReader<E> extends RepeatedReader<List<E>, List<E>, E> {
-    private List<E> lastList = null;
-    private Iterator<E> elements = null;
-
-    ListReader(int definitionLevel, int repetitionLevel,
-                      ParquetValueReader<E> reader) {
-      super(definitionLevel, repetitionLevel, reader);
+  public static class TimestampMillisReader extends UnboxedReader<Long> {
+    TimestampMillisReader(ColumnDescriptor desc) {
+      super(desc);
     }
 
     @Override
-    protected List<E> newListData(List<E> reuse) {
-      List<E> list;
-      if (lastList != null) {
-        lastList.clear();
-        list = lastList;
-      } else {
-        list = Lists.newArrayList();
-      }
-
-      if (reuse != null) {
-        this.lastList = reuse;
-        this.elements = reuse.iterator();
-      } else {
-        this.lastList = null;
-        this.elements = Iterators.emptyIterator();
-      }
-
-      return list;
-    }
-
-    @Override
-    protected E getElement(List<E> reuse) {
-      if (elements.hasNext()) {
-        return elements.next();
-      }
-
-      return null;
-    }
-
-    @Override
-    protected void addElement(List<E> list, E element) {
-      list.add(element);
-    }
-
-    @Override
-    protected List<E> buildList(List<E> list) {
-      return list;
-    }
-  }
-
-  static class MapReader<K, V> extends RepeatedKeyValueReader<Map<K, V>, Map<K, V>, K, V> {
-    private final ReusableEntry<K, V> nullEntry = new ReusableEntry<>();
-    private Map<K, V> lastMap = null;
-    private Iterator<Map.Entry<K, V>> pairs = null;
-
-    MapReader(int definitionLevel, int repetitionLevel,
-                        ParquetValueReader<K> keyReader,
-                        ParquetValueReader<V> valueReader) {
-      super(definitionLevel, repetitionLevel, keyReader, valueReader);
-    }
-
-    @Override
-    protected Map<K, V> newMapData(Map<K, V> reuse) {
-      Map<K, V> map;
-      if (lastMap != null) {
-        lastMap.clear();
-        map = lastMap;
-      } else {
-        map = Maps.newLinkedHashMap();
-      }
-
-      if (reuse != null) {
-        this.lastMap = reuse;
-        this.pairs = reuse.entrySet().iterator();
-      } else {
-        this.lastMap = null;
-        this.pairs = Iterators.emptyIterator();
-      }
-
-      return map;
-    }
-
-    @Override
-    protected Map.Entry<K, V> getPair(Map<K, V> map) {
-      if (pairs.hasNext()) {
-        return pairs.next();
-      } else {
-        return nullEntry;
-      }
-    }
-
-    @Override
-    protected void addPair(Map<K, V> map, K key, V value) {
-      map.put(key, value);
-    }
-
-    @Override
-    protected Map<K, V> buildMap(Map<K, V> map) {
-      return map;
+    public long readLong() {
+      return 1000 * column.nextLong();
     }
   }
 
",,7441
3049,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/ParquetAvroValueReaders.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,473,,,,9aea28aa49aafefce1294224be50cbcd0f65fcf5,1536703484,-1,1536703484/1530226696,"        this.lastMap = null;","     }
   }
 
-  static class BytesReader extends ParquetValueReaders.PrimitiveReader<ByteBuffer> {
-    BytesReader(ColumnDescriptor desc) {
+  public static class TimeMillisReader extends UnboxedReader<Long> {
+    TimeMillisReader(ColumnDescriptor desc) {
       super(desc);
     }
 
     @Override
-    public ByteBuffer read(ByteBuffer reuse) {
-      Binary binary = column.nextBinary();
-      ByteBuffer data = binary.toByteBuffer();
-      if (reuse != null && reuse.hasArray() && reuse.capacity() >= data.remaining()) {
-        data.get(reuse.array(), reuse.arrayOffset(), data.remaining());
-        reuse.position(0);
-        reuse.limit(data.remaining());
-        return reuse;
-      } else {
-        byte[] array = new byte[data.remaining()];
-        data.get(array, 0, data.remaining());
-        return ByteBuffer.wrap(array);
-      }
+    public long readLong() {
+      return 1000 * column.nextLong();
     }
   }
 
-  static class ListReader<E> extends RepeatedReader<List<E>, List<E>, E> {
-    private List<E> lastList = null;
-    private Iterator<E> elements = null;
-
-    ListReader(int definitionLevel, int repetitionLevel,
-                      ParquetValueReader<E> reader) {
-      super(definitionLevel, repetitionLevel, reader);
+  public static class TimestampMillisReader extends UnboxedReader<Long> {
+    TimestampMillisReader(ColumnDescriptor desc) {
+      super(desc);
     }
 
     @Override
-    protected List<E> newListData(List<E> reuse) {
-      List<E> list;
-      if (lastList != null) {
-        lastList.clear();
-        list = lastList;
-      } else {
-        list = Lists.newArrayList();
-      }
-
-      if (reuse != null) {
-        this.lastList = reuse;
-        this.elements = reuse.iterator();
-      } else {
-        this.lastList = null;
-        this.elements = Iterators.emptyIterator();
-      }
-
-      return list;
-    }
-
-    @Override
-    protected E getElement(List<E> reuse) {
-      if (elements.hasNext()) {
-        return elements.next();
-      }
-
-      return null;
-    }
-
-    @Override
-    protected void addElement(List<E> list, E element) {
-      list.add(element);
-    }
-
-    @Override
-    protected List<E> buildList(List<E> list) {
-      return list;
-    }
-  }
-
-  static class MapReader<K, V> extends RepeatedKeyValueReader<Map<K, V>, Map<K, V>, K, V> {
-    private final ReusableEntry<K, V> nullEntry = new ReusableEntry<>();
-    private Map<K, V> lastMap = null;
-    private Iterator<Map.Entry<K, V>> pairs = null;
-
-    MapReader(int definitionLevel, int repetitionLevel,
-                        ParquetValueReader<K> keyReader,
-                        ParquetValueReader<V> valueReader) {
-      super(definitionLevel, repetitionLevel, keyReader, valueReader);
-    }
-
-    @Override
-    protected Map<K, V> newMapData(Map<K, V> reuse) {
-      Map<K, V> map;
-      if (lastMap != null) {
-        lastMap.clear();
-        map = lastMap;
-      } else {
-        map = Maps.newLinkedHashMap();
-      }
-
-      if (reuse != null) {
-        this.lastMap = reuse;
-        this.pairs = reuse.entrySet().iterator();
-      } else {
-        this.lastMap = null;
-        this.pairs = Iterators.emptyIterator();
-      }
-
-      return map;
-    }
-
-    @Override
-    protected Map.Entry<K, V> getPair(Map<K, V> map) {
-      if (pairs.hasNext()) {
-        return pairs.next();
-      } else {
-        return nullEntry;
-      }
-    }
-
-    @Override
-    protected void addPair(Map<K, V> map, K key, V value) {
-      map.put(key, value);
-    }
-
-    @Override
-    protected Map<K, V> buildMap(Map<K, V> map) {
-      return map;
+    public long readLong() {
+      return 1000 * column.nextLong();
     }
   }
 
",,7441
3050,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/ParquetReader.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,95,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,119,,,,,"      this.reader = null;",,,7441
3051,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/com/netflix/iceberg/parquet/TestMetricsRowGroupFilter.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,109,3c72c06fa4b48aa827faccbae7e7a7b799059111,1551035015,119,,,,,"        builder.set(""_some_nulls"", (i % 10 == 0) ? null : ""some""); // includes some null values",,,7441
3052,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/data/SparkParquetReaders.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,604,9fc8f0e63353400ef5b4bce3ee4a2446e8ecc6f2,1544719217,653,,,,,"      values[i] = null;",,,7441
3053,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/data/RandomData.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,240,146094ac0b601e90754bd0d992458c14b8da2edd,1553029421,246,,,,,"          arr[i] = null;",,,7441
3054,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/data/RandomData.java,d972f45d93f12d554e1bf50e7b115b3fc8ec3152,1530226696,272,146094ac0b601e90754bd0d992458c14b8da2edd,1553029421,278,,,,,"          valuesArr[i] = null;",,,7441
3055,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/com/netflix/iceberg/parquet/TestDictionaryRowGroupFilter.java,2b417ffaabd00172a67436336a944056cf6beaa6,1530401007,114,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,117,,,,,"          builder.set(""_some_nulls"", (i % 10 == 0) ? null : ""some""); // includes some null values",,,7441
3056,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/BaseTransaction.java,035f24638fa952fb107719228b15faf815a34ea8,1535406845,62,8d92f92d411a9397874191df2308adccdab71f83,1551808033,89,,,,,"    this.lastBase = null;",,,7441
3057,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/SparkTypeToType.java,9a5bf3c14356886a13c30b93a6af7db5728fd7a8,1536011805,48,0de4ca4a5a3d8d2fef73fa5957fad1cb072195a6,1545336358,51,,,,,"    this.root = null;",,,7441
3058,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/ParquetValueReaders.java,9aea28aa49aafefce1294224be50cbcd0f65fcf5,1536703484,401,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,406,,,,,"        this.lastList = null;",,,7441
3059,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/com/netflix/iceberg/parquet/ParquetValueReaders.java,9aea28aa49aafefce1294224be50cbcd0f65fcf5,1536703484,521,1bec13a954c29f8cd09719a0362c0b2829635c77,1542663101,526,,,,,"        this.lastMap = null;",,,7441
3060,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/test/java/com/netflix/iceberg/hive/ScriptRunner.java,718b85d3046561b0d046826f2733021a9511099f,1538350207,190,,,,,,,,"          command = null;",,,7441
3061,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/FastAppend.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,80,e8c5e1812f44fecfa1f8706f942a240a1b42abe5,1551833019,93,,,,,"      newManifest = null;",,,7441
3062,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericManifestFile.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,86,,,,,,,,"    this.length = null; // lazily loaded from file",,,7441
3063,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericManifestFile.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,88,,,,,,,,"    this.snapshotId = null;",,,7441
3064,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericManifestFile.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,89,,,,,,,,"    this.addedFilesCount = null;",,,7441
3065,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericManifestFile.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,90,,,,,,,,"    this.existingFilesCount = null;",,,7441
3066,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericManifestFile.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,91,,,,,,,,"    this.deletedFilesCount = null;",,,7441
3067,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericManifestFile.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,92,,,,,,,,"    this.partitions = null;",,,7441
3068,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericManifestFile.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,93,,,,,,,,"    this.fromProjectionPos = null;",,,7441
3069,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericManifestFile.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,108,,,,,,,,"    this.fromProjectionPos = null;",,,7441
3070,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/GenericPartitionFieldSummary.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,79,,,,,,,,"    this.fromProjectionPos = null;",,,7441
3071,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/MergingSnapshotUpdate.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,292,e8c5e1812f44fecfa1f8706f942a240a1b42abe5,1551833019,310,,,,,"      this.newManifest = null;",,,7441
3072,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/MergingSnapshotUpdate.java,54f9a0ffaa0cc69a25818fcdfbc9b8bfc579fe67,1544059206,500,e8c5e1812f44fecfa1f8706f942a240a1b42abe5,1551833019,524,,,,,"      newManifest = null;",,,7441
3073,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestFilteredScan.java,dd009546eb291e19320aa3fe7bf49e7813c6a72d,1544463315,129,5e37ff424a7be3a5ac107421d41e5df8c0dbe33c,1552956399,129,,,,,"    TestFilteredScan.spark = null;",,,7441
3074,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,67fbe5da00c1e3da5893c462b4b40e274b4b1fba,1546995354,353,,,,,,,,"        this.appender = null;",,,7441
3075,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,67fbe5da00c1e3da5893c462b4b40e274b4b1fba,1546995354,435,,,,,,,,"        this.currentAppender = null;",,,7441
3076,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/DataFiles.java,de29e3401c1b63e0ccd28cb94d6695b658d0ce24,1547492157,198,8d92f92d411a9397874191df2308adccdab71f83,1551808033,225,,,,,"      this.partitionData = isPartitioned ? newPartitionData(spec) : null;",,,7441
3077,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/com/netflix/iceberg/SetLocation.java,d6929a16256de71c951830ebcb60933adddd5151,1547502355,40,,,,,,,,"    this.newLocation = null;",,,7441
3078,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,65ffbc40db4322e44beec4cedb291c51d542044a,1549497942,291,146094ac0b601e90754bd0d992458c14b8da2edd,1553029421,293,,,,,"        this.appender = null;",,,7441
3079,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,65ffbc40db4322e44beec4cedb291c51d542044a,1549497942,362,146094ac0b601e90754bd0d992458c14b8da2edd,1553029421,364,,,,,"        this.currentAppender = null;",,,7441
3080,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/source/Writer.java,65ffbc40db4322e44beec4cedb291c51d542044a,1549497942,372,146094ac0b601e90754bd0d992458c14b8da2edd,1553029421,374,,,,,"        this.currentAppender = null;",,,7441
3081,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/com/netflix/iceberg/spark/source/TestPartitionValues.java,a90c7acca6cc8aec08362b8c193f89b980a8c63d,1551831828,75,,,,,,,,"    TestPartitionValues.spark = null;",,,7441
3082,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/com/netflix/iceberg/parquet/TestParquetMetrics.java,7169e21fc4948ee079191a23dc7a4ce271d1224d,1552947991,249,c383dd87a89e35d622e9c458fd711931cbc5e96f,1553114915,289,,,,,"        lowerBounds.containsKey(fieldId) ? fromByteBuffer(type, lowerBounds.get(fieldId)) : null);",,,7441
3083,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/com/netflix/iceberg/parquet/TestParquetMetrics.java,7169e21fc4948ee079191a23dc7a4ce271d1224d,1552947991,252,c383dd87a89e35d622e9c458fd711931cbc5e96f,1553114915,292,,,,,"        upperBounds.containsKey(fieldId) ? fromByteBuffer(type, upperBounds.get(fieldId)) : null);",,,7441
3084,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/com/netflix/iceberg/spark/data/SparkParquetWriters.java,146094ac0b601e90754bd0d992458c14b8da2edd,1553029421,385,,,,,,,,"          element = null;",,,7441
3085,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/org/apache/iceberg/types/CheckCompatibility.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,76,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,120,,,,,"      this.currentType = null;",,,7441
3086,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/org/apache/iceberg/types/ReassignIds.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,42,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,42,,,,,"      this.sourceType = null;",,,7441
3087,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/common/src/main/java/org/apache/iceberg/common/DynConstructors.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,128,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,131,,,,,"      this.baseClass = null;",,,7441
3088,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/BaseTransaction.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,89,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,83,,,,,"    this.lastBase = null;",,,7441
3089,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,216,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,216,,,,,"      this.spec = null;",,,7441
3090,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,217,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,195,,,,,"      this.partitionData = null;",,,7441
3091,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,224,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,224,,,,,"      this.partitionData = isPartitioned ? newPartitionData(spec) : null;",,,7441
3092,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,231,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,231,,,,,"      this.filePath = null;",,,7441
3093,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,232,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,210,,,,,"      this.format = null;",,,7441
3094,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,236,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,235,,,,,"      this.columnSizes = null;",,,7441
3095,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,237,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,214,,,,,"      this.valueCounts = null;",,,7441
3096,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,238,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,215,,,,,"      this.nullValueCounts = null;",,,7441
3097,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,239,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,217,,,,,"      this.lowerBounds = null;",,,7441
3098,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,240,5d781f19ad0bfdba2523c8483d51bf3cf31c7d81,1557272850,243,,,,,"      this.upperBounds = null;",,,7441
3099,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,365,5d781f19ad0bfdba2523c8483d51bf3cf31c7d81,1557272850,368,,,,,"          filePath, format, isPartitioned ? partitionData.copy() : null,",,,7441
3100,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FastAppend.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,93,e1399fd4c78a4d06e7840afc9aa9a3d45ca548d5,1591137565,178,,,,,"      newManifest = null;",,,7441
3101,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,114,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,118,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.fileOrdinal = null;","     this.partitionType = EMPTY_PARTITION_DATA.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
",,7441
3102,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,115,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,119,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.sortColumns = null;","     this.partitionType = EMPTY_PARTITION_DATA.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
",,7441
3103,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,116,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,120,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.columnSizes = null;","     this.partitionType = EMPTY_PARTITION_DATA.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
",,7441
3104,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,117,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,121,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.valueCounts = null;","     this.partitionType = EMPTY_PARTITION_DATA.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
",,7441
3105,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,118,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,122,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.nullValueCounts = null;","     this.partitionType = EMPTY_PARTITION_DATA.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
",,7441
3106,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,119,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,123,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.lowerBounds = null;","     this.partitionType = EMPTY_PARTITION_DATA.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
",,7441
3107,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,120,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,124,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.upperBounds = null;","     this.partitionType = EMPTY_PARTITION_DATA.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
",,7441
3108,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,121,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,125,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.fromProjectionPos = null;","     this.partitionType = EMPTY_PARTITION_DATA.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
",,7441
3109,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,133,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,136,,,,,"    this.fileOrdinal = null;",,,7441
3110,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,134,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,137,,,,,"    this.sortColumns = null;",,,7441
3111,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,135,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,138,,,,,"    this.columnSizes = null;",,,7441
3112,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,136,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,139,,,,,"    this.valueCounts = null;",,,7441
3113,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,137,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,140,,,,,"    this.nullValueCounts = null;",,,7441
3114,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,138,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,141,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.lowerBounds = null;","     this.partitionType = partition.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
-                  long fileSizeInBytes, Metrics metrics) {
+                  long fileSizeInBytes, Metrics metrics, List<Long> splitOffsets) {
     this.filePath = filePath;
     this.format = format;
 
",,7441
3115,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,139,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,142,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.upperBounds = null;","     this.partitionType = partition.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
-                  long fileSizeInBytes, Metrics metrics) {
+                  long fileSizeInBytes, Metrics metrics, List<Long> splitOffsets) {
     this.filePath = filePath;
     this.format = format;
 
",,7441
3116,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,140,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,143,549da809490976b53a13b14596dd240ed74bce5e,1558042747,-1,1558042747/1553124305,"    this.fromProjectionPos = null;","     this.partitionType = partition.getPartitionType();
     this.recordCount = recordCount;
     this.fileSizeInBytes = fileSizeInBytes;
-    this.fileOrdinal = null;
-    this.sortColumns = null;
-    this.columnSizes = null;
-    this.valueCounts = null;
-    this.nullValueCounts = null;
-    this.lowerBounds = null;
-    this.upperBounds = null;
-    this.fromProjectionPos = null;
   }
 
   GenericDataFile(String filePath, FileFormat format, PartitionData partition,
-                  long fileSizeInBytes, Metrics metrics) {
+                  long fileSizeInBytes, Metrics metrics, List<Long> splitOffsets) {
     this.filePath = filePath;
     this.format = format;
 
",,7441
3117,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,161,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,163,,,,,"    this.fileOrdinal = null;",,,7441
3118,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,162,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,164,,,,,"    this.sortColumns = null;",,,7441
3119,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,168,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,170,,,,,"    this.fromProjectionPos = null;",,,7441
3120,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,86,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,90,,,,,"    this.length = null; // lazily loaded from file",,,7441
3121,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,88,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,94,,,,,"    this.snapshotId = null;",,,7441
3122,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,89,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,95,,,,,"    this.addedFilesCount = null;",,,7441
3123,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,90,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,97,,,,,"    this.existingFilesCount = null;",,,7441
3124,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,91,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,100,,,,,"    this.deletedFilesCount = null;",,,7441
3125,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,92,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,101,,,,,"    this.partitions = null;",,,7441
3126,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,93,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,102,,,,,"    this.fromProjectionPos = null;",,,7441
3127,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,108,77c822de728330e386f8a5a75a1b2143353aa425,1573065378,108,,,,,"    this.fromProjectionPos = null;",,,7441
3128,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericPartitionFieldSummary.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,79,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,81,,,,,"    this.fromProjectionPos = null;",,,7441
3129,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/MergingSnapshotUpdate.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,310,5d781f19ad0bfdba2523c8483d51bf3cf31c7d81,1557272850,319,,,,,"      this.newManifest = null;",,,7441
3130,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/MergingSnapshotUpdate.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,524,5d781f19ad0bfdba2523c8483d51bf3cf31c7d81,1557272850,556,,,,,"      newManifest = null;",,,7441
3131,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/SchemaUpdate.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,64,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,76,,,,,"    this.ops = null;",,,7441
3132,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/SchemaUpdate.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,65,42c1e63333c340210752e879820eedd307f227d4,1573577878,69,,,,,"    this.base = null;",,,7441
3133,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/SetLocation.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,40,5d781f19ad0bfdba2523c8483d51bf3cf31c7d81,1557272850,40,,,,,"    this.newLocation = null;",,,7441
3134,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/avro/AvroFileAppender.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,81,f4fc8ff7ef3495880ef6b360966f9c67544a4386,1564504318,79,,,,,"      this.writer = null;",,,7441
3135,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/avro/ValueReaders.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,429,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,436,,,,,"        this.lastList = null;",,,7441
3136,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/avro/ValueReaders.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,464,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,471,,,,,"        this.lastMap = null;",,,7441
3137,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/avro/ValueReaders.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,518,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,525,,,,,"        this.lastMap = null;",,,7441
3138,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/test/java/org/apache/iceberg/hive/ScriptRunner.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,190,618ec9182f9a25aa06e4aa5668b5b3c6ba65db1f,1572212064,187,,,,,"          command = null;",,,7441
3139,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/PageIterator.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,150,336174b0a4438ed68cdb8e208833e380adaa15fc,1571768248,146,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,-1,1583284428/1553124305,"    this.page = null;","     }
   }
 
-  private final ColumnDescriptor desc;
-  private final String writerVersion;
-
-  // iterator state
-  private boolean hasNext = false;
-  private int triplesRead = 0;
-  private int currentDL = 0;
-  private int currentRL = 0;
-
-  // page bookkeeping
-  private Dictionary dict = null;
-  private DataPage page = null;
-  private int triplesCount = 0;
-  private Encoding valueEncoding = null;
-  private IntIterator definitionLevels = null;
-  private IntIterator repetitionLevels = null;
-  private ValuesReader values = null;
-
   private PageIterator(ColumnDescriptor desc, String writerVersion) {
-    this.desc = desc;
-    this.writerVersion = writerVersion;
+    super(desc, writerVersion);
   }
 
   public void setPage(DataPage page) {
-    Preconditions.checkNotNull(page, ""Cannot read from null page"");
-    this.page = page;
-    this.page.accept(new DataPage.Visitor<ValuesReader>() {
-      @Override
-      public ValuesReader visit(DataPageV1 dataPageV1) {
-        initFromPage(dataPageV1);
-        return null;
-      }
-
-      @Override
-      public ValuesReader visit(DataPageV2 dataPageV2) {
-        initFromPage(dataPageV2);
-        return null;
-      }
-    });
-    this.triplesRead = 0;
+    super.setPage(page);
     advance();
   }
 
-  public void setDictionary(Dictionary dictionary) {
-    this.dict = dictionary;
-  }
-
-  public void reset() {
-    this.page = null;
-    this.triplesCount = 0;
-    this.triplesRead = 0;
-    this.definitionLevels = null;
-    this.repetitionLevels = null;
-    this.values = null;
-    this.hasNext = false;
-  }
-
-  public int currentPageCount() {
-    return triplesCount;
-  }
-
-  @Override
-  public boolean hasNext() {
-    return hasNext;
-  }
-
   @Override
   public int currentDefinitionLevel() {
     Preconditions.checkArgument(currentDL >= 0, ""Should not read definition, past page end"");
",,7441
3140,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/PageIterator.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,153,336174b0a4438ed68cdb8e208833e380adaa15fc,1571768248,149,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,-1,1583284428/1553124305,"    this.definitionLevels = null;","     }
   }
 
-  private final ColumnDescriptor desc;
-  private final String writerVersion;
-
-  // iterator state
-  private boolean hasNext = false;
-  private int triplesRead = 0;
-  private int currentDL = 0;
-  private int currentRL = 0;
-
-  // page bookkeeping
-  private Dictionary dict = null;
-  private DataPage page = null;
-  private int triplesCount = 0;
-  private Encoding valueEncoding = null;
-  private IntIterator definitionLevels = null;
-  private IntIterator repetitionLevels = null;
-  private ValuesReader values = null;
-
   private PageIterator(ColumnDescriptor desc, String writerVersion) {
-    this.desc = desc;
-    this.writerVersion = writerVersion;
+    super(desc, writerVersion);
   }
 
   public void setPage(DataPage page) {
-    Preconditions.checkNotNull(page, ""Cannot read from null page"");
-    this.page = page;
-    this.page.accept(new DataPage.Visitor<ValuesReader>() {
-      @Override
-      public ValuesReader visit(DataPageV1 dataPageV1) {
-        initFromPage(dataPageV1);
-        return null;
-      }
-
-      @Override
-      public ValuesReader visit(DataPageV2 dataPageV2) {
-        initFromPage(dataPageV2);
-        return null;
-      }
-    });
-    this.triplesRead = 0;
+    super.setPage(page);
     advance();
   }
 
-  public void setDictionary(Dictionary dictionary) {
-    this.dict = dictionary;
-  }
-
-  public void reset() {
-    this.page = null;
-    this.triplesCount = 0;
-    this.triplesRead = 0;
-    this.definitionLevels = null;
-    this.repetitionLevels = null;
-    this.values = null;
-    this.hasNext = false;
-  }
-
-  public int currentPageCount() {
-    return triplesCount;
-  }
-
-  @Override
-  public boolean hasNext() {
-    return hasNext;
-  }
-
   @Override
   public int currentDefinitionLevel() {
     Preconditions.checkArgument(currentDL >= 0, ""Should not read definition, past page end"");
",,7441
3141,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/PageIterator.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,154,336174b0a4438ed68cdb8e208833e380adaa15fc,1571768248,150,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,-1,1583284428/1553124305,"    this.repetitionLevels = null;","     }
   }
 
-  private final ColumnDescriptor desc;
-  private final String writerVersion;
-
-  // iterator state
-  private boolean hasNext = false;
-  private int triplesRead = 0;
-  private int currentDL = 0;
-  private int currentRL = 0;
-
-  // page bookkeeping
-  private Dictionary dict = null;
-  private DataPage page = null;
-  private int triplesCount = 0;
-  private Encoding valueEncoding = null;
-  private IntIterator definitionLevels = null;
-  private IntIterator repetitionLevels = null;
-  private ValuesReader values = null;
-
   private PageIterator(ColumnDescriptor desc, String writerVersion) {
-    this.desc = desc;
-    this.writerVersion = writerVersion;
+    super(desc, writerVersion);
   }
 
   public void setPage(DataPage page) {
-    Preconditions.checkNotNull(page, ""Cannot read from null page"");
-    this.page = page;
-    this.page.accept(new DataPage.Visitor<ValuesReader>() {
-      @Override
-      public ValuesReader visit(DataPageV1 dataPageV1) {
-        initFromPage(dataPageV1);
-        return null;
-      }
-
-      @Override
-      public ValuesReader visit(DataPageV2 dataPageV2) {
-        initFromPage(dataPageV2);
-        return null;
-      }
-    });
-    this.triplesRead = 0;
+    super.setPage(page);
     advance();
   }
 
-  public void setDictionary(Dictionary dictionary) {
-    this.dict = dictionary;
-  }
-
-  public void reset() {
-    this.page = null;
-    this.triplesCount = 0;
-    this.triplesRead = 0;
-    this.definitionLevels = null;
-    this.repetitionLevels = null;
-    this.values = null;
-    this.hasNext = false;
-  }
-
-  public int currentPageCount() {
-    return triplesCount;
-  }
-
-  @Override
-  public boolean hasNext() {
-    return hasNext;
-  }
-
   @Override
   public int currentDefinitionLevel() {
     Preconditions.checkArgument(currentDL >= 0, ""Should not read definition, past page end"");
",,7441
3142,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/PageIterator.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,155,336174b0a4438ed68cdb8e208833e380adaa15fc,1571768248,151,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,-1,1583284428/1553124305,"    this.values = null;","     }
   }
 
-  private final ColumnDescriptor desc;
-  private final String writerVersion;
-
-  // iterator state
-  private boolean hasNext = false;
-  private int triplesRead = 0;
-  private int currentDL = 0;
-  private int currentRL = 0;
-
-  // page bookkeeping
-  private Dictionary dict = null;
-  private DataPage page = null;
-  private int triplesCount = 0;
-  private Encoding valueEncoding = null;
-  private IntIterator definitionLevels = null;
-  private IntIterator repetitionLevels = null;
-  private ValuesReader values = null;
-
   private PageIterator(ColumnDescriptor desc, String writerVersion) {
-    this.desc = desc;
-    this.writerVersion = writerVersion;
+    super(desc, writerVersion);
   }
 
   public void setPage(DataPage page) {
-    Preconditions.checkNotNull(page, ""Cannot read from null page"");
-    this.page = page;
-    this.page.accept(new DataPage.Visitor<ValuesReader>() {
-      @Override
-      public ValuesReader visit(DataPageV1 dataPageV1) {
-        initFromPage(dataPageV1);
-        return null;
-      }
-
-      @Override
-      public ValuesReader visit(DataPageV2 dataPageV2) {
-        initFromPage(dataPageV2);
-        return null;
-      }
-    });
-    this.triplesRead = 0;
+    super.setPage(page);
     advance();
   }
 
-  public void setDictionary(Dictionary dictionary) {
-    this.dict = dictionary;
-  }
-
-  public void reset() {
-    this.page = null;
-    this.triplesCount = 0;
-    this.triplesRead = 0;
-    this.definitionLevels = null;
-    this.repetitionLevels = null;
-    this.values = null;
-    this.hasNext = false;
-  }
-
-  public int currentPageCount() {
-    return triplesCount;
-  }
-
-  @Override
-  public boolean hasNext() {
-    return hasNext;
-  }
-
   @Override
   public int currentDefinitionLevel() {
     Preconditions.checkArgument(currentDL >= 0, ""Should not read definition, past page end"");
",,7441
3143,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetReader.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,119,336174b0a4438ed68cdb8e208833e380adaa15fc,1571768248,117,3c88ef1d89800dde9edb61e59b851e64ffef0f33,1577728200,-1,1577728200/1553124305,"      this.reader = null;","     this.caseSensitive = caseSensitive;
   }
 
-  private static class ReadConf<T> {
-    private final ParquetFileReader reader;
-    private final InputFile file;
-    private final ParquetReadOptions options;
-    private final MessageType projection;
-    private final ParquetValueReader<T> model;
-    private final List<BlockMetaData> rowGroups;
-    private final boolean[] shouldSkip;
-    private final long totalValues;
-    private final boolean reuseContainers;
-
-    @SuppressWarnings(""unchecked"")
-    ReadConf(InputFile file, ParquetReadOptions options, Schema expectedSchema, Expression filter,
-             Function<MessageType, ParquetValueReader<?>> readerFunc, boolean reuseContainers,
-             boolean caseSensitive) {
-      this.file = file;
-      this.options = options;
-      this.reader = newReader(file, options);
-
-      MessageType fileSchema = reader.getFileMetaData().getSchema();
-
-      boolean hasIds = ParquetSchemaUtil.hasIds(fileSchema);
-      MessageType typeWithIds = hasIds ? fileSchema : ParquetSchemaUtil.addFallbackIds(fileSchema);
-
-      this.projection = hasIds ?
-          ParquetSchemaUtil.pruneColumns(fileSchema, expectedSchema) :
-          ParquetSchemaUtil.pruneColumnsFallback(fileSchema, expectedSchema);
-      this.model = (ParquetValueReader<T>) readerFunc.apply(typeWithIds);
-      this.rowGroups = reader.getRowGroups();
-      this.shouldSkip = new boolean[rowGroups.size()];
-
-      ParquetMetricsRowGroupFilter statsFilter = null;
-      ParquetDictionaryRowGroupFilter dictFilter = null;
-      if (filter != null) {
-        statsFilter = new ParquetMetricsRowGroupFilter(expectedSchema, filter, caseSensitive);
-        dictFilter = new ParquetDictionaryRowGroupFilter(expectedSchema, filter, caseSensitive);
-      }
-
-      long computedTotalValues = 0L;
-      for (int i = 0; i < shouldSkip.length; i += 1) {
-        BlockMetaData rowGroup = rowGroups.get(i);
-        boolean shouldRead = filter == null || (
-            statsFilter.shouldRead(typeWithIds, rowGroup) &&
-            dictFilter.shouldRead(typeWithIds, rowGroup, reader.getDictionaryReader(rowGroup)));
-        this.shouldSkip[i] = !shouldRead;
-        if (shouldRead) {
-          computedTotalValues += rowGroup.getRowCount();
-        }
-      }
-
-      this.totalValues = computedTotalValues;
-      this.reuseContainers = reuseContainers;
-    }
-
-    ReadConf(ReadConf<T> toCopy) {
-      this.reader = null;
-      this.file = toCopy.file;
-      this.options = toCopy.options;
-      this.projection = toCopy.projection;
-      this.model = toCopy.model;
-      this.rowGroups = toCopy.rowGroups;
-      this.shouldSkip = toCopy.shouldSkip;
-      this.totalValues = toCopy.totalValues;
-      this.reuseContainers = toCopy.reuseContainers;
-    }
-
-    ParquetFileReader reader() {
-      if (reader != null) {
-        reader.setRequestedSchema(projection);
-        return reader;
-      }
-
-      ParquetFileReader newReader = newReader(file, options);
-      newReader.setRequestedSchema(projection);
-      return newReader;
-    }
-
-    ParquetValueReader<T> model() {
-      return model;
-    }
-
-    boolean[] shouldSkip() {
-      return shouldSkip;
-    }
-
-    long totalValues() {
-      return totalValues;
-    }
-
-    boolean reuseContainers() {
-      return reuseContainers;
-    }
-
-    ReadConf<T> copy() {
-      return new ReadConf<>(this);
-    }
-
-    private static ParquetFileReader newReader(InputFile file, ParquetReadOptions options) {
-      try {
-        return ParquetFileReader.open(ParquetIO.file(file), options);
-      } catch (IOException e) {
-        throw new RuntimeIOException(e, ""Failed to open Parquet file: %s"", file.location());
-      }
-    }
-  }
-
   private ReadConf<T> conf = null;
 
   private ReadConf<T> init() {
     if (conf == null) {
       ReadConf<T> readConf = new ReadConf<>(
-          input, options, expectedSchema, filter, readerFunc, reuseContainers, caseSensitive);
+          input, options, expectedSchema, filter, readerFunc, null, reuseContainers, caseSensitive, null);
       this.conf = readConf.copy();
       return readConf;
     }
-
     return conf;
   }
 
",,7441
3144,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,405,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,437,,,,,"        this.lastList = null;",,,7441
3145,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetValueReaders.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,525,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,557,,,,,"        this.lastMap = null;",,,7441
3146,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriteAdapter.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,63,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,72,,,,,"      this.writer = null;",,,7441
3147,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,117,2fdc6f72294ab6bd6ff781a0dd1726302bfd91cd,1554997114,117,,,,,"          builder.set(""_some_nulls"", (i % 10 == 0) ? null : ""some""); // includes some null values",,,7441
3148,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestMetricsRowGroupFilter.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,116,2fdc6f72294ab6bd6ff781a0dd1726302bfd91cd,1554997114,116,,,,,"        builder.set(""_some_nulls"", (i % 10 == 0) ? null : ""some""); // includes some null values",,,7441
3149,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestParquetMetrics.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,289,a534853b1d40bebd4227943f1abe5e29264675a2,1557528344,281,,,,,"        lowerBounds.containsKey(fieldId) ? fromByteBuffer(type, lowerBounds.get(fieldId)) : null);",,,7441
3150,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestParquetMetrics.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,292,a534853b1d40bebd4227943f1abe5e29264675a2,1557528344,284,,,,,"        upperBounds.containsKey(fieldId) ? fromByteBuffer(type, upperBounds.get(fieldId)) : null);",,,7441
3151,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/PruneColumnsWithReordering.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,67,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,67,,,,,"      this.current = null;",,,7441
3152,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/PruneColumnsWithoutReordering.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,66,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,65,,,,,"      this.current = null;",,,7441
3153,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,51,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,51,,,,,"    this.root = null;",,,7441
3154,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetReaders.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,653,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,648,,,,,"      values[i] = null;",,,7441
3155,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,383,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,362,,,,,"          element = null;",,,7441
3156,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Reader.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,158,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,242,,,,,"    this.tasks = null; // invalidate cached tasks, if present",,,7441
3157,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Reader.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,175,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,215,,,,,"    this.schema = null;",,,7441
3158,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Reader.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,176,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,216,,,,,"    this.type = null;",,,7441
3159,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Reader.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,193,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,233,,,,,"    this.schema = null;",,,7441
3160,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Reader.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,194,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,234,,,,,"    this.type = null;",,,7441
3161,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Writer.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,292,4d8ae52cd06b288a54f3328dd26d6f1b267d1892,1568016616,367,c2435d64709b9657768f35ae5048c9ef4a352716,1569367456,-1,1569367456/1553124305,"        this.appender = null;","         }
       }
     }
+
+    private class OutputFileFactory {
+      private final int partitionId;
+      private final long taskId;
+      private final long epochId;
+      // The purpose of this uuid is to be able to know from two paths that they were written by the same operation.
+      // That's useful, for example, if a Spark job dies and leaves files in the file system, you can identify them all
+      // with a recursive listing and grep.
+      private final String uuid = UUID.randomUUID().toString();
+      private int fileCount;
+
+      OutputFileFactory(int partitionId, long taskId, long epochId) {
+        this.partitionId = partitionId;
+        this.taskId = taskId;
+        this.epochId = epochId;
+        this.fileCount = 0;
+      }
+
+      private String generateFilename() {
+        return format.addExtension(String.format(""%05d-%d-%s-%05d"", partitionId, taskId, uuid, fileCount++));
+      }
+
+      /**
+       * Generates EncryptedOutputFile for UnpartitionedWriter.
+       */
+      public EncryptedOutputFile newOutputFile() {
+        OutputFile file = fileIo.newOutputFile(locations.newDataLocation(generateFilename()));
+        return encryptionManager.encrypt(file);
+      }
+
+      /**
+       * Generates EncryptedOutputFile for PartitionedWriter.
+       */
+      public EncryptedOutputFile newOutputFile(PartitionKey key) {
+        OutputFile rawOutputFile = fileIo.newOutputFile(locations.newDataLocation(spec, key, generateFilename()));
+        return encryptionManager.encrypt(rawOutputFile);
+      }
+    }
   }
 
   private interface AppenderFactory<T> {
     FileAppender<T> newAppender(OutputFile file, FileFormat format);
   }
 
-  private static class UnpartitionedWriter implements DataWriter<InternalRow>, Closeable {
-    private final FileIO fileIo;
-    private FileAppender<InternalRow> appender = null;
-    private Metrics metrics = null;
-    private List<Long> offsetRanges = null;
-    private final EncryptedOutputFile file;
+  private abstract static class BaseWriter implements DataWriter<InternalRow> {
+    protected static final int ROWS_DIVISOR = 1000;
 
-    UnpartitionedWriter(
-        EncryptedOutputFile outputFile,
-        FileFormat format,
-        AppenderFactory<InternalRow> factory,
-        FileIO fileIo) {
-      this.fileIo = fileIo;
-      this.file = outputFile;
-      this.appender = factory.newAppender(file.encryptingOutputFile(), format);
-    }
-
-    @Override
-    public void write(InternalRow record) {
-      appender.add(record);
-    }
-
-    @Override
-    public WriterCommitMessage commit() throws IOException {
-      Preconditions.checkArgument(appender != null, ""Commit called on a closed writer: %s"", this);
-
-      // metrics and splitOffsets are populated on close
-      close();
-
-      if (metrics.recordCount() == 0L) {
-        fileIo.deleteFile(file.encryptingOutputFile());
-        return new TaskCommit();
-      }
-
-      DataFile dataFile = DataFiles.fromEncryptedOutputFile(file, null, metrics, offsetRanges);
-
-      return new TaskCommit(dataFile);
-    }
-
-    @Override
-    public void abort() throws IOException {
-      Preconditions.checkArgument(appender != null, ""Abort called on a closed writer: %s"", this);
-
-      close();
-      fileIo.deleteFile(file.encryptingOutputFile());
-    }
-
-    @Override
-    public void close() throws IOException {
-      if (this.appender != null) {
-        this.appender.close();
-        this.metrics = appender.metrics();
-        this.offsetRanges = appender.splitOffsets();
-        this.appender = null;
-      }
-    }
-  }
-
-  private static class PartitionedWriter implements DataWriter<InternalRow> {
-    private final Set<PartitionKey> completedPartitions = Sets.newHashSet();
     private final List<DataFile> completedFiles = Lists.newArrayList();
     private final PartitionSpec spec;
     private final FileFormat format;
-    private final AppenderFactory<InternalRow> factory;
-    private final Function<PartitionKey, EncryptedOutputFile> newOutputFileForKey;
-    private final PartitionKey key;
+    private final AppenderFactory<InternalRow> appenderFactory;
+    private final WriterFactory.OutputFileFactory fileFactory;
     private final FileIO fileIo;
-
+    private final long targetFileSize;
     private PartitionKey currentKey = null;
     private FileAppender<InternalRow> currentAppender = null;
     private EncryptedOutputFile currentFile = null;
+    private long currentRows = 0;
 
-    PartitionedWriter(
-        PartitionSpec spec,
-        FileFormat format,
-        AppenderFactory<InternalRow> factory,
-        Function<PartitionKey, EncryptedOutputFile> newOutputFileForKey,
-        FileIO fileIo) {
+    BaseWriter(PartitionSpec spec, FileFormat format, AppenderFactory<InternalRow> appenderFactory,
+               WriterFactory.OutputFileFactory fileFactory, FileIO fileIo, long targetFileSize) {
       this.spec = spec;
       this.format = format;
-      this.factory = factory;
-      this.newOutputFileForKey = newOutputFileForKey;
-      this.key = new PartitionKey(spec);
+      this.appenderFactory = appenderFactory;
+      this.fileFactory = fileFactory;
       this.fileIo = fileIo;
+      this.targetFileSize = targetFileSize;
     }
 
     @Override
-    public void write(InternalRow row) throws IOException {
-      key.partition(row);
+    public abstract void write(InternalRow row) throws IOException;
 
-      if (!key.equals(currentKey)) {
+    public void writeInternal(InternalRow row)  throws IOException {
+      if (currentRows % ROWS_DIVISOR == 0 && currentAppender.length() >= targetFileSize) {
         closeCurrent();
-
-        if (completedPartitions.contains(key)) {
-          // if rows are not correctly grouped, detect and fail the write
-          PartitionKey existingKey = Iterables.find(completedPartitions, key::equals, null);
-          LOG.warn(""Duplicate key: {} == {}"", existingKey, key);
-          throw new IllegalStateException(""Already closed file for partition: "" + key.toPath());
-        }
-
-        this.currentKey = key.copy();
-        this.currentFile = newOutputFileForKey.apply(currentKey);
-        this.currentAppender = factory.newAppender(currentFile.encryptingOutputFile(), format);
+        openCurrent();
       }
 
       currentAppender.add(row);
+      currentRows++;
     }
 
     @Override
     public WriterCommitMessage commit() throws IOException {
       closeCurrent();
+
       return new TaskCommit(completedFiles);
     }
 
     @Override
     public void abort() throws IOException {
+      closeCurrent();
+
       // clean up files created by this writer
       Tasks.foreach(completedFiles)
           .throwFailureWhenFinished()
           .noRetry()
           .run(file -> fileIo.deleteFile(file.path().toString()));
-
-      if (currentAppender != null) {
-        currentAppender.close();
-        this.currentAppender = null;
-        fileIo.deleteFile(currentFile.encryptingOutputFile());
-      }
     }
 
-    private void closeCurrent() throws IOException {
+    protected void openCurrent() {
+      if (spec.fields().size() == 0) {
+        // unpartitioned
+        currentFile = fileFactory.newOutputFile();
+      } else {
+        // partitioned
+        currentFile = fileFactory.newOutputFile(currentKey);
+      }
+      currentAppender = appenderFactory.newAppender(currentFile.encryptingOutputFile(), format);
+      currentRows = 0;
+    }
+
+    protected void closeCurrent() throws IOException {
       if (currentAppender != null) {
         currentAppender.close();
         // metrics are only valid after the appender is closed
",,7441
3162,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Writer.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,363,cad124967ceb740178a3f65b75f19017494b430d,1591907364,457,c2435d64709b9657768f35ae5048c9ef4a352716,1569367456,-1,1569367456/1553124305,"        this.currentAppender = null;","         }
       }
     }
+
+    private class OutputFileFactory {
+      private final int partitionId;
+      private final long taskId;
+      private final long epochId;
+      // The purpose of this uuid is to be able to know from two paths that they were written by the same operation.
+      // That's useful, for example, if a Spark job dies and leaves files in the file system, you can identify them all
+      // with a recursive listing and grep.
+      private final String uuid = UUID.randomUUID().toString();
+      private int fileCount;
+
+      OutputFileFactory(int partitionId, long taskId, long epochId) {
+        this.partitionId = partitionId;
+        this.taskId = taskId;
+        this.epochId = epochId;
+        this.fileCount = 0;
+      }
+
+      private String generateFilename() {
+        return format.addExtension(String.format(""%05d-%d-%s-%05d"", partitionId, taskId, uuid, fileCount++));
+      }
+
+      /**
+       * Generates EncryptedOutputFile for UnpartitionedWriter.
+       */
+      public EncryptedOutputFile newOutputFile() {
+        OutputFile file = fileIo.newOutputFile(locations.newDataLocation(generateFilename()));
+        return encryptionManager.encrypt(file);
+      }
+
+      /**
+       * Generates EncryptedOutputFile for PartitionedWriter.
+       */
+      public EncryptedOutputFile newOutputFile(PartitionKey key) {
+        OutputFile rawOutputFile = fileIo.newOutputFile(locations.newDataLocation(spec, key, generateFilename()));
+        return encryptionManager.encrypt(rawOutputFile);
+      }
+    }
   }
 
   private interface AppenderFactory<T> {
     FileAppender<T> newAppender(OutputFile file, FileFormat format);
   }
 
-  private static class UnpartitionedWriter implements DataWriter<InternalRow>, Closeable {
-    private final FileIO fileIo;
-    private FileAppender<InternalRow> appender = null;
-    private Metrics metrics = null;
-    private List<Long> offsetRanges = null;
-    private final EncryptedOutputFile file;
+  private abstract static class BaseWriter implements DataWriter<InternalRow> {
+    protected static final int ROWS_DIVISOR = 1000;
 
-    UnpartitionedWriter(
-        EncryptedOutputFile outputFile,
-        FileFormat format,
-        AppenderFactory<InternalRow> factory,
-        FileIO fileIo) {
-      this.fileIo = fileIo;
-      this.file = outputFile;
-      this.appender = factory.newAppender(file.encryptingOutputFile(), format);
-    }
-
-    @Override
-    public void write(InternalRow record) {
-      appender.add(record);
-    }
-
-    @Override
-    public WriterCommitMessage commit() throws IOException {
-      Preconditions.checkArgument(appender != null, ""Commit called on a closed writer: %s"", this);
-
-      // metrics and splitOffsets are populated on close
-      close();
-
-      if (metrics.recordCount() == 0L) {
-        fileIo.deleteFile(file.encryptingOutputFile());
-        return new TaskCommit();
-      }
-
-      DataFile dataFile = DataFiles.fromEncryptedOutputFile(file, null, metrics, offsetRanges);
-
-      return new TaskCommit(dataFile);
-    }
-
-    @Override
-    public void abort() throws IOException {
-      Preconditions.checkArgument(appender != null, ""Abort called on a closed writer: %s"", this);
-
-      close();
-      fileIo.deleteFile(file.encryptingOutputFile());
-    }
-
-    @Override
-    public void close() throws IOException {
-      if (this.appender != null) {
-        this.appender.close();
-        this.metrics = appender.metrics();
-        this.offsetRanges = appender.splitOffsets();
-        this.appender = null;
-      }
-    }
-  }
-
-  private static class PartitionedWriter implements DataWriter<InternalRow> {
-    private final Set<PartitionKey> completedPartitions = Sets.newHashSet();
     private final List<DataFile> completedFiles = Lists.newArrayList();
     private final PartitionSpec spec;
     private final FileFormat format;
-    private final AppenderFactory<InternalRow> factory;
-    private final Function<PartitionKey, EncryptedOutputFile> newOutputFileForKey;
-    private final PartitionKey key;
+    private final AppenderFactory<InternalRow> appenderFactory;
+    private final WriterFactory.OutputFileFactory fileFactory;
     private final FileIO fileIo;
-
+    private final long targetFileSize;
     private PartitionKey currentKey = null;
     private FileAppender<InternalRow> currentAppender = null;
     private EncryptedOutputFile currentFile = null;
+    private long currentRows = 0;
 
-    PartitionedWriter(
-        PartitionSpec spec,
-        FileFormat format,
-        AppenderFactory<InternalRow> factory,
-        Function<PartitionKey, EncryptedOutputFile> newOutputFileForKey,
-        FileIO fileIo) {
+    BaseWriter(PartitionSpec spec, FileFormat format, AppenderFactory<InternalRow> appenderFactory,
+               WriterFactory.OutputFileFactory fileFactory, FileIO fileIo, long targetFileSize) {
       this.spec = spec;
       this.format = format;
-      this.factory = factory;
-      this.newOutputFileForKey = newOutputFileForKey;
-      this.key = new PartitionKey(spec);
+      this.appenderFactory = appenderFactory;
+      this.fileFactory = fileFactory;
       this.fileIo = fileIo;
+      this.targetFileSize = targetFileSize;
     }
 
     @Override
-    public void write(InternalRow row) throws IOException {
-      key.partition(row);
+    public abstract void write(InternalRow row) throws IOException;
 
-      if (!key.equals(currentKey)) {
+    public void writeInternal(InternalRow row)  throws IOException {
+      if (currentRows % ROWS_DIVISOR == 0 && currentAppender.length() >= targetFileSize) {
         closeCurrent();
-
-        if (completedPartitions.contains(key)) {
-          // if rows are not correctly grouped, detect and fail the write
-          PartitionKey existingKey = Iterables.find(completedPartitions, key::equals, null);
-          LOG.warn(""Duplicate key: {} == {}"", existingKey, key);
-          throw new IllegalStateException(""Already closed file for partition: "" + key.toPath());
-        }
-
-        this.currentKey = key.copy();
-        this.currentFile = newOutputFileForKey.apply(currentKey);
-        this.currentAppender = factory.newAppender(currentFile.encryptingOutputFile(), format);
+        openCurrent();
       }
 
       currentAppender.add(row);
+      currentRows++;
     }
 
     @Override
     public WriterCommitMessage commit() throws IOException {
       closeCurrent();
+
       return new TaskCommit(completedFiles);
     }
 
     @Override
     public void abort() throws IOException {
+      closeCurrent();
+
       // clean up files created by this writer
       Tasks.foreach(completedFiles)
           .throwFailureWhenFinished()
           .noRetry()
           .run(file -> fileIo.deleteFile(file.path().toString()));
-
-      if (currentAppender != null) {
-        currentAppender.close();
-        this.currentAppender = null;
-        fileIo.deleteFile(currentFile.encryptingOutputFile());
-      }
     }
 
-    private void closeCurrent() throws IOException {
+    protected void openCurrent() {
+      if (spec.fields().size() == 0) {
+        // unpartitioned
+        currentFile = fileFactory.newOutputFile();
+      } else {
+        // partitioned
+        currentFile = fileFactory.newOutputFile(currentKey);
+      }
+      currentAppender = appenderFactory.newAppender(currentFile.encryptingOutputFile(), format);
+      currentRows = 0;
+    }
+
+    protected void closeCurrent() throws IOException {
       if (currentAppender != null) {
         currentAppender.close();
         // metrics are only valid after the appender is closed
",,7441
3163,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Writer.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,373,6048e5a794242cb83871e3838d0d40aa71e36a91,1575915928,438,,,,,"        this.currentAppender = null;",,,7441
3164,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/RandomData.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,245,edb8d7759d74418daa677a8c39420f29e28edb66,1593453406,277,,,,,"          arr[i] = null;",,,7441
3165,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/RandomData.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,277,35dd7def31f86c7b3cd15a0cec2b2e4abb3d33ee,1591809279,276,,,,,"          valuesArr[i] = null;",,,7441
3166,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestHelpers.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,507,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,538,,,,,"            data[i] = null;",,,7441
3167,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestAvroScan.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,67,5f6fc3be3400cfae858a938213ba8516acc983a5,1561391869,67,,,,,"    TestAvroScan.spark = null;",,,7441
3168,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,89,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,126,,,,,"    TestDataFrameWrites.spark = null;",,,7441
3169,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,90,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,127,,,,,"    TestDataFrameWrites.sc = null;",,,7441
3170,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,126,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,147,,,,,"    TestFilteredScan.spark = null;",,,7441
3171,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestParquetScan.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,72,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,71,,,,,"    TestParquetScan.spark = null;",,,7441
3172,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestParquetWrite.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,65,c3dc9824b381e5e479e356be5e0f4fcf61a9fc37,1580770430,69,,,,,"    TestParquetWrite.spark = null;",,,7441
3173,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestPartitionValues.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,74,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,108,,,,,"    TestPartitionValues.spark = null;",,,7441
3174,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkReadProjection.java,c20927801a369104e5ea510470e1cf7c8e28b808,1553124305,85,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,94,,,,,"    TestSparkReadProjection.spark = null;",,,7441
3175,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/org/apache/iceberg/io/CloseableIterable.java,0dbcd5cfb141ce638604645dd5112802eca0567c,1554505804,157,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,183,,,,,"        this.currentIterator = null;",,,7441
3176,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/org/apache/iceberg/io/CloseableIterable.java,0dbcd5cfb141ce638604645dd5112802eca0567c,1554505804,158,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,184,,,,,"        this.currentIterable = null;",,,7441
3177,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/org/apache/iceberg/io/CloseableIterable.java,0dbcd5cfb141ce638604645dd5112802eca0567c,1554505804,168,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,194,,,,,"          this.currentIterator = null;",,,7441
3178,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/org/apache/iceberg/io/CloseableIterable.java,0dbcd5cfb141ce638604645dd5112802eca0567c,1554505804,169,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,195,,,,,"          this.currentIterable = null;",,,7441
3179,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,36631d14a3290a6a08375420e63e6982a9597567,1556725998,467,1bfab96f6d153fd40e90bed9301775c84ef6b5e9,1571157402,476,84dd40dc873544c4842bed20bafd921181465f49,1571436370,-1,1571436370/1556725998,"      this.keyMetadata = null;","     }
     return null;
   }
-
-  private void writeObject(ObjectOutputStream output) throws IOException {
-    output.defaultWriteObject();
-    if (keyMetadata != null) {
-      output.writeBoolean(true);
-      byte[] keyMetadataArray = ByteBuffers.toByteArray(keyMetadata);
-      output.writeInt(keyMetadataArray.length);
-      output.write(keyMetadataArray);
-    } else {
-      output.writeBoolean(false);
-    }
-  }
-
-  private void readObject(ObjectInputStream input) throws IOException, ClassNotFoundException {
-    input.defaultReadObject();
-    boolean hasKeyMetadata = input.readBoolean();
-    if (hasKeyMetadata) {
-      int keyMetadataLength = input.readInt();
-      byte[] keyMetadataArray = new byte[keyMetadataLength];
-      input.read(keyMetadataArray);
-      this.keyMetadata = ByteBuffer.wrap(keyMetadataArray);
-    } else {
-      this.keyMetadata = null;
-    }
-  }
 }
",,7441
3180,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java,1e89a3bb11644241bdc7b75b72570c01e96c40c7,1556822146,106,e133f537c309270dc251f8095a141fdeee30045c,1561820444,116,,,,,"    HiveTableBaseTest.metastoreClient = null;",,,7441
3181,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java,1e89a3bb11644241bdc7b75b72570c01e96c40c7,1556822146,131,d6d9e4d37533bddfa532defd47545f9b2be07486,1561697583,134,,,,,"    this.tables = null;",,,7441
3182,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/MergingSnapshotProducer.java,81ae930c61f708191aa1f30a787e4a3d10def6f8,1557528370,327,cb600c6f86a3f320648f2dd02e91794eea462a17,1559858245,327,,,,,"      this.cachedNewManifest = null;",,,7441
3183,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/MergingSnapshotProducer.java,81ae930c61f708191aa1f30a787e4a3d10def6f8,1557528370,564,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,315,,,,,"      cachedNewManifest = null;",,,7441
3184,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,238,65095c149c2489ac3230d0d20328e492919d9d4f,1581976361,216,,,,,"      this.lowerBounds = null;",,,7441
3185,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,b7b781d6dd8c1f7a2ace15cf190c57d84579316f,1557962490,353,,,,,,,,"          filePath, format, isPartitioned ? partitionData.copy() : null,",,,7441
3186,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,6d11edd196c6ba7813af2145035787ac2b41ffda,1558037737,105,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,124,,,,,"      current = null;",,,7441
3187,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,549da809490976b53a13b14596dd240ed74bce5e,1558042747,181,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,196,,,,,"      this.partitionData = null;",,,7441
3188,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,549da809490976b53a13b14596dd240ed74bce5e,1558042747,188,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,203,,,,,"      this.partitionData = isPartitioned ? newPartitionData(spec) : null;",,,7441
3189,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,549da809490976b53a13b14596dd240ed74bce5e,1558042747,196,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,211,,,,,"      this.format = null;",,,7441
3190,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,549da809490976b53a13b14596dd240ed74bce5e,1558042747,203,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,218,,,,,"      this.upperBounds = null;",,,7441
3191,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,549da809490976b53a13b14596dd240ed74bce5e,1558042747,204,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,219,,,,,"      this.splitOffsets = null;",,,7441
3192,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,549da809490976b53a13b14596dd240ed74bce5e,1558042747,320,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,341,,,,,"          filePath, format, isPartitioned ? partitionData.copy() : null,",,,7441
3193,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestParquetUtil.java,549da809490976b53a13b14596dd240ed74bce5e,1558042747,280,2bdc6debeb1cdcbd44f5c1d20cc40a1a61e9cd4d,1561244606,280,,,,,"        lowerBounds.containsKey(fieldId) ? fromByteBuffer(type, lowerBounds.get(fieldId)) : null);",,,7441
3194,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestParquetUtil.java,549da809490976b53a13b14596dd240ed74bce5e,1558042747,283,2bdc6debeb1cdcbd44f5c1d20cc40a1a61e9cd4d,1561244606,283,,,,,"        upperBounds.containsKey(fieldId) ? fromByteBuffer(type, upperBounds.get(fieldId)) : null);",,,7441
3195,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java,81f29e2f80cc2e6b3b6f715573893aff696f579a,1559072404,131,33e675331e221af0b2618815addbdb4fb29c9083,1577480873,140,,,,,"          builder.set(""_some_nulls"", (i % 10 == 0) ? null : ""some""); // includes some null values",,,7441
3196,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/test/java/org/apache/iceberg/parquet/TestMetricsRowGroupFilter.java,81f29e2f80cc2e6b3b6f715573893aff696f579a,1559072404,127,33e675331e221af0b2618815addbdb4fb29c9083,1577480873,136,,,,,"        builder.set(""_some_nulls"", (i % 10 == 0) ? null : ""some""); // includes some null values",,,7441
3197,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,cb600c6f86a3f320648f2dd02e91794eea462a17,1559858245,186,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,181,,,,,"      this.columnSizes = null;",,,7441
3198,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,cb600c6f86a3f320648f2dd02e91794eea462a17,1559858245,187,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,182,,,,,"      this.valueCounts = null;",,,7441
3199,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,cb600c6f86a3f320648f2dd02e91794eea462a17,1559858245,188,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,183,,,,,"      this.nullValueCounts = null;",,,7441
3200,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,cb600c6f86a3f320648f2dd02e91794eea462a17,1559858245,189,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,184,,,,,"      this.lowerBounds = null;",,,7441
3201,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericDataFile.java,cb600c6f86a3f320648f2dd02e91794eea462a17,1559858245,190,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,185,,,,,"      this.upperBounds = null;",,,7441
3202,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSnapshotSelection.java,d687f96beb4e0b523ae86d814a720fdbc0299b4b,1560188187,67,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,67,,,,,"    TestSnapshotSelection.spark = null;",,,7441
3203,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/MergingSnapshotProducer.java,6ac23e03735d4514480a9f0155200faf7179f21b,1560201755,346,83ee9f4f568cc19cf2d5b1f7c0f8133d1a44f5ab,1573938483,381,,,,,"      this.cachedNewManifest = null;",,,7441
3204,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataSourceOptions.java,9881f21a28a3bb189c8df94791389ccbc35390ab,1560896077,71,482f420141486f5b7b02bd62dc14cdb94b9a9cca,1591126983,73,,,,,"    TestDataSourceOptions.spark = null;",,,7441
3205,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java,b898129580d1f97eaabba64a25832cb11c607292,1562081940,85,6cac41b9f82ab131448a5d1bdec8522576e9471e,1566839155,86,,,,,"    HiveTableBaseTest.metastoreClient = null;",,,7441
3206,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java,b898129580d1f97eaabba64a25832cb11c607292,1562081940,88,6cac41b9f82ab131448a5d1bdec8522576e9471e,1566839155,89,,,,,"    HiveTableBaseTest.metastore = null;",,,7441
3207,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/util/SnapshotUtil.java,e4c6fb979003b1629961b0c950ec6acec994de3b,1562961336,53,736c68da7c0c8558a06d2d30a78940172653ab86,1591818473,84,,,,,"        current = null;",,,7441
3208,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,e4c6fb979003b1629961b0c950ec6acec994de3b,1562961336,95,33a38826f6c104e52981df15d49f1ee420e04c49,1563295456,96,63000d1cd49f5a2429a628df72dc909c1ecadfb8,1567527838,-1,1567527838/1562961336,"    TestIcebergSourceHiveTables.metastoreClient = null;"," 
   private static SparkSession spark;
   private static TestHiveMetastore metastore;
+  private static HiveClientPool clients;
   private static HiveConf hiveConf;
-  private static HiveMetaStoreClient metastoreClient;
+  private static HiveCatalog catalog;
 
   @BeforeClass
   public static void startMetastoreAndSpark() throws Exception {
     TestIcebergSourceHiveTables.metastore = new TestHiveMetastore();
     metastore.start();
     TestIcebergSourceHiveTables.hiveConf = metastore.hiveConf();
-    TestIcebergSourceHiveTables.metastoreClient = new HiveMetaStoreClient(hiveConf);
-    String dbPath = metastore.getDatabasePath(DB_NAME);
-    Database db = new Database(DB_NAME, ""desc"", dbPath, new HashMap<>());
-    metastoreClient.createDatabase(db);
+    String dbPath = metastore.getDatabasePath(""db"");
+    Database db = new Database(""db"", ""desc"", dbPath, new HashMap<>());
+    TestIcebergSourceHiveTables.clients = new HiveClientPool(1, hiveConf);
+    clients.run(client -> {
+      client.createDatabase(db);
+      return null;
+    });
 
     TestIcebergSourceHiveTables.spark = SparkSession.builder()
         .master(""local[2]"")
         .config(""spark.hadoop."" + METASTOREURIS.varname, hiveConf.get(METASTOREURIS.varname))
         .getOrCreate();
+
+    TestIcebergSourceHiveTables.catalog = new HiveCatalog(hiveConf);
   }
 
   @AfterClass
   public static void stopMetastoreAndSpark() {
-    metastoreClient.close();
-    TestIcebergSourceHiveTables.metastoreClient = null;
+    catalog.close();
+    TestIcebergSourceHiveTables.catalog = null;
+    clients.close();
+    TestIcebergSourceHiveTables.clients = null;
     metastore.stop();
     TestIcebergSourceHiveTables.metastore = null;
     spark.stop();
",,7441
3209,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,e4c6fb979003b1629961b0c950ec6acec994de3b,1562961336,97,bedc9c77036c882f6850fe3f3e6db93e4bb19efd,1586545371,78,,,,,"    TestIcebergSourceHiveTables.metastore = null;",,,7441
3210,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,e4c6fb979003b1629961b0c950ec6acec994de3b,1562961336,99,33a38826f6c104e52981df15d49f1ee420e04c49,1563295456,100,,,,,"    TestIcebergSourceHiveTables.spark = null;",,,7441
3211,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/mapping/NameMappingParser.java,1dda1ada9c5b338fd0383b7f528707b8506c49a6,1564609445,139,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,139,,,,,"      nested = null;",,,7441
3212,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/test/java/org/apache/iceberg/TestMetrics.java,26765c8f0f6986c7aa8b7a2e456cb7e85d2e23f5,1564618803,286,260bfa0a33aebc25d07e9a3add46fb7ba0eeca43,1591136744,454,,,,,"        lowerBounds.containsKey(fieldId) ? fromByteBuffer(type, lowerBounds.get(fieldId)) : null);",,,7441
3213,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/test/java/org/apache/iceberg/TestMetrics.java,26765c8f0f6986c7aa8b7a2e456cb7e85d2e23f5,1564618803,289,260bfa0a33aebc25d07e9a3add46fb7ba0eeca43,1591136744,457,,,,,"        upperBounds.containsKey(fieldId) ? fromByteBuffer(type, upperBounds.get(fieldId)) : null);",,,7441
3214,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java,6cac41b9f82ab131448a5d1bdec8522576e9471e,1566839155,72,115a1450c0e62edd835d0dd77a6513ff3717479c,1594249430,126,,,,,"      lastMetadata = null;",,,7441
3215,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java,d7c7d0fbb28d711a4e4320c596cfdf4ce1caf93d,1566860033,76,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,78,,,,,"      currentMetadata = null;",,,7441
3216,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java,d7c7d0fbb28d711a4e4320c596cfdf4ce1caf93d,1566860033,77,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,79,,,,,"      currentMetadataLocation = null;",,,7441
3217,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/test/java/org/apache/iceberg/hive/HiveMetastoreTest.java,d7c7d0fbb28d711a4e4320c596cfdf4ce1caf93d,1566860033,53,,,,,,,,"    HiveMetastoreTest.catalog = null;",,,7441
3218,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/test/java/org/apache/iceberg/hive/HiveMetastoreTest.java,d7c7d0fbb28d711a4e4320c596cfdf4ce1caf93d,1566860033,56,,,,,,,,"    HiveMetastoreTest.metastoreClient = null;",,,7441
3219,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/hive/src/test/java/org/apache/iceberg/hive/HiveMetastoreTest.java,d7c7d0fbb28d711a4e4320c596cfdf4ce1caf93d,1566860033,59,,,,,,,,"    HiveMetastoreTest.metastore = null;",,,7441
3220,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/PartitionData.java,5219159ba9c66a9b80486fef4d7169bbdaf74219,1566945119,205,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,204,,,,,"        copy[i] = null;",,,7441
3221,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,63000d1cd49f5a2429a628df72dc909c1ecadfb8,1567527838,97,bedc9c77036c882f6850fe3f3e6db93e4bb19efd,1586545371,74,,,,,"    TestIcebergSourceHiveTables.catalog = null;",,,7441
3222,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,63000d1cd49f5a2429a628df72dc909c1ecadfb8,1567527838,99,bedc9c77036c882f6850fe3f3e6db93e4bb19efd,1586545371,76,,,,,"    TestIcebergSourceHiveTables.clients = null;",,,7441
3223,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,63000d1cd49f5a2429a628df72dc909c1ecadfb8,1567527838,103,bedc9c77036c882f6850fe3f3e6db93e4bb19efd,1586545371,80,,,,,"    TestIcebergSourceHiveTables.spark = null;",,,7441
3224,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtil.java,b4b3972f68862be246fdc84a129123ccd54f0436,1567801449,79,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,92,,,,,"    TestSparkTableUtil.spark = null;",,,7441
3225,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHadoopTables.java,64fff877134842f499c8a4aaa24d5ad24968cb4b,1568930060,76,548112517032897f02f80cc564ecc5b1f82918de,1583523486,50,,,,,"    TestIcebergSourceHadoopTables.spark = null;",,,7441
3226,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Writer.java,c2435d64709b9657768f35ae5048c9ef4a352716,1569367456,442,cad124967ceb740178a3f65b75f19017494b430d,1591907364,473,,,,,"        this.currentFile = null;",,,7441
3227,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/DataFiles.java,1bfab96f6d153fd40e90bed9301775c84ef6b5e9,1571157402,311,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,317,,,,,"        this.splitOffsets = null;",,,7441
3228,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/org/apache/iceberg/expressions/BoundPredicate.java,860cdcf428b901ea546957187d517089924e0917,1572551885,38,,,,94fdc7321407c22b143b9eab83d29179d12d1a6d,1574272719,-1,1574272719/1572551885,"    this.literal = null;"," 
 package org.apache.iceberg.expressions;
 
-import com.google.common.base.Preconditions;
+import org.apache.iceberg.StructLike;
 
-public class BoundPredicate<T> extends Predicate<BoundReference<T>> {
-  private final Literal<T> literal;
-
-  BoundPredicate(Operation op, BoundReference<T> ref, Literal<T> lit) {
+public abstract class BoundPredicate<T> extends Predicate<BoundReference<T>> {
+  protected BoundPredicate(Operation op, BoundReference<T> ref) {
     super(op, ref);
-    Preconditions.checkArgument(op != Operation.IN && op != Operation.NOT_IN,
-        ""Bound predicate does not support %s operation"", op);
-    this.literal = lit;
   }
 
-  BoundPredicate(Operation op, BoundReference<T> ref) {
-    super(op, ref);
-    Preconditions.checkArgument(op == Operation.IS_NULL || op == Operation.NOT_NULL,
-        ""Cannot create %s predicate without a value"", op);
-    this.literal = null;
+  public boolean test(StructLike struct) {
+    return test(ref().get(struct));
   }
 
-  @Override
-  public Expression negate() {
-    return new BoundPredicate<>(op().negate(), ref(), literal());
+  public abstract boolean test(T value);
+
+  public boolean isUnaryPredicate() {
+    return false;
   }
 
-  public Literal<T> literal() {
-    return literal;
+  public BoundUnaryPredicate<T> asUnaryPredicate() {
+    throw new IllegalStateException(""Not a unary predicate: "" + this);
   }
 
-  @Override
-  String literalString() {
-    return literal.toString();
+  public boolean isLiteralPredicate() {
+    return false;
+  }
+
+  public BoundLiteralPredicate<T> asLiteralPredicate() {
+    throw new IllegalStateException(""Not a literal predicate: "" + this);
+  }
+
+  public boolean isSetPredicate() {
+    return false;
+  }
+
+  public BoundSetPredicate<T> asSetPredicate() {
+    throw new IllegalStateException(""Not a set predicate: "" + this);
   }
 }
",,7441
3229,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/org/apache/iceberg/expressions/UnboundPredicate.java,860cdcf428b901ea546957187d517089924e0917,1572551885,45,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,44,,,,,"    this.literals = null;",,,7441
3230,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java,24496a836b0c67ae93090684ca423688289fb2a9,1573578837,123,51eb225822adfac3515d9a5046f34d5ecd8af184,1585673113,180,,,,,"      lastMetadata = null;",,,7441
3231,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtilWithInMemoryCatalog.java,89cfd5432af703b3a788b05b9843ae3f857fc1b9,1573664630,76,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,76,,,,,"    TestSparkTableUtilWithInMemoryCatalog.spark = null;",,,7441
3232,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkSchema.java,96fb5ef6edb4111793e475ea6163a646959c7453,1573678657,67,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,67,,,,,"    TestSparkSchema.spark = null;",,,7441
3233,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestStructuredStreaming.java,090dc83f75deb29beed0c19883c046e1d94bac54,1573682411,77,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,77,,,,,"    TestStructuredStreaming.spark = null;",,,7441
3234,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/ManifestGroup.java,083edc1f749d9a64cd4042fb360a27a0a3bfe03c,1574272119,81,,,,c73b6574eda1466c4ad4c6addb3f44b23928c681,1580149934,-1,1580149934/1574272119,"      this.evalCache = null;"," 
   private final FileIO io;
   private final Set<ManifestFile> manifests;
-  private final Map<Integer, PartitionSpec> specsById;
-  private final Expression dataFilter;
-  private final Expression fileFilter;
-  private final Expression partitionFilter;
-  private final boolean ignoreDeleted;
-  private final boolean ignoreExisting;
-  private final List<String> columns;
-  private final boolean caseSensitive;
-
-  private final LoadingCache<Integer, ManifestEvaluator> evalCache;
+  private Map<Integer, PartitionSpec> specsById;
+  private Expression dataFilter;
+  private Expression fileFilter;
+  private Expression partitionFilter;
+  private boolean ignoreDeleted;
+  private boolean ignoreExisting;
+  private List<String> columns;
+  private boolean caseSensitive;
 
   ManifestGroup(FileIO io, Iterable<ManifestFile> manifests) {
-    this(io, manifests, null);
-  }
-
-  ManifestGroup(FileIO io, Iterable<ManifestFile> manifests, Map<Integer, PartitionSpec> specsById) {
-    this(io, Sets.newHashSet(manifests), specsById, Expressions.alwaysTrue(), Expressions.alwaysTrue(),
-        Expressions.alwaysTrue(), false, false, ImmutableList.of(""*""), true);
-  }
-
-  private ManifestGroup(FileIO io, Set<ManifestFile> manifests, Map<Integer, PartitionSpec> specsById,
-                        Expression dataFilter, Expression fileFilter, Expression partitionFilter,
-                        boolean ignoreDeleted, boolean ignoreExisting, List<String> columns,
-                        boolean caseSensitive) {
     this.io = io;
-    this.manifests = manifests;
-    this.specsById = specsById;
-    this.dataFilter = dataFilter;
-    this.fileFilter = fileFilter;
-    this.partitionFilter = partitionFilter;
-    this.ignoreDeleted = ignoreDeleted;
-    this.ignoreExisting = ignoreExisting;
-    this.columns = columns;
-    this.caseSensitive = caseSensitive;
-    if (specsById == null) {
-      this.evalCache = null;
-    } else {
-      this.evalCache = Caffeine.newBuilder().build(specId -> {
-        PartitionSpec spec = specsById.get(specId);
-        return ManifestEvaluator.forPartitionFilter(
-            Expressions.and(partitionFilter, Projections.inclusive(spec).project(dataFilter)),
-            spec, caseSensitive);
-      });
-    }
+    this.manifests = Sets.newHashSet(manifests);
+    this.dataFilter = Expressions.alwaysTrue();
+    this.fileFilter = Expressions.alwaysTrue();
+    this.partitionFilter = Expressions.alwaysTrue();
+    this.ignoreDeleted = false;
+    this.ignoreExisting = false;
+    this.columns = ImmutableList.of(""*"");
+    this.caseSensitive = true;
   }
 
-  public ManifestGroup caseSensitive(boolean filterCaseSensitive) {
-    return new ManifestGroup(io, manifests, specsById, dataFilter, fileFilter, partitionFilter,
-        ignoreDeleted, ignoreExisting, columns, filterCaseSensitive);
+  ManifestGroup specsById(Map<Integer, PartitionSpec> newSpecsById) {
+    this.specsById = newSpecsById;
+    return this;
   }
 
-  public ManifestGroup filterData(Expression expr) {
-    return new ManifestGroup(
-        io, manifests, specsById, Expressions.and(dataFilter, expr), fileFilter, partitionFilter,
-        ignoreDeleted, ignoreExisting, columns, caseSensitive);
+  ManifestGroup filterData(Expression newDataFilter) {
+    this.dataFilter = Expressions.and(dataFilter, newDataFilter);
+    return this;
   }
 
-  public ManifestGroup filterFiles(Expression expr) {
-    return new ManifestGroup(
-        io, manifests, specsById, dataFilter, Expressions.and(fileFilter, expr), partitionFilter,
-        ignoreDeleted, ignoreExisting, columns, caseSensitive);
+  ManifestGroup filterFiles(Expression newFileFilter) {
+    this.fileFilter = Expressions.and(fileFilter, newFileFilter);
+    return this;
   }
 
-  public ManifestGroup filterPartitions(Expression expr) {
-    return new ManifestGroup(
-        io, manifests, specsById, dataFilter, fileFilter, Expressions.and(partitionFilter, expr),
-        ignoreDeleted, ignoreExisting, columns, caseSensitive);
+  ManifestGroup filterPartitions(Expression newPartitionFilter) {
+    this.partitionFilter = Expressions.and(partitionFilter, newPartitionFilter);
+    return this;
   }
 
-  public ManifestGroup ignoreDeleted() {
-    return new ManifestGroup(io, manifests, specsById, dataFilter, fileFilter, partitionFilter, true,
-        ignoreExisting, columns, caseSensitive);
+  ManifestGroup ignoreDeleted() {
+    this.ignoreDeleted = true;
+    return this;
   }
 
-  public ManifestGroup ignoreDeleted(boolean shouldIgnoreDeleted) {
-    return new ManifestGroup(io, manifests, specsById, dataFilter, fileFilter, partitionFilter,
-        shouldIgnoreDeleted, ignoreExisting, columns, caseSensitive);
+  ManifestGroup ignoreExisting() {
+    this.ignoreExisting = true;
+    return this;
   }
 
-  public ManifestGroup ignoreExisting() {
-    return new ManifestGroup(io, manifests, specsById, dataFilter, fileFilter, partitionFilter,
-        ignoreDeleted, true, columns, caseSensitive);
+  ManifestGroup select(List<String> newColumns) {
+    this.columns = Lists.newArrayList(newColumns);
+    return this;
   }
 
-  public ManifestGroup ignoreExisting(boolean shouldIgnoreExisting) {
-    return new ManifestGroup(io, manifests, specsById, dataFilter, fileFilter, partitionFilter,
-        ignoreDeleted, shouldIgnoreExisting, columns, caseSensitive);
-  }
-
-  public ManifestGroup select(List<String> columnNames) {
-    return new ManifestGroup(
-        io, manifests, specsById, dataFilter, fileFilter, partitionFilter, ignoreDeleted, ignoreExisting,
-        Lists.newArrayList(columnNames), caseSensitive);
-  }
-
-  public ManifestGroup select(String... columnNames) {
-    return select(Arrays.asList(columnNames));
+  ManifestGroup caseSensitive(boolean newCaseSensitive) {
+    this.caseSensitive = newCaseSensitive;
+    return this;
   }
 
   /**
",,7441
3235,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/main/java/org/apache/iceberg/util/CharSequenceSet.java,94fdc7321407c22b143b9eab83d29179d12d1a6d,1574272719,86,d1fd2a780b2847d2cbd6f09dfdfa690716a43ba6,1594058375,96,,,,,"      destArray[size] = null;",,,7441
3236,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetFilters.java,94fdc7321407c22b143b9eab83d29179d12d1a6d,1574272719,119,949c6a98ac80acec10568070772082c1178eb739,1579108709,123,,,,,"        lit = null;",,,7441
3237,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/StructInternalRow.java,2e4436b0a34deea1d20c2ca7f9b6bfc94d5482f2,1574294439,262,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,262,,,,,"        array[index] = null;",,,7441
3238,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,3c88ef1d89800dde9edb61e59b851e64ffef0f33,1577728200,107,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,110,,,,,"      this.vectorizedModel = null;",,,7441
3239,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,3c88ef1d89800dde9edb61e59b851e64ffef0f33,1577728200,108,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,111,,,,,"      this.columnChunkMetaDataForRowGroups = null;",,,7441
3240,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,3c88ef1d89800dde9edb61e59b851e64ffef0f33,1577728200,110,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,113,,,,,"      this.model = null;",,,7441
3241,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ReadConf.java,3c88ef1d89800dde9edb61e59b851e64ffef0f33,1577728200,120,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,123,,,,,"    this.reader = null;",,,7441
3242,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/test/java/org/apache/iceberg/TestHelpers.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,183,01d1462756db20a14a9ac67166e5bf56966861b4,1590261042,185,,,,,"      this.addedRows = null;",,,7441
3243,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/test/java/org/apache/iceberg/TestHelpers.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,185,01d1462756db20a14a9ac67166e5bf56966861b4,1590261042,187,,,,,"      this.existingRows = null;",,,7441
3244,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/api/src/test/java/org/apache/iceberg/TestHelpers.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,187,01d1462756db20a14a9ac67166e5bf56966861b4,1590261042,189,,,,,"      this.deletedRows = null;",,,7441
3245,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,93,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,96,,,,,"    this.addedRowsCount = null;",,,7441
3246,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,95,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,98,,,,,"    this.existingRowsCount = null;",,,7441
3247,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,96,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,99,,,,,"    this.deletedFilesCount = null;",,,7441
3248,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,111,722f4c38557bac20cba6b6449eac7b810563571f,1580850906,112,487fc1c71c36fba9d589ebff6fefdee6c19d0f24,1586907648,-1,1586907648/1579801863,"    this.addedRowsCount = null;","     this.fromProjectionPos = null;
   }
 
-  public GenericManifestFile(String path, long length, int specId, Long snapshotId,
-                             int addedFilesCount, int existingFilesCount, int deletedFilesCount,
-                             List<PartitionFieldSummary> partitions) {
-    this.avroSchema = AVRO_SCHEMA;
-    this.manifestPath = path;
-    this.length = length;
-    this.specId = specId;
-    this.snapshotId = snapshotId;
-    this.addedFilesCount = addedFilesCount;
-    this.addedRowsCount = null;
-    this.existingFilesCount = existingFilesCount;
-    this.existingRowsCount = null;
-    this.deletedFilesCount = deletedFilesCount;
-    this.deletedRowsCount = null;
-    this.partitions = partitions;
-    this.fromProjectionPos = null;
-  }
-
-  public GenericManifestFile(String path, long length, int specId, Long snapshotId,
+  public GenericManifestFile(String path, long length, int specId,
+                             long sequenceNumber, long minSequenceNumber, Long snapshotId,
                              int addedFilesCount, long addedRowsCount, int existingFilesCount,
                              long existingRowsCount, int deletedFilesCount, long deletedRowsCount,
                              List<PartitionFieldSummary> partitions) {
",,7441
3249,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,113,722f4c38557bac20cba6b6449eac7b810563571f,1580850906,114,487fc1c71c36fba9d589ebff6fefdee6c19d0f24,1586907648,-1,1586907648/1579801863,"    this.existingRowsCount = null;","     this.fromProjectionPos = null;
   }
 
-  public GenericManifestFile(String path, long length, int specId, Long snapshotId,
-                             int addedFilesCount, int existingFilesCount, int deletedFilesCount,
-                             List<PartitionFieldSummary> partitions) {
-    this.avroSchema = AVRO_SCHEMA;
-    this.manifestPath = path;
-    this.length = length;
-    this.specId = specId;
-    this.snapshotId = snapshotId;
-    this.addedFilesCount = addedFilesCount;
-    this.addedRowsCount = null;
-    this.existingFilesCount = existingFilesCount;
-    this.existingRowsCount = null;
-    this.deletedFilesCount = deletedFilesCount;
-    this.deletedRowsCount = null;
-    this.partitions = partitions;
-    this.fromProjectionPos = null;
-  }
-
-  public GenericManifestFile(String path, long length, int specId, Long snapshotId,
+  public GenericManifestFile(String path, long length, int specId,
+                             long sequenceNumber, long minSequenceNumber, Long snapshotId,
                              int addedFilesCount, long addedRowsCount, int existingFilesCount,
                              long existingRowsCount, int deletedFilesCount, long deletedRowsCount,
                              List<PartitionFieldSummary> partitions) {
",,7441
3250,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,115,722f4c38557bac20cba6b6449eac7b810563571f,1580850906,116,487fc1c71c36fba9d589ebff6fefdee6c19d0f24,1586907648,-1,1586907648/1579801863,"    this.deletedRowsCount = null;","     this.fromProjectionPos = null;
   }
 
-  public GenericManifestFile(String path, long length, int specId, Long snapshotId,
-                             int addedFilesCount, int existingFilesCount, int deletedFilesCount,
-                             List<PartitionFieldSummary> partitions) {
-    this.avroSchema = AVRO_SCHEMA;
-    this.manifestPath = path;
-    this.length = length;
-    this.specId = specId;
-    this.snapshotId = snapshotId;
-    this.addedFilesCount = addedFilesCount;
-    this.addedRowsCount = null;
-    this.existingFilesCount = existingFilesCount;
-    this.existingRowsCount = null;
-    this.deletedFilesCount = deletedFilesCount;
-    this.deletedRowsCount = null;
-    this.partitions = partitions;
-    this.fromProjectionPos = null;
-  }
-
-  public GenericManifestFile(String path, long length, int specId, Long snapshotId,
+  public GenericManifestFile(String path, long length, int specId,
+                             long sequenceNumber, long minSequenceNumber, Long snapshotId,
                              int addedFilesCount, long addedRowsCount, int existingFilesCount,
                              long existingRowsCount, int deletedFilesCount, long deletedRowsCount,
                              List<PartitionFieldSummary> partitions) {
",,7441
3251,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,117,722f4c38557bac20cba6b6449eac7b810563571f,1580850906,118,,,,,"    this.fromProjectionPos = null;",,,7441
3252,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,fb1eb3a65e2065ab69e84edd7c82bcfb975acc23,1579801863,136,722f4c38557bac20cba6b6449eac7b810563571f,1580850906,137,,,,,"    this.fromProjectionPos = null;",,,7441
3253,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/MergingSnapshotProducer.java,c3dc9824b381e5e479e356be5e0f4fcf61a9fc37,1580770430,405,2ac53b346c8a1b4cfac42aa8b5811b120b4cf0f0,1591724612,421,,,,,"      this.cachedNewManifest = null;",,,7441
3254,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/arrow/src/main/java/org/apache/iceberg/arrow/ArrowSchemaUtil.java,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,102,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,102,,,,,"            ((Types.TimestampType) field.type()).shouldAdjustToUTC() ? ""UTC"" : null);",,,7441
3255,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorizedArrowReader.java,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,91,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,87,,,,,"    this.icebergField = null;",,,7441
3256,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorizedArrowReader.java,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,93,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,89,,,,,"    this.columnDescriptor = null;",,,7441
3257,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorizedArrowReader.java,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,94,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,90,,,,,"    this.rootAlloc = null;",,,7441
3258,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorizedArrowReader.java,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,95,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,91,,,,,"    this.vectorizedColumnIterator = null;",,,7441
3259,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/arrow/src/main/java/org/apache/iceberg/arrow/vectorized/parquet/VectorizedPageIterator.java,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,63,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,70,,,,,"    this.plainValuesReader = null;",,,7441
3260,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/arrow/src/main/java/org/apache/iceberg/arrow/vectorized/parquet/VectorizedPageIterator.java,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,64,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,71,,,,,"    this.vectorizedDefinitionLevelReader = null;",,,7441
3261,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,68,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,68,,,,,"    this.page = null;",,,7441
3262,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/BasePageIterator.java,2dc7689d0e78b2db37bfb6a33c8bc933f5947cf0,1583284428,71,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,71,,,,,"    this.repetitionLevels = null;",,,7441
3263,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIdentityPartitionData.java,6cafdab76864685d5489ba03cd041865b5b57f01,1584647456,77,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,82,,,,,"    TestIdentityPartitionData.spark = null;",,,7441
3264,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkDataWrite.java,2dfc4551182f5b210755792b6624a3f5a20263e3,1585958579,83,482f420141486f5b7b02bd62dc14cdb94b9a9cca,1591126983,83,,,,,"    TestSparkDataWrite.spark = null;",,,7441
3265,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/ManifestEntry.java,8089a9507af10dd3f96e49a1c89d65ec85718206,1586402923,62,3334afc7a375547b35264d3d5f2cb2605630346f,1586620042,62,fdca3f82cae9dbbe6e2119e61e30a1c9f3c69053,1587412599,-1,1587412599/1586402923,"    this.fileWrapper = null; // do not use the file wrapper to read","     }
   }
 
-  private final org.apache.avro.Schema schema;
-  private final IndexedDataFile fileWrapper;
-  private Status status = Status.EXISTING;
-  private Long snapshotId = null;
-  private DataFile file = null;
-
-  ManifestEntry(org.apache.avro.Schema schema) {
-    this.schema = schema;
-    this.fileWrapper = null; // do not use the file wrapper to read
-  }
-
-  ManifestEntry(StructType partitionType) {
-    this.schema = AvroSchemaUtil.convert(getSchema(partitionType), ""manifest_entry"");
-    this.fileWrapper = new IndexedDataFile(schema.getField(""data_file"").schema());
-  }
-
-  private ManifestEntry(ManifestEntry toCopy, boolean fullCopy) {
-    this.schema = toCopy.schema;
-    this.fileWrapper = new IndexedDataFile(schema.getField(""data_file"").schema());
-    this.status = toCopy.status;
-    this.snapshotId = toCopy.snapshotId;
-    if (fullCopy) {
-      this.file = toCopy.file().copy();
-    } else {
-      this.file = toCopy.file().copyWithoutStats();
-    }
-  }
-
-  ManifestEntry wrapExisting(Long newSnapshotId, DataFile newFile) {
-    this.status = Status.EXISTING;
-    this.snapshotId = newSnapshotId;
-    this.file = newFile;
-    return this;
-  }
-
-  ManifestEntry wrapAppend(Long newSnapshotId, DataFile newFile) {
-    this.status = Status.ADDED;
-    this.snapshotId = newSnapshotId;
-    this.file = newFile;
-    return this;
-  }
-
-  ManifestEntry wrapDelete(Long newSnapshotId, DataFile newFile) {
-    this.status = Status.DELETED;
-    this.snapshotId = newSnapshotId;
-    this.file = newFile;
-    return this;
-  }
-
-  /**
-   * @return the status of the file, whether EXISTING, ADDED, or DELETED
-   */
-  public Status status() {
-    return status;
-  }
-
-  /**
-   * @return id of the snapshot in which the file was added to the table
-   */
-  public Long snapshotId() {
-    return snapshotId;
-  }
-
-  /**
-   * @return a file
-   */
-  public DataFile file() {
-    return file;
-  }
-
-  public ManifestEntry copy() {
-    return new ManifestEntry(this, true /* full copy */);
-  }
-
-  public ManifestEntry copyWithoutStats() {
-    return new ManifestEntry(this, false /* drop stats */);
-  }
-
-  public void setSnapshotId(Long snapshotId) {
-    this.snapshotId = snapshotId;
-  }
-
-  @Override
-  public void put(int i, Object v) {
-    switch (i) {
-      case 0:
-        this.status = Status.values()[(Integer) v];
-        return;
-      case 1:
-        this.snapshotId = (Long) v;
-        return;
-      case 2:
-        this.file = (DataFile) v;
-        return;
-      default:
-        // ignore the object, it must be from a newer version of the format
-    }
-  }
-
-  @Override
-  public Object get(int i) {
-    switch (i) {
-      case 0:
-        return status.id();
-      case 1:
-        return snapshotId;
-      case 2:
-        if (fileWrapper == null || file instanceof GenericDataFile) {
-          return file;
-        } else {
-          return fileWrapper.wrap(file);
-        }
-      default:
-        throw new UnsupportedOperationException(""Unknown field ordinal: "" + i);
-    }
-  }
-
-  @Override
-  public org.apache.avro.Schema getSchema() {
-    return schema;
-  }
+  // ids for data-file columns are assigned from 1000
+  Types.NestedField STATUS = required(0, ""status"", Types.IntegerType.get());
+  Types.NestedField SNAPSHOT_ID = optional(1, ""snapshot_id"", Types.LongType.get());
+  Types.NestedField SEQUENCE_NUMBER = optional(3, ""sequence_number"", Types.LongType.get());
+  int DATA_FILE_ID = 2;
+  // next ID to assign: 4
 
   static Schema getSchema(StructType partitionType) {
     return wrapFileSchema(DataFile.getType(partitionType));
   }
 
-  static Schema projectSchema(StructType partitionType, Collection<String> columns) {
-    return wrapFileSchema(
-        new Schema(DataFile.getType(partitionType).fields()).select(columns).asStruct());
+  static Schema wrapFileSchema(StructType fileType) {
+    return new Schema(STATUS, SNAPSHOT_ID, SEQUENCE_NUMBER, required(DATA_FILE_ID, ""data_file"", fileType));
   }
 
-  static Schema wrapFileSchema(StructType fileStruct) {
-    // ids for top-level columns are assigned from 1000
-    return new Schema(
-        required(0, ""status"", IntegerType.get()),
-        optional(1, ""snapshot_id"", LongType.get()),
-        required(2, ""data_file"", fileStruct));
-  }
+  /**
+   * @return the status of the file, whether EXISTING, ADDED, or DELETED
+   */
+  Status status();
 
-  @Override
-  public String toString() {
-    return MoreObjects.toStringHelper(this)
-        .add(""status"", status)
-        .add(""snapshot_id"", snapshotId)
-        .add(""file"", file)
-        .toString();
-  }
+  /**
+   * @return id of the snapshot in which the file was added to the table
+   */
+  Long snapshotId();
 
-  private static class IndexedStructLike implements StructLike, IndexedRecord {
-    private final org.apache.avro.Schema avroSchema;
-    private StructLike wrapped = null;
+  /**
+   * Set the snapshot id for this manifest entry.
+   *
+   * @param snapshotId a long snapshot id
+   */
+  void setSnapshotId(long snapshotId);
 
-    IndexedStructLike(org.apache.avro.Schema avroSchema) {
-      this.avroSchema = avroSchema;
-    }
+  /**
+   * @return the sequence number of the snapshot in which the file was added to the table
+   */
+  Long sequenceNumber();
 
-    public IndexedStructLike wrap(StructLike struct) {
-      this.wrapped = struct;
-      return this;
-    }
+  /**
+   * Set the sequence number for this manifest entry.
+   *
+   * @param sequenceNumber a sequence number
+   */
+  void setSequenceNumber(long sequenceNumber);
 
-    @Override
-    public int size() {
-      return wrapped.size();
-    }
+  /**
+   * @return a file
+   */
+  DataFile file();
 
-    @Override
-    public <T> T get(int pos, Class<T> javaClass) {
-      return wrapped.get(pos, javaClass);
-    }
+  ManifestEntry copy();
 
-    @Override
-    public Object get(int pos) {
-      return get(pos, Object.class);
-    }
-
-    @Override
-    public <T> void set(int pos, T value) {
-      wrapped.set(pos, value);
-    }
-
-    @Override
-    public void put(int pos, Object value) {
-      set(pos, value);
-    }
-
-    @Override
-    public org.apache.avro.Schema getSchema() {
-      return avroSchema;
-    }
-  }
-
-  private static class IndexedDataFile implements DataFile, IndexedRecord {
-    private static final long DEFAULT_BLOCK_SIZE = 64 * 1024 * 1024;
-
-    private final org.apache.avro.Schema avroSchema;
-    private final IndexedStructLike partitionWrapper;
-    private DataFile wrapped = null;
-
-    IndexedDataFile(org.apache.avro.Schema avroSchema) {
-      this.avroSchema = avroSchema;
-      this.partitionWrapper = new IndexedStructLike(avroSchema.getField(""partition"").schema());
-    }
-
-    public IndexedDataFile wrap(DataFile file) {
-      this.wrapped = file;
-      return this;
-    }
-
-    @Override
-    public Object get(int pos) {
-      switch (pos) {
-        case 0:
-          return wrapped.path().toString();
-        case 1:
-          return wrapped.format() != null ? wrapped.format().toString() : null;
-        case 2:
-          return partitionWrapper.wrap(wrapped.partition());
-        case 3:
-          return wrapped.recordCount();
-        case 4:
-          return wrapped.fileSizeInBytes();
-        case 5:
-          return DEFAULT_BLOCK_SIZE;
-        case 6:
-          return wrapped.columnSizes();
-        case 7:
-          return wrapped.valueCounts();
-        case 8:
-          return wrapped.nullValueCounts();
-        case 9:
-          return wrapped.lowerBounds();
-        case 10:
-          return wrapped.upperBounds();
-        case 11:
-          return wrapped.keyMetadata();
-        case 12:
-          return wrapped.splitOffsets();
-      }
-      throw new IllegalArgumentException(""Unknown field ordinal: "" + pos);
-    }
-
-    @Override
-    public void put(int i, Object v) {
-      throw new UnsupportedOperationException(""Cannot read into IndexedDataFile"");
-    }
-
-    @Override
-    public org.apache.avro.Schema getSchema() {
-      return avroSchema;
-    }
-
-    @Override
-    public CharSequence path() {
-      return wrapped.path();
-    }
-
-    @Override
-    public FileFormat format() {
-      return wrapped.format();
-    }
-
-    @Override
-    public StructLike partition() {
-      return wrapped.partition();
-    }
-
-    @Override
-    public long recordCount() {
-      return wrapped.recordCount();
-    }
-
-    @Override
-    public long fileSizeInBytes() {
-      return wrapped.fileSizeInBytes();
-    }
-
-    @Override
-    public Map<Integer, Long> columnSizes() {
-      return wrapped.columnSizes();
-    }
-
-    @Override
-    public Map<Integer, Long> valueCounts() {
-      return wrapped.valueCounts();
-    }
-
-    @Override
-    public Map<Integer, Long> nullValueCounts() {
-      return wrapped.nullValueCounts();
-    }
-
-    @Override
-    public Map<Integer, ByteBuffer> lowerBounds() {
-      return wrapped.lowerBounds();
-    }
-
-    @Override
-    public Map<Integer, ByteBuffer> upperBounds() {
-      return wrapped.upperBounds();
-    }
-
-    @Override
-    public ByteBuffer keyMetadata() {
-      return wrapped.keyMetadata();
-    }
-
-    @Override
-    public List<Long> splitOffsets() {
-      return wrapped.splitOffsets();
-    }
-
-    @Override
-    public DataFile copy() {
-      return wrapped.copy();
-    }
-
-    @Override
-    public DataFile copyWithoutStats() {
-      return wrapped.copyWithoutStats();
-    }
-  }
+  ManifestEntry copyWithoutStats();
 }
",,7441
3266,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestRemoveOrphanFilesAction.java,bedc9c77036c882f6850fe3f3e6db93e4bb19efd,1586545371,77,,,,,,,,"    TestRemoveOrphanFilesAction.spark = null;",,,7441
3267,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestFile.java,487fc1c71c36fba9d589ebff6fefdee6c19d0f24,1586907648,123,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,125,,,,,"    this.fromProjectionPos = null;",,,7441
3268,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRemoveOrphanFilesAction.java,8b27fae275baca8b4623dffa142089f6aed50acc,1586993297,82,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,82,,,,,"    TestRemoveOrphanFilesAction.spark = null;",,,7441
3269,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestForwardCompatibility.java,a5e77369c330873a6a292b8952b1ca09b7712bb7,1586994275,98,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,92,,,,,"    TestForwardCompatibility.spark = null;",,,7441
3270,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java,34126d20d29fa12848dd28b305a918f8a1219979,1587159319,190,c2323b774725139dea401bac4837d7e706ba5ed2,1594747459,202,,,,,"      lastMetadata = null;",,,7441
3271,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestEntry.java,fdca3f82cae9dbbe6e2119e61e30a1c9f3c69053,1587412599,38,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,38,527240b445b23cef1a655eccbb3b2c0eb7d178c1,1590780416,-1,1590780416/1587412599,"    this.fileWrapper = null; // do not use the file wrapper to read"," import org.apache.iceberg.relocated.com.google.common.base.MoreObjects;
 import org.apache.iceberg.types.Types;
 
-class GenericManifestEntry implements ManifestEntry, IndexedRecord, SpecificData.SchemaConstructable, StructLike {
+class GenericManifestEntry<F extends ContentFile<F>>
+    implements ManifestEntry<F>, IndexedRecord, SpecificData.SchemaConstructable, StructLike {
   private final org.apache.avro.Schema schema;
-  private final V1Metadata.IndexedDataFile fileWrapper;
   private Status status = Status.EXISTING;
   private Long snapshotId = null;
   private Long sequenceNumber = null;
-  private DataFile file = null;
+  private F file = null;
 
   GenericManifestEntry(org.apache.avro.Schema schema) {
     this.schema = schema;
-    this.fileWrapper = null; // do not use the file wrapper to read
   }
 
   GenericManifestEntry(Types.StructType partitionType) {
     this.schema = AvroSchemaUtil.convert(V1Metadata.entrySchema(partitionType), ""manifest_entry"");
-    this.fileWrapper = new V1Metadata.IndexedDataFile(schema.getField(""data_file"").schema());
   }
 
-  private GenericManifestEntry(GenericManifestEntry toCopy, boolean fullCopy) {
+  private GenericManifestEntry(GenericManifestEntry<F> toCopy, boolean fullCopy) {
     this.schema = toCopy.schema;
-    this.fileWrapper = new V1Metadata.IndexedDataFile(schema.getField(""data_file"").schema());
     this.status = toCopy.status;
     this.snapshotId = toCopy.snapshotId;
     if (fullCopy) {
",,7441
3272,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestEntry.java,fdca3f82cae9dbbe6e2119e61e30a1c9f3c69053,1587412599,69,527240b445b23cef1a655eccbb3b2c0eb7d178c1,1590780416,66,,,,,"    this.sequenceNumber = null;",,,7441
3273,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/GenericManifestEntry.java,fdca3f82cae9dbbe6e2119e61e30a1c9f3c69053,1587412599,77,527240b445b23cef1a655eccbb3b2c0eb7d178c1,1590780416,74,,,,,"    this.sequenceNumber = null;",,,7441
3274,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/TestRewriteManifestsAction.java,0c8ab3d856998fee0b03f403630ccb58fcbf9fdd,1587663785,82,57c56d3375db3572e9c98ca5c76009fb12965a1d,1587684528,82,,,,,"    TestRewriteManifestsAction.spark = null;",,,7441
3275,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRewriteManifestsAction.java,fcdef3b17e8c79727d270830eb6971135091186a,1588034121,86,482f420141486f5b7b02bd62dc14cdb94b9a9cca,1591126983,86,,,,,"    TestRewriteManifestsAction.spark = null;",,,7441
3276,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/SchemaUpdate.java,50cc2e0cdb5278a8fc3343522e0b33eb158285b3,1588869495,75,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,75,,,,,"    this.ops = null;",,,7441
3277,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java,e8f7379ffe253623e9dd27a1ada7d4421af8b937,1590426935,188,3021d3499d7ec1505f3d0ba44025e4f1d397d56a,1593794800,185,,,,,"        record.setField(""_some_nulls"", (i % 10 == 0) ? null : ""some""); // includes some null values",,,7441
3278,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/data/src/test/java/org/apache/iceberg/data/TestMetricsRowGroupFilter.java,e8f7379ffe253623e9dd27a1ada7d4421af8b937,1590426935,229,3021d3499d7ec1505f3d0ba44025e4f1d397d56a,1593794800,226,,,,,"        builder.set(""_some_nulls"", (i % 10 == 0) ? null : ""some""); // includes some null values",,,7441
3279,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcIterable.java,e8f7379ffe253623e9dd27a1ada7d4421af8b937,1590426935,63,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,65,,,,,"    this.filter = (filter == Expressions.alwaysTrue()) ? null : filter;",,,7441
3280,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/TestSparkDataFile.java,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,112,2ac53b346c8a1b4cfac42aa8b5811b120b4cf0f0,1591724612,112,,,,,"    TestSparkDataFile.spark = null;",,,7441
3281,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/TestSparkDataFile.java,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,113,2ac53b346c8a1b4cfac42aa8b5811b120b4cf0f0,1591724612,113,,,,,"    TestSparkDataFile.sparkContext = null;",,,7441
3282,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestWriteMetricsConfig.java,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,87,,,,,,,,"    TestWriteMetricsConfig.spark = null;",,,7441
3283,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestWriteMetricsConfig.java,c28d1c8ba6322af07f0206c4cf3fdad875f37ac1,1590529344,88,,,,,,,,"    TestWriteMetricsConfig.sc = null;",,,7441
3284,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/BaseFile.java,527240b445b23cef1a655eccbb3b2c0eb7d178c1,1590780416,163,201f8bf0e5084daa9fcc1e8418762ecb10967036,1590789089,163,,,,,"      this.columnSizes = null;",,,7441
3285,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/BaseFile.java,527240b445b23cef1a655eccbb3b2c0eb7d178c1,1590780416,164,201f8bf0e5084daa9fcc1e8418762ecb10967036,1590789089,164,,,,,"      this.valueCounts = null;",,,7441
3286,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/BaseFile.java,527240b445b23cef1a655eccbb3b2c0eb7d178c1,1590780416,165,201f8bf0e5084daa9fcc1e8418762ecb10967036,1590789089,165,,,,,"      this.nullValueCounts = null;",,,7441
3287,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/BaseFile.java,527240b445b23cef1a655eccbb3b2c0eb7d178c1,1590780416,166,201f8bf0e5084daa9fcc1e8418762ecb10967036,1590789089,166,,,,,"      this.lowerBounds = null;",,,7441
3288,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/BaseFile.java,527240b445b23cef1a655eccbb3b2c0eb7d178c1,1590780416,167,201f8bf0e5084daa9fcc1e8418762ecb10967036,1590789089,167,,,,,"      this.upperBounds = null;",,,7441
3289,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/MergingSnapshotProducer.java,bd606f56b14c49f39aa745534718d0cb6a50a8c9,1591803799,271,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,262,,,,,"      this.cachedNewManifest = null;",,,7441
3290,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/RowDataRewriter.java,cad124967ceb740178a3f65b75f19017494b430d,1591907364,96,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,114,,,,,"      dataReader = null;",,,7441
3291,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/actions/TestRewriteDataFilesAction.java,cad124967ceb740178a3f65b75f19017494b430d,1591907364,74,,,,,,,,"    TestRewriteDataFilesAction.spark = null;",,,7441
3292,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Reader.java,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,254,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,259,,,,,"    this.schema = null;",,,7441
3293,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Reader.java,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,255,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,260,,,,,"    this.type = null;",,,7441
3294,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Reader.java,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,272,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,277,,,,,"    this.schema = null;",,,7441
3295,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/Reader.java,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,273,5a3cd22e775dfa8bf79deab675390aad48ba79a5,1592413028,278,,,,,"    this.type = null;",,,7441
3296,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/RandomData.java,ffdcf09027e09460b7d7505e65aea119107934a3,1592259379,311,edb8d7759d74418daa677a8c39420f29e28edb66,1593453406,309,,,,,"          valuesArr[i] = null;",,,7441
3297,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,64,,,,,,,,"      this.spec = null;",,,7441
3298,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,65,,,,,,,,"      this.partitionData = null;",,,7441
3299,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,72,,,,,,,,"      this.partitionData = isPartitioned ? DataFiles.newPartitionData(spec) : null;",,,7441
3300,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,79,,,,,,,,"      this.filePath = null;",,,7441
3301,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,80,,,,,,,,"      this.format = null;",,,7441
3302,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,83,,,,,,,,"      this.columnSizes = null;",,,7441
3303,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,84,,,,,,,,"      this.valueCounts = null;",,,7441
3304,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,85,,,,,,,,"      this.nullValueCounts = null;",,,7441
3305,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,86,,,,,,,,"      this.lowerBounds = null;",,,7441
3306,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,87,,,,,,,,"      this.upperBounds = null;",,,7441
3307,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/FileMetadata.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,211,,,,,,,,"          content, filePath, format, isPartitioned ? DataFiles.copy(spec, partitionData) : null,",,,7441
3308,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/MergingSnapshotProducer.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,267,,,,,,,,"      this.cachedNewDeleteManifest = null;",,,7441
3309,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/MergingSnapshotProducer.java,e0180f783f62f4cd0f30b13a62ef5fcd1cc6f3b9,1592321265,348,,,,,,,,"      cachedNewDeleteManifest = null;",,,7441
3310,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/TableScanContext.java,e2ef87c4c66c5ed6be13a335d4e03558bac5ec1a,1592352725,43,,,,,,,,"    this.snapshotId = null;",,,7441
3311,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/TableScanContext.java,e2ef87c4c66c5ed6be13a335d4e03558bac5ec1a,1592352725,48,,,,,,,,"    this.selectedColumns = null;",,,7441
3312,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/TableScanContext.java,e2ef87c4c66c5ed6be13a335d4e03558bac5ec1a,1592352725,50,,,,,,,,"    this.fromSnapshotId = null;",,,7441
3313,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/core/src/main/java/org/apache/iceberg/TableScanContext.java,e2ef87c4c66c5ed6be13a335d4e03558bac5ec1a,1592352725,51,,,,,,,,"    this.toSnapshotId = null;",,,7441
3314,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BaseWriter.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,116,851c62edd2d068eb8023311f4bbc4380ad4e8e1c,1594681463,117,,,,,"      this.currentAppender = null;",,,7441
3315,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/main/java/org/apache/iceberg/spark/source/BaseWriter.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,132,851c62edd2d068eb8023311f4bbc4380ad4e8e1c,1594681463,133,,,,,"      this.currentFile = null;",,,7441
3316,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,238,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,238,,,,,"    this.tasks = null; // invalidate cached tasks, if present",,,7441
3317,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,255,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,255,,,,,"    this.schema = null;",,,7441
3318,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,256,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,256,,,,,"    this.type = null;",,,7441
3319,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,273,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,273,,,,,"    this.schema = null;",,,7441
3320,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,274,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,274,,,,,"    this.type = null;",,,7441
3321,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/actions/TestRemoveOrphanFilesAction.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,82,92ae3d38bd348b2cc7058ccdc83bd618d0233474,1593981497,85,,,,,"    TestRemoveOrphanFilesAction.spark = null;",,,7441
3322,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/actions/TestRewriteDataFilesAction.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,74,,,,,,,,"    TestRewriteDataFilesAction.spark = null;",,,7441
3323,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/actions/TestRewriteManifestsAction.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,86,,,,,,,,"    TestRewriteManifestsAction.spark = null;",,,7441
3324,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/TestSparkDataFile.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,112,,,,,,,,"    TestSparkDataFile.spark = null;",,,7441
3325,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/TestSparkDataFile.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,113,,,,,,,,"    TestSparkDataFile.sparkContext = null;",,,7441
3326,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestAvroScan.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,67,,,,,,,,"    TestAvroScan.spark = null;",,,7441
3327,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,126,,,,,,,,"    TestDataFrameWrites.spark = null;",,,7441
3328,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,127,,,,,,,,"    TestDataFrameWrites.sc = null;",,,7441
3329,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestDataSourceOptions.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,73,,,,,,,,"    TestDataSourceOptions.spark = null;",,,7441
3330,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,147,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,147,,,,,"    TestFilteredScan.spark = null;",,,7441
3331,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestForwardCompatibility.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,92,,,,,,,,"    TestForwardCompatibility.spark = null;",,,7441
3332,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHadoopTables.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,50,,,,,,,,"    TestIcebergSourceHadoopTables.spark = null;",,,7441
3333,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,74,,,,,,,,"    TestIcebergSourceHiveTables.catalog = null;",,,7441
3334,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,76,,,,,,,,"    TestIcebergSourceHiveTables.clients = null;",,,7441
3335,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,78,,,,,,,,"    TestIcebergSourceHiveTables.metastore = null;",,,7441
3336,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestIcebergSourceHiveTables.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,80,,,,,,,,"    TestIcebergSourceHiveTables.spark = null;",,,7441
3337,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestIdentityPartitionData.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,78,,,,,,,,"    TestIdentityPartitionData.spark = null;",,,7441
3338,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestParquetScan.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,71,,,,,,,,"    TestParquetScan.spark = null;",,,7441
3339,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestPartitionValues.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,106,,,,,,,,"    TestPartitionValues.spark = null;",,,7441
3340,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSnapshotSelection.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,67,,,,,,,,"    TestSnapshotSelection.spark = null;",,,7441
3341,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkDataWrite.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,83,,,,,,,,"    TestSparkDataWrite.spark = null;",,,7441
3342,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkReadProjection.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,94,,,,,,,,"    TestSparkReadProjection.spark = null;",,,7441
3343,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkSchema.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,67,,,,,,,,"    TestSparkSchema.spark = null;",,,7441
3344,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtil.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,92,8dd269bd5f1cc0c5260c83c22a1e010a6f92e460,1593478781,91,,,,,"    TestSparkTableUtil.spark = null;",,,7441
3345,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtilWithInMemoryCatalog.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,76,8dd269bd5f1cc0c5260c83c22a1e010a6f92e460,1593478781,75,,,,,"    TestSparkTableUtilWithInMemoryCatalog.spark = null;",,,7441
3346,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestStructuredStreaming.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,77,,,,,,,,"    TestStructuredStreaming.spark = null;",,,7441
3347,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestWriteMetricsConfig.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,87,,,,,,,,"    TestWriteMetricsConfig.spark = null;",,,7441
3348,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestWriteMetricsConfig.java,845de7bfe78bc8ba3480aad219fcef9f71477023,1592614943,88,,,,,,,,"    TestWriteMetricsConfig.sc = null;",,,7441
3349,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark2/src/test/java/org/apache/iceberg/spark/source/TestNameMappingProjection.java,33f1825b72efe05c7d83feb68fa1669eb00bb129,1592933322,81,705da1b7fdd18614b73ccbf7e1c67f13310f70ab,1592956926,82,,,,,"    TestNameMappingProjection.spark = null;",,,7441
3350,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,e168f59d91469e4f6aae32dbb78f8fc504a64eb2,1593454001,124,,,,,,,,"        this.dictionaries = null;",,,7441
3351,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,e168f59d91469e4f6aae32dbb78f8fc504a64eb2,1593454001,125,,,,4d1fc91d6528db88548c506a0b110b50121d67ff,1594057764,-1,1594057764/1593454001,"        this.dictCache = null;","         }
       }
 
-      try {
-        return ExpressionVisitors.visitEvaluator(expr, this);
-
-      } finally {
-        // allow temporary state to be collected because this is in a thread-local
-        this.dictionaries = null;
-        this.dictCache = null;
-        this.isFallback = null;
-        this.mayContainNulls = null;
-        this.cols = null;
-        this.conversions = null;
-      }
+      return ExpressionVisitors.visitEvaluator(expr, this);
     }
 
     @Override
",,7441
3352,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,e168f59d91469e4f6aae32dbb78f8fc504a64eb2,1593454001,126,,,,4d1fc91d6528db88548c506a0b110b50121d67ff,1594057764,-1,1594057764/1593454001,"        this.isFallback = null;","         }
       }
 
-      try {
-        return ExpressionVisitors.visitEvaluator(expr, this);
-
-      } finally {
-        // allow temporary state to be collected because this is in a thread-local
-        this.dictionaries = null;
-        this.dictCache = null;
-        this.isFallback = null;
-        this.mayContainNulls = null;
-        this.cols = null;
-        this.conversions = null;
-      }
+      return ExpressionVisitors.visitEvaluator(expr, this);
     }
 
     @Override
",,7441
3353,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,e168f59d91469e4f6aae32dbb78f8fc504a64eb2,1593454001,127,,,,4d1fc91d6528db88548c506a0b110b50121d67ff,1594057764,-1,1594057764/1593454001,"        this.mayContainNulls = null;","         }
       }
 
-      try {
-        return ExpressionVisitors.visitEvaluator(expr, this);
-
-      } finally {
-        // allow temporary state to be collected because this is in a thread-local
-        this.dictionaries = null;
-        this.dictCache = null;
-        this.isFallback = null;
-        this.mayContainNulls = null;
-        this.cols = null;
-        this.conversions = null;
-      }
+      return ExpressionVisitors.visitEvaluator(expr, this);
     }
 
     @Override
",,7441
3354,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,e168f59d91469e4f6aae32dbb78f8fc504a64eb2,1593454001,128,,,,4d1fc91d6528db88548c506a0b110b50121d67ff,1594057764,-1,1594057764/1593454001,"        this.cols = null;","         }
       }
 
-      try {
-        return ExpressionVisitors.visitEvaluator(expr, this);
-
-      } finally {
-        // allow temporary state to be collected because this is in a thread-local
-        this.dictionaries = null;
-        this.dictCache = null;
-        this.isFallback = null;
-        this.mayContainNulls = null;
-        this.cols = null;
-        this.conversions = null;
-      }
+      return ExpressionVisitors.visitEvaluator(expr, this);
     }
 
     @Override
",,7441
3355,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java,e168f59d91469e4f6aae32dbb78f8fc504a64eb2,1593454001,129,,,,4d1fc91d6528db88548c506a0b110b50121d67ff,1594057764,-1,1594057764/1593454001,"        this.conversions = null;","         }
       }
 
-      try {
-        return ExpressionVisitors.visitEvaluator(expr, this);
-
-      } finally {
-        // allow temporary state to be collected because this is in a thread-local
-        this.dictionaries = null;
-        this.dictCache = null;
-        this.isFallback = null;
-        this.mayContainNulls = null;
-        this.cols = null;
-        this.conversions = null;
-      }
+      return ExpressionVisitors.visitEvaluator(expr, this);
     }
 
     @Override
",,7441
3356,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestAvroScan.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,67,,,,,,,,"    TestAvroScan.spark = null;",,,7441
3357,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,127,,,,,,,,"    TestDataFrameWrites.spark = null;",,,7441
3358,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataFrameWrites.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,128,,,,,,,,"    TestDataFrameWrites.sc = null;",,,7441
3359,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestDataSourceOptions.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,73,,,,,,,,"    TestDataSourceOptions.spark = null;",,,7441
3360,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestForwardCompatibility.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,93,,,,,,,,"    TestForwardCompatibility.spark = null;",,,7441
3361,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestIdentityPartitionData.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,78,,,,,,,,"    TestIdentityPartitionData.spark = null;",,,7441
3362,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestParquetScan.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,71,,,,,,,,"    TestParquetScan.spark = null;",,,7441
3363,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestPartitionValues.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,106,,,,,,,,"    TestPartitionValues.spark = null;",,,7441
3364,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSnapshotSelection.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,67,,,,,,,,"    TestSnapshotSelection.spark = null;",,,7441
3365,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkDataFile.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,114,,,,,,,,"    TestSparkDataFile.spark = null;",,,7441
3366,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkDataFile.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,115,,,,,,,,"    TestSparkDataFile.sparkContext = null;",,,7441
3367,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkDataWrite.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,84,,,,,,,,"    TestSparkDataWrite.spark = null;",,,7441
3368,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkReadProjection.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,94,,,,,,,,"    TestSparkReadProjection.spark = null;",,,7441
3369,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestSparkSchema.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,67,,,,,,,,"    TestSparkSchema.spark = null;",,,7441
3370,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestStructuredStreaming.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,77,,,,,,,,"    TestStructuredStreaming.spark = null;",,,7441
3371,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestWriteMetricsConfig.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,87,,,,,,,,"    TestWriteMetricsConfig.spark = null;",,,7441
3372,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/source/TestWriteMetricsConfig.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,88,,,,,,,,"    TestWriteMetricsConfig.sc = null;",,,7441
3373,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark3/src/main/java/org/apache/iceberg/spark/source/SparkWriteBuilder.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,69,,,,,,,,"        options.get(""overwrite-mode"").toLowerCase(Locale.ROOT) : null;",,,7441
3374,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark3/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java,51c930e33867e54b3d7e0159b11d6b9c4bc81f1a,1593478565,141,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,145,,,,,"    TestFilteredScan.spark = null;",,,7441
3375,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/SparkTestBase.java,0bad6703bc8796387f3084a2120209002ad13d54,1593647077,61,115a1450c0e62edd835d0dd77a6513ff3717479c,1594249430,67,,,,,"    SparkTestBase.catalog = null;",,,7441
3376,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/SparkTestBase.java,0bad6703bc8796387f3084a2120209002ad13d54,1593647077,63,115a1450c0e62edd835d0dd77a6513ff3717479c,1594249430,69,,,,,"    SparkTestBase.metastore = null;",,,7441
3377,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/SparkTestBase.java,0bad6703bc8796387f3084a2120209002ad13d54,1593647077,65,115a1450c0e62edd835d0dd77a6513ff3717479c,1594249430,71,,,,,"    SparkTestBase.spark = null;",,,7441
3378,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark3/src/test/java/org/apache/iceberg/spark/sql/TestSelect.java,115a1450c0e62edd835d0dd77a6513ff3717479c,1594249430,56,,,,,,,,"    this.lastScanEvent = null;",,,7441
3379,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/orc/src/main/java/org/apache/iceberg/orc/OrcValueReaders.java,a2796f0fd38e517d17462ebc7b0234282e976dd3,1594425939,178,,,,,,,,"          vector = null;",,,7441
3380,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestHelpers.java,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,642,,,,,,,,"          expected.isNullAt(i) ? null : expected.get(i, type),",,,7441
3381,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed2,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/iceberg/spark/src/test/java/org/apache/iceberg/spark/data/TestHelpers.java,6fab8f57bdb7e5fe7eadc3ff41558581338e1b69,1594675656,643,,,,,,,,"          actual.isNullAt(i) ? null : actual.get(i, type));",,,7441
