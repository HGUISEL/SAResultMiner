Detection ID,Latest Commit ID,PMD Version,Rule Name,File Path,Violation Introducing Commit ID,VIC Date,VIC Line Num.,Latest Detection Commit ID,LDC ID Date,LDC Line Num.,Violation Fixed Commit ID,VFC Date,VFC Line Num.,Fixed Period(day),Original Code,Fixed Code,Really Fixed?,Time
3382,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftServer.java,fdf8224104342fb6d047b13f9ced200229d4705e,1471408338,148,be6432ebf1fe40c5ae0b4778f587ba352e32e65e,1471408338,173,,,,,"      leaderState = null;",,,8558
3383,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftServer.java,fdf8224104342fb6d047b13f9ced200229d4705e,1471408338,160,be6432ebf1fe40c5ae0b4778f587ba352e32e65e,1471408338,188,,,,,"    electionDaemon = null;",,,8558
3384,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftServer.java,fdf8224104342fb6d047b13f9ced200229d4705e,1471408338,169,be6432ebf1fe40c5ae0b4778f587ba352e32e65e,1471408338,197,,,,,"    heartbeatMonitorDaemon = null;",,,8558
3385,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,fdf8224104342fb6d047b13f9ced200229d4705e,1471408338,53,bb671d1117d45b365606bcb85706d06c9057da4e,1471408388,74,18d3f645cd228c1132df48751d6550a2889dda8f,1471408392,-1,1471408392/1471408338,"    votedFor = null;","   /** Index of highest log entry applied to state machine */
   private long lastApplied;
 
-  ServerState(String id, RaftConfiguration conf) {
+  ServerState(String id, RaftConfiguration conf, RaftProperties prop)
+      throws IOException {
     this.selfId = id;
     configurationManager = new ConfigurationManager(conf);
-    // TODO load log/currentTerm/votedFor from persistent storage
-    log = new MemoryRaftLog(id);
-    currentTerm = 0;
-    votedFor = null;
     leaderId = null;
-    loadConfFromLog();
+
+    log = initLog(id, prop);
+    RaftLog.Metadata metadata = log.loadMetadata();
+    currentTerm = metadata.getTerm();
+    votedFor = metadata.getVotedFor();
   }
 
-  private ServerState(String id, RaftConfiguration conf, MemoryRaftLog newLog) {
-    this.selfId = id;
-    this.configurationManager = new ConfigurationManager(conf);
-    currentTerm = 0;
-    votedFor = null;
-    leaderId = null;
-    log = newLog;
-  }
-
-  private void loadConfFromLog() {
-    // TODO apply raftlog and update its RaftConfiguration
+  private RaftLog initLog(String id, RaftProperties prop)
+      throws IOException {
+    if (prop.getBoolean(RAFT_SERVER_USE_MEMORY_LOG_KEY,
+        RAFT_SERVER_USE_MEMORY_LOG_DEFAULT)) {
+      return new MemoryRaftLog(id);
+    } else {
+      return new SegmentedRaftLog(id, prop, configurationManager);
+    }
   }
 
   public RaftConfiguration getRaftConf() {
",,8558
3386,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,fdf8224104342fb6d047b13f9ced200229d4705e,1471408338,54,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,80,1eed4744c68860907db9ff3feab93a7ca825e1e9,1471408444,-1,1471408444/1471408338,"    leaderId = null;","    */
   private String votedFor;
 
-  /** Index of highest log entry applied to state machine */
-  private long lastApplied;
-
-  ServerState(String id, RaftConfiguration conf, RaftProperties prop)
-      throws IOException {
+  ServerState(String id, RaftConfiguration conf, RaftProperties prop,
+      StateMachine stateMachine) throws IOException {
     this.selfId = id;
     configurationManager = new ConfigurationManager(conf);
-    leaderId = null;
+    storage = new RaftStorage(prop, RaftConstants.StartupOption.REGULAR);
+    long lastApplied = initStatemachine(stateMachine, prop);
 
+    leaderId = null;
     log = initLog(id, prop);
     RaftLog.Metadata metadata = log.loadMetadata();
     currentTerm = metadata.getTerm();
     votedFor = metadata.getVotedFor();
+
+    stateMachineUpdater = new StateMachineUpdater(stateMachine, log, storage,
+        lastApplied, prop);
   }
 
+  private long initStatemachine(StateMachine sm, RaftProperties properties)
+      throws IOException {
+    sm.initialize(properties, storage);
+    RaftStorageDirectory.PathAndIndex pi = storage.getLastestSnapshotPath();
+    if (pi == null || pi.endIndex < 0) {
+      return RaftConstants.INVALID_LOG_INDEX;
+    }
+    return sm.loadSnapshot(pi.path.toFile());
+  }
+
+  void start() {
+    stateMachineUpdater.start();
+  }
+
+  /**
+   * note we do not apply log entries to the state machine here since we do not
+   * know whether they have been committed.
+   */
   private RaftLog initLog(String id, RaftProperties prop)
       throws IOException {
     if (prop.getBoolean(RAFT_SERVER_USE_MEMORY_LOG_KEY,
         RAFT_SERVER_USE_MEMORY_LOG_DEFAULT)) {
       return new MemoryRaftLog(id);
     } else {
-      return new SegmentedRaftLog(id, prop, configurationManager);
+      return new SegmentedRaftLog(id, this.storage, configurationManager);
     }
   }
 
",,8558
3387,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftServer.java,2b7c5c94754f8e80bb44fb2a8c1d0a9740d54310,1471408339,206,5c32b40a466db43cd51efeddc38315f603e9b340,1471408340,194,29bdd1e6e31bf69eab39e880e7e1a5b4f1d25d85,1471408340,-1,1471408340/1471408339,"      leaderState = null;","     }
     if (isLeader()) {
       assert leaderState != null;
-      leaderState.stop();
-      leaderState = null;
+      shutdownLeaderState();
       // TODO: handle pending requests: we can send back
       // NotLeaderException and let the client retry
     } else if (isCandidate()) {
",,8558
3388,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftServer.java,2b7c5c94754f8e80bb44fb2a8c1d0a9740d54310,1471408339,227,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,267,,,,,"    electionDaemon = null;",,,8558
3389,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftServer.java,2b7c5c94754f8e80bb44fb2a8c1d0a9740d54310,1471408339,249,e3c885618f8b703197e129f291444049f1f60121,1471408343,266,,,,,"    heartbeatMonitor = null;",,,8558
3390,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,2b7c5c94754f8e80bb44fb2a8c1d0a9740d54310,1471408339,75,bb671d1117d45b365606bcb85706d06c9057da4e,1471408388,126,,,,,"    leaderId = null;",,,8558
3391,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,2b7c5c94754f8e80bb44fb2a8c1d0a9740d54310,1471408339,85,e3c885618f8b703197e129f291444049f1f60121,1471408343,104,,,,,"    leaderId = null;",,,8558
3392,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftConfiguration.java,5c32b40a466db43cd51efeddc38315f603e9b340,1471408340,92,,,,75d0699e242b9c0e6be695fa8a6cb6da62dafc42,1471408341,-1,1471408341/1471408340,"    oldConf = null;","   /**
    * The state of the raft ring.
    */
-  private State state;
+  private final State state;
   /**
    * non-null while in TRANSITIONAL state
    */
-  private SimpleConfiguration oldConf;
+  private final SimpleConfiguration oldConf;
   /**
    * the new configuration while in TRANSITIONAL state,
    * or the current configuration in STABLE/STAGING state
    */
-  private SimpleConfiguration conf;
+  private final SimpleConfiguration conf;
 
   // TODO private Map<String, RaftPeer> stagingNewPeers;
 
   public RaftConfiguration(RaftPeer[] peers) {
+    Preconditions.checkArgument(peers != null && peers.length > 0);
     this.conf = new SimpleConfiguration(peers);
+    this.oldConf = null;
     this.state = State.STABLE;
   }
 
-  public synchronized State getState() {
+  public RaftConfiguration(RaftPeer[] newPeers, RaftPeer[] oldPeers) {
+    Preconditions.checkArgument(newPeers != null && newPeers.length > 0);
+    Preconditions.checkArgument(oldPeers != null && oldPeers.length > 0);
+
+    this.conf = new SimpleConfiguration(newPeers);
+    this.oldConf = new SimpleConfiguration(oldPeers);
+    this.state = State.TRANSITIONAL;
+  }
+
+  public State getState() {
     return this.state;
   }
 
-  public synchronized boolean containsInConf(String peerId) {
+  public boolean inTransitionState() {
+    return this.state == State.TRANSITIONAL;
+  }
+
+  public boolean containsInConf(String peerId) {
     return conf.contains(peerId);
   }
 
-  public synchronized boolean containsInOldConf(String peerId) {
+  public boolean containsInOldConf(String peerId) {
     return oldConf != null && oldConf.contains(peerId);
   }
 
-  public synchronized boolean inStableState() {
-    final boolean stable = state == State.STABLE;
-    if (stable) {
-      Preconditions.checkState(oldConf == null && conf != null);
-    }
-    return stable;
-  }
-
-  public synchronized void setNewConfiguration(RaftPeer[] newPeers) {
-    Preconditions.checkArgument(newPeers != null && newPeers.length > 0);
-    Preconditions.checkState(inStableState());
-    oldConf = conf;
-    conf = new SimpleConfiguration(newPeers);
-    state = State.TRANSITIONAL;
-  }
-
-  public synchronized boolean inTransitionState() {
-    final boolean transitional = state == State.TRANSITIONAL;
-    if (transitional) {
-      Preconditions.checkState(oldConf != null && conf != null);
-    }
-    return transitional;
-  }
-
-  public synchronized void commitNewConfiguration() {
-    Preconditions.checkState(inTransitionState());
-    oldConf = null;
-    state = State.STABLE;
-  }
-
-  public synchronized RaftPeer getPeer(String id) {
+  public RaftPeer getPeer(String id) {
     RaftPeer peer = conf.getPeer(id);
     if (peer != null) {
       return peer;
",,8558
3393,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftServer.java,29bdd1e6e31bf69eab39e880e7e1a5b4f1d25d85,1471408340,207,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,258,,,,,"    leaderState = null;",,,8558
3394,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftConfiguration.java,75d0699e242b9c0e6be695fa8a6cb6da62dafc42,1471408341,52,9c59708578b89aa5998eaa7332b18e753f81c514,1471408423,69,,,,,"    this.oldConf = null;",,,8558
3395,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftServer.java,d07cf12e89f0dfd9771fa0ac08215facf4dfd422,1471408344,189,164182cd8be2edecc1732caf2c1d4dcc2f6b1af9,1471408345,200,,,,,"    heartbeatMonitor = null;",,,8558
3396,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,d07cf12e89f0dfd9771fa0ac08215facf4dfd422,1471408344,102,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,150,,,,,"    leaderId = null;",,,8558
3397,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,d07cf12e89f0dfd9771fa0ac08215facf4dfd422,1471408344,107,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,160,,,,,"    votedFor = null;",,,8558
3398,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,d07cf12e89f0dfd9771fa0ac08215facf4dfd422,1471408344,116,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,168,,,,,"    leaderId = null;",,,8558
3399,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/LeaderState.java,702d30c1e869a0885606934d68c6fb0fa6cc0684,1471408345,203,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,229,,,,,"    this.stagingState = null;",,,8558
3400,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/PendingRequestsHandler.java,702d30c1e869a0885606934d68c6fb0fa6cc0684,1471408345,68,29a58781dc7338aea37ec5ee09541f8112d320c8,1471408446,50,,,,,"        pendingRequest = null;",,,8558
3401,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,1c1ff9e53fec5fa8a48f642b2dd30fe9afde0e6c,1471408345,63,bb671d1117d45b365606bcb85706d06c9057da4e,1471408388,65,18d3f645cd228c1132df48751d6550a2889dda8f,1471408392,-1,1471408392/1471408345,"    votedFor = null;","   /** Index of highest log entry applied to state machine */
   private long lastApplied;
 
-  ServerState(String id, RaftConfiguration conf) {
+  ServerState(String id, RaftConfiguration conf, RaftProperties prop)
+      throws IOException {
     this.selfId = id;
     configurationManager = new ConfigurationManager(conf);
-    // TODO load log/currentTerm/votedFor from persistent storage
-    log = new MemoryRaftLog(id);
-    currentTerm = 0;
-    votedFor = null;
     leaderId = null;
-    loadConfFromLog();
+
+    log = initLog(id, prop);
+    RaftLog.Metadata metadata = log.loadMetadata();
+    currentTerm = metadata.getTerm();
+    votedFor = metadata.getVotedFor();
   }
 
-  private ServerState(String id, RaftConfiguration conf, MemoryRaftLog newLog) {
-    this.selfId = id;
-    this.configurationManager = new ConfigurationManager(conf);
-    currentTerm = 0;
-    votedFor = null;
-    leaderId = null;
-    log = newLog;
-  }
-
-  private void loadConfFromLog() {
-    // TODO apply raftlog and update its RaftConfiguration
+  private RaftLog initLog(String id, RaftProperties prop)
+      throws IOException {
+    if (prop.getBoolean(RAFT_SERVER_USE_MEMORY_LOG_KEY,
+        RAFT_SERVER_USE_MEMORY_LOG_DEFAULT)) {
+      return new MemoryRaftLog(id);
+    } else {
+      return new SegmentedRaftLog(id, prop, configurationManager);
+    }
   }
 
   public RaftConfiguration getRaftConf() {
",,8558
3402,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,1c1ff9e53fec5fa8a48f642b2dd30fe9afde0e6c,1471408345,64,bb671d1117d45b365606bcb85706d06c9057da4e,1471408388,66,1eed4744c68860907db9ff3feab93a7ca825e1e9,1471408444,-1,1471408444/1471408345,"    leaderId = null;","    */
   private String votedFor;
 
-  /** Index of highest log entry applied to state machine */
-  private long lastApplied;
-
-  ServerState(String id, RaftConfiguration conf, RaftProperties prop)
-      throws IOException {
+  ServerState(String id, RaftConfiguration conf, RaftProperties prop,
+      StateMachine stateMachine) throws IOException {
     this.selfId = id;
     configurationManager = new ConfigurationManager(conf);
-    leaderId = null;
+    storage = new RaftStorage(prop, RaftConstants.StartupOption.REGULAR);
+    long lastApplied = initStatemachine(stateMachine, prop);
 
+    leaderId = null;
     log = initLog(id, prop);
     RaftLog.Metadata metadata = log.loadMetadata();
     currentTerm = metadata.getTerm();
     votedFor = metadata.getVotedFor();
+
+    stateMachineUpdater = new StateMachineUpdater(stateMachine, log, storage,
+        lastApplied, prop);
   }
 
+  private long initStatemachine(StateMachine sm, RaftProperties properties)
+      throws IOException {
+    sm.initialize(properties, storage);
+    RaftStorageDirectory.PathAndIndex pi = storage.getLastestSnapshotPath();
+    if (pi == null || pi.endIndex < 0) {
+      return RaftConstants.INVALID_LOG_INDEX;
+    }
+    return sm.loadSnapshot(pi.path.toFile());
+  }
+
+  void start() {
+    stateMachineUpdater.start();
+  }
+
+  /**
+   * note we do not apply log entries to the state machine here since we do not
+   * know whether they have been committed.
+   */
   private RaftLog initLog(String id, RaftProperties prop)
       throws IOException {
     if (prop.getBoolean(RAFT_SERVER_USE_MEMORY_LOG_KEY,
         RAFT_SERVER_USE_MEMORY_LOG_DEFAULT)) {
       return new MemoryRaftLog(id);
     } else {
-      return new SegmentedRaftLog(id, prop, configurationManager);
+      return new SegmentedRaftLog(id, this.storage, configurationManager);
     }
   }
 
",,8558
3403,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/RaftServer.java,6eae027551dba008803d227ca797459b2ad4a52f,1471408346,238,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,286,,,,,"    heartbeatMonitor = null;",,,8558
3404,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/LeaderState.java,b52a7788628de987242b636826bb114d2237e6ed,1471408347,679,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,795,,,,,"      LeaderState.this.stagingState = null;",,,8558
3405,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/LogOutputStream.java,df2e59dd0092a55a34cb0a0e1a3a7aaac063e566,1471408387,113,1eed4744c68860907db9ff3feab93a7ca825e1e9,1471408444,115,,,,,"      fc = null;",,,8558
3406,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/LogOutputStream.java,df2e59dd0092a55a34cb0a0e1a3a7aaac063e566,1471408387,114,1eed4744c68860907db9ff3feab93a7ca825e1e9,1471408444,116,,,,,"      out = null;",,,8558
3407,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/MetaFile.java,b8f29fad784e84b932fade540933dafaa1b8e587,1471408388,86,d2726fe8bb99f9a46d93d2bdf13dfb2a24e1a570,1471408388,86,,,,,"      fos = null;",,,8558
3408,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftStorageDirectory.java,b8f29fad784e84b932fade540933dafaa1b8e587,1471408388,86,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,116,,,,,"    this.lock = null;",,,8558
3409,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftStorageDirectory.java,b8f29fad784e84b932fade540933dafaa1b8e587,1471408388,310,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,398,,,,,"    lock = null;",,,8558
3410,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogCache.java,d2726fe8bb99f9a46d93d2bdf13dfb2a24e1a570,1471408388,157,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,161,,,,,"        (closedSegments.isEmpty() ? null :",,,8558
3411,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogCache.java,d2726fe8bb99f9a46d93d2bdf13dfb2a24e1a570,1471408388,199,26d15107a46260a41822f1e13f3d573b3ba0834f,1471408389,199,,,,,"          openSegment = null;",,,8558
3412,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogCache.java,d2726fe8bb99f9a46d93d2bdf13dfb2a24e1a570,1471408388,202,26d15107a46260a41822f1e13f3d573b3ba0834f,1471408389,202,,,,,"          openSegment = null;",,,8558
3413,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogCache.java,d2726fe8bb99f9a46d93d2bdf13dfb2a24e1a570,1471408388,223,26d15107a46260a41822f1e13f3d573b3ba0834f,1471408389,223,,,,,"        openSegment = null;",,,8558
3414,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogWorker.java,d2726fe8bb99f9a46d93d2bdf13dfb2a24e1a570,1471408388,161,1adde6ee88853e2b97b8a52bb5fce27ffa800470,1471408389,161,,,,,"      out = null;",,,8558
3415,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogWorker.java,d2726fe8bb99f9a46d93d2bdf13dfb2a24e1a570,1471408388,215,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,217,,,,,"      out = null;",,,8558
3416,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogCache.java,1adde6ee88853e2b97b8a52bb5fce27ffa800470,1471408389,189,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,188,,,,,"      openSegment = null;",,,8558
3417,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogCache.java,1adde6ee88853e2b97b8a52bb5fce27ffa800470,1471408389,198,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,197,,,,,"    openSegment = null;",,,8558
3418,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogCache.java,1adde6ee88853e2b97b8a52bb5fce27ffa800470,1471408389,221,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,220,,,,,"          openSegment = null;",,,8558
3419,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogWorker.java,21ef561b07e46d907cf26fd5b353b13ea73fdc5d,1471408391,211,a2b2c892c1f8c67a0f6ceeba4381703ce3d96fbf,1471408421,215,,,,,"      out = null;",,,8558
3420,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/storage/RaftLogWorker.java,21ef561b07e46d907cf26fd5b353b13ea73fdc5d,1471408391,266,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,263,,,,,"      out = null;",,,8558
3421,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/conf/RaftProperties.java,18d3f645cd228c1132df48751d6550a2889dda8f,1471408392,258,,,,,,,,"    properties = null;                            // trigger reload",,,8558
3422,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,18d3f645cd228c1132df48751d6550a2889dda8f,1471408392,123,d9e70b26990c6b99d4565edf0d2ab3a9aba4e090,1471408446,159,,,,,"    votedFor = null;",,,8558
3423,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,18d3f645cd228c1132df48751d6550a2889dda8f,1471408392,124,dc52cfd384bfe72b68fe51aaa6039cc065d9cc2c,1471408422,125,,,,,"    leaderId = null;",,,8558
3424,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/protocol/RaftPeer.java,59d956ed35dfe423b96c49157bf49a3fbe4f10be,1471408419,28,,,,24f021188dbe464a2434902c75afa78f821d53ef,1471408421,-1,1471408421/1471408419,"    this.address = null; // TODO"," 
   public RaftPeer(String id) {
     this.id = id;
-    this.address = null; // TODO
+    this.address = RaftUtils.newInetSocketAddress(id);
   }
 
   public String getId() {
",,8558
3425,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/raft/server/ServerState.java,1eed4744c68860907db9ff3feab93a7ca825e1e9,1471408444,75,,,,,,,,"    leaderId = null;",,,8558
3426,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/conf/RaftProperties.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,234,,,,,,,,"    properties = null;                            // trigger reload",,,8558
3427,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/LeaderState.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,213,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,213,,,,,"    this.stagingState = null;",,,8558
3428,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/LeaderState.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,779,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,799,,,,,"      LeaderState.this.stagingState = null;",,,8558
3429,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/PendingRequestsHandler.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,50,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,50,,,,,"        pendingRequest = null;",,,8558
3430,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/RaftConfiguration.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,69,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,70,,,,,"    this.oldConf = null;",,,8558
3431,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/RaftServer.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,244,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,247,,,,,"    leaderState = null;",,,8558
3432,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/RaftServer.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,253,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,256,,,,,"    electionDaemon = null;",,,8558
3433,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/RaftServer.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,272,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,275,,,,,"    heartbeatMonitor = null;",,,8558
3434,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/ServerState.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,76,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,83,,,,,"    leaderId = null;",,,8558
3435,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/ServerState.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,146,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,180,,,,,"    leaderId = null;",,,8558
3436,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/ServerState.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,155,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,189,,,,,"    votedFor = null;",,,8558
3437,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/ServerState.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,156,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,190,,,,,"    leaderId = null;",,,8558
3438,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/ServerState.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,164,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,198,,,,,"    leaderId = null;",,,8558
3439,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/LogOutputStream.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,111,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,109,,,,,"      fc = null;",,,8558
3440,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/LogOutputStream.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,112,ad28c9ab5565b2268129dda69aa6319e3005cb65,1471408450,110,,,,,"      out = null;",,,8558
3441,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/MetaFile.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,80,,,,,,,,"      fos = null;",,,8558
3442,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,157,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,157,,,,,"        (closedSegments.isEmpty() ? null :",,,8558
3443,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,184,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,184,,,,,"      openSegment = null;",,,8558
3444,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,193,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,193,,,,,"    openSegment = null;",,,8558
3445,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,216,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,216,,,,,"          openSegment = null;",,,8558
3446,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftLogWorker.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,217,,,,,,,,"      out = null;",,,8558
3447,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftLogWorker.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,263,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,299,,,,,"      out = null;",,,8558
3448,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftStorageDirectory.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,116,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,121,,,,,"    this.lock = null;",,,8558
3449,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftStorageDirectory.java,5113566945ae57742e9b9a527a461b903e86b33c,1471408446,398,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,404,,,,,"    lock = null;",,,8558
3450,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,2dfbd5eca52892fd246db09ad46bb1e1c1800783,1471408448,320,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,320,,,,,"    openSegment = null;",,,8558
3451,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/hadoop-common-project/hadoop-common/src/main/java/org/apache/raft/server/storage/RaftLogWorker.java,2dfbd5eca52892fd246db09ad46bb1e1c1800783,1471408448,243,ffdaa41f127d58c8d493d7c36ff06802fcea0ba0,1471408449,243,,,,,"      out = null;",,,8558
3452,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-common/src/main/java/org/apache/raft/conf/RaftProperties.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,234,9095c18d459b6cf9594bff4e7e897d9db94371d2,1482336991,261,,,,,"    properties = null;                            // trigger reload",,,8558
3453,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/LeaderState.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,213,4bd72b11ba8eb57360e307db1d7838c729f67e40,1483015870,228,,,,,"    this.stagingState = null;",,,8558
3454,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/LeaderState.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,799,4bd72b11ba8eb57360e307db1d7838c729f67e40,1483015870,574,,,,,"      LeaderState.this.stagingState = null;",,,8558
3455,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/PendingRequestsHandler.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,50,a3116367c05272658084096a3ec88b62a5aee84c,1471645126,47,,,,,"        pendingRequest = null;",,,8558
3456,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/RaftConfiguration.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,70,a2484fa081ffa5f3dedc3bb728ea8a5d3057c582,1483004942,67,,,,,"    this.oldConf = null;",,,8558
3457,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/RaftServer.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,247,4619aca4dc6d1c20a4f0bdde45f8ee012c72e0ce,1471408662,247,,,,,"    leaderState = null;",,,8558
3458,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/RaftServer.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,256,4619aca4dc6d1c20a4f0bdde45f8ee012c72e0ce,1471408662,256,,,,,"    electionDaemon = null;",,,8558
3459,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/RaftServer.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,275,dd0b631a69927db0dfd7acd1a002380909203773,1483174247,276,,,,,"    heartbeatMonitor = null;",,,8558
3460,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/ServerState.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,83,dd0b631a69927db0dfd7acd1a002380909203773,1483174247,87,,,,,"    leaderId = null;",,,8558
3461,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/ServerState.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,180,dd0b631a69927db0dfd7acd1a002380909203773,1483174247,177,,,,,"    leaderId = null;",,,8558
3462,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/ServerState.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,189,dd0b631a69927db0dfd7acd1a002380909203773,1483174247,186,,,,,"    votedFor = null;",,,8558
3463,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/ServerState.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,190,dd0b631a69927db0dfd7acd1a002380909203773,1483174247,187,,,,,"    leaderId = null;",,,8558
3464,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/ServerState.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,198,dd0b631a69927db0dfd7acd1a002380909203773,1483174247,195,,,,,"    leaderId = null;",,,8558
3465,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/LogOutputStream.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,109,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,135,,,,,"      fc = null;",,,8558
3466,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/LogOutputStream.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,110,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,136,,,,,"      out = null;",,,8558
3467,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/MetaFile.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,80,9095c18d459b6cf9594bff4e7e897d9db94371d2,1482336991,97,,,,,"      fos = null;",,,8558
3468,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,157,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,157,,,,,"        (closedSegments.isEmpty() ? null :",,,8558
3469,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,184,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,184,,,,,"      openSegment = null;",,,8558
3470,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,193,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,193,,,,,"    openSegment = null;",,,8558
3471,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,216,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,216,,,,,"          openSegment = null;",,,8558
3472,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/RaftLogCache.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,320,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,320,,,,,"    openSegment = null;",,,8558
3473,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/RaftLogWorker.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,243,22f3ee0b46a5485deafa84939eb5290938b5552b,1483359028,260,,,,,"      out = null;",,,8558
3474,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/RaftLogWorker.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,299,22f3ee0b46a5485deafa84939eb5290938b5552b,1483359028,318,,,,,"      out = null;",,,8558
3475,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/RaftStorageDirectory.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,121,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,93,,,,,"    this.lock = null;",,,8558
3476,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/storage/RaftStorageDirectory.java,c3ab0d559b18cb064a89081d622471472133457e,1471408661,404,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,353,,,,,"    lock = null;",,,8558
3477,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-common/src/main/java/org/apache/raft/protocol/RaftPeer.java,4619aca4dc6d1c20a4f0bdde45f8ee012c72e0ce,1471408662,28,,,,4bd72b11ba8eb57360e307db1d7838c729f67e40,1483015870,-1,1483015870/1471408662,"    this.address = null;"," 
 import java.net.InetSocketAddress;
 
+/**
+ * A {@link RaftPeer} is a server in a Raft cluster.
+ *
+ * The objects of this class are immutable.
+ */
 public class RaftPeer {
-  public static final RaftPeer[] EMPTY_PEERS = new RaftPeer[0];
+  public static final RaftPeer[] EMPTY_PEERS = {};
 
+  /** The id of the peer. */
   private final String id;
+  /** The address of the peer. */
   private final String address;
 
+  /** Construct a peer with the given id and a null address. */
   public RaftPeer(String id) {
-    this.id = id;
-    this.address = null;
+    this(id, (String)null);
   }
 
+  /** Construct a peer with the given id and address. */
   public RaftPeer(String id, InetSocketAddress address) {
     this(id, address == null ? null :
         HostAndPort.fromParts(address.getAddress().getHostAddress(),
             address.getPort()).toString());
   }
 
+  /** Construct a peer with the given id and address. */
   public RaftPeer(String id, String address) {
     this.id = id;
     this.address = address;
   }
 
+  /** @return The id of the peer. */
   public String getId() {
     return id;
   }
 
+  /** @return The address of the peer. */
   public String getAddress() {
     return address;
   }
",,8558
3478,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-common/src/main/java/org/apache/raft/util/ProtoUtils.java,4619aca4dc6d1c20a4f0bdde45f8ee012c72e0ce,1471408662,52,,,,,,,,"    return new RaftPeer(p.getId(), p.hasAddress() ? p.getAddress() : null);",,,8558
3479,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-hadoop/src/test/java/org/apache/raft/hadoopRpc/TestRaftNotLeaderException.java,efb9e639a7d0e96b62146549b2cd77e0ab7bd396,1471485408,94,000211660c9762926b3244edd89c3b20c8828e2c,1473976898,97,,,,,"    reply= null;",,,8558
3480,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-hadoop/src/test/java/org/apache/raft/hadoopRpc/TestRaftNotLeaderException.java,efb9e639a7d0e96b62146549b2cd77e0ab7bd396,1471485408,141,000211660c9762926b3244edd89c3b20c8828e2c,1473976898,143,,,,,"    reply = null;",,,8558
3481,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/RaftServer.java,3c934d8c2d78f8cece74739d9b60894806cabd8a,1471553962,248,dd0b631a69927db0dfd7acd1a002380909203773,1483174247,286,,,,,"    leaderState = null;",,,8558
3482,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/RaftServer.java,3c934d8c2d78f8cece74739d9b60894806cabd8a,1471553962,257,98605d8f946cfa4b822e3ac46c69f748f0094c9e,1481374648,275,,,,,"    electionDaemon = null;",,,8558
3483,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/RaftServer.java,3c934d8c2d78f8cece74739d9b60894806cabd8a,1471553962,276,dd0b631a69927db0dfd7acd1a002380909203773,1483174247,305,,,,,"    heartbeatMonitor = null;",,,8558
3484,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-common/src/main/java/org/apache/raft/protocol/RaftPeer.java,d13ae2fc9285bdae55f91dc87e11fc65cab19599,1471902894,32,,,,4bd72b11ba8eb57360e307db1d7838c729f67e40,1483015870,-1,1483015870/1471902894,"    this.address = null;"," 
 import java.net.InetSocketAddress;
 
+/**
+ * A {@link RaftPeer} is a server in a Raft cluster.
+ *
+ * The objects of this class are immutable.
+ */
 public class RaftPeer {
-  public static final RaftPeer[] EMPTY_PEERS = new RaftPeer[0];
+  public static final RaftPeer[] EMPTY_PEERS = {};
 
+  /** The id of the peer. */
   private final String id;
+  /** The address of the peer. */
   private final String address;
 
+  /** Construct a peer with the given id and a null address. */
   public RaftPeer(String id) {
-    this.id = id;
-    this.address = null;
+    this(id, (String)null);
   }
 
+  /** Construct a peer with the given id and address. */
   public RaftPeer(String id, InetSocketAddress address) {
     this(id, address == null ? null :
         HostAndPort.fromParts(address.getAddress().getHostAddress(),
             address.getPort()).toString());
   }
 
+  /** Construct a peer with the given id and address. */
   public RaftPeer(String id, String address) {
     this.id = id;
     this.address = address;
   }
 
+  /** @return The id of the peer. */
   public String getId() {
     return id;
   }
 
+  /** @return The address of the peer. */
   public String getAddress() {
     return address;
   }
",,8558
3485,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/PendingRequests.java,d13ae2fc9285bdae55f91dc87e11fc65cab19599,1471902894,61,247ddf984b3e8789bc0c12a1c3fde5fb230aa352,1482931142,79,,,,,"      pendingSetConf = null;",,,8558
3486,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/PendingRequests.java,d13ae2fc9285bdae55f91dc87e11fc65cab19599,1471902894,68,000211660c9762926b3244edd89c3b20c8828e2c,1473976898,65,,,,,"    pendingSetConf = null;",,,8558
3487,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-common/src/main/java/org/apache/raft/util/ProtoUtils.java,ad725b028561b741c15869ef1cec96afd0ca6dcf,1472241671,49,58b06967cfc9e8b8ec66c05769dc40bc9309d890,1475108296,48,965667030e4ea60ae83c65168c9bc33e450e8525,1475273744,-1,1475273744/1472241671,"    return new RaftPeer(p.getId(), p.hasAddress() ? p.getAddress() : null);","   }
 
   public static RaftPeer toRaftPeer(RaftPeerProto p) {
-    return new RaftPeer(p.getId(), p.hasAddress() ? p.getAddress() : null);
+    return new RaftPeer(p.getId(), p.getAddress());
   }
 
   public static RaftPeer[] toRaftPeerArray(List<RaftPeerProto> protos) {
",,8558
3488,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/PendingRequests.java,5cb9183863226596832a2f82c89fc7a3b9edba49,1474423526,84,247ddf984b3e8789bc0c12a1c3fde5fb230aa352,1482931142,86,,,,,"    pendingSetConf = null;",,,8558
3489,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-hadoop/src/test/java/org/apache/raft/hadooprpc/TestRaftNotLeaderException.java,15884e8270cdcbe1d07f95f2accc27cbacf0cfd8,1475526938,97,faf9bc7c0ab273c181af79ffbb7b55d648d73f64,1476992266,99,,,,,"    reply= null;",,,8558
3490,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-hadoop/src/test/java/org/apache/raft/hadooprpc/TestRaftNotLeaderException.java,15884e8270cdcbe1d07f95f2accc27cbacf0cfd8,1475526938,143,faf9bc7c0ab273c181af79ffbb7b55d648d73f64,1476992266,146,,,,,"    reply = null;",,,8558
3491,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/test/java/org/apache/raft/RaftNotLeaderExceptionBaseTest.java,3ee16b42d4ceccbc5926465bb6d52eaccdf853b8,1477604957,92,22f3ee0b46a5485deafa84939eb5290938b5552b,1483359028,89,,,,,"    reply= null;",,,8558
3492,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/test/java/org/apache/raft/RaftNotLeaderExceptionBaseTest.java,3ee16b42d4ceccbc5926465bb6d52eaccdf853b8,1477604957,136,,,,b91ef192f96150782e5c0af024202a568d91f9de,1478031144,-1,1478031144/1477604957,"    reply = null;","     // trigger setConfiguration
     LOG.info(""Start changing the configuration: {}"",
         Arrays.asList(change.allPeersInNewConf));
-    RaftClientReply reply = cluster.createClient(""client2"", newLeader)
-        .setConfiguration(change.allPeersInNewConf);
-    Assert.assertTrue(reply.isSuccess());
+    try(final RaftClient c2 = cluster.createClient(""client2"", newLeader)) {
+      RaftClientReply reply = c2.setConfiguration(change.allPeersInNewConf);
+      Assert.assertTrue(reply.isSuccess());
+    }
     LOG.info(cluster.printServers());
 
     RaftClientRequestSender rpc = client.getRequestSender();
-    reply = null;
+    RaftClientReply reply = null;
     // it is possible that the remote peer's rpc server is not ready. need retry
     for (int i = 0; reply == null && i < 10; i++) {
       try {
",,8558
3493,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-grpc/src/main/java/org/apache/raft/grpc/server/GRpcLogAppender.java,b75cbb99bb5ffe8253f94a69e420e2bb6c9fdcc8,1478123929,398,22f3ee0b46a5485deafa84939eb5290938b5552b,1483359028,396,,,,,"      snapshotRequestObserver = null;",,,8558
3494,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-grpc/src/main/java/org/apache/raft/grpc/client/AppendStreamer.java,d3a9c00b02f090f0c1c76a92a947253de520e11b,1478738325,239,,,,c94ef67096b84e3eb64c3cbe7d3bf9f07b7e617d,1478830803,-1,1478830803/1478738325,"      requestObserver = null;","     return this.getClass().getSimpleName() + ""-"" + clientId;
   }
 
-  private class RaftPeerAndProxy {
-    private final RaftPeer peer;
-    private RaftClientProtocolClient proxy;
-    private ResponseHandler responseHandler;
-    private StreamObserver<RaftClientRequestProto> requestObserver;
-
-
-    RaftPeerAndProxy(RaftPeer peer) {
-      this.peer = peer;
-    }
-
-    private RaftClientProtocolClient getOrCreateProxy() {
-      if (proxy == null) {
-        LOG.debug(""Creating proxy for {}"", peer);
-        proxy = new RaftClientProtocolClient(peer);
-      }
-      return proxy;
-    }
-
-    synchronized void closeObserver(boolean onError) {
-      if (!onError && requestObserver != null) {
-        try {
-          responseHandler.active = false;
-          requestObserver.onCompleted();
-        } catch (Exception ignored) {
-        }
-      }
-      requestObserver = null;
-    }
-
-    synchronized StreamObserver<RaftClientRequestProto> getRequestObserver() {
-      if (requestObserver == null) {
-        responseHandler = new ResponseHandler(peer.getId());
-        requestObserver = getOrCreateProxy().append(responseHandler);
-      }
-      return requestObserver;
-    }
-
-    synchronized void close() {
-      closeObserver(false);
-      if (proxy != null) {
-        proxy.close();
-      }
-      proxy = null;
-    }
-
-    @Override
-    public String toString() {
-      return peer.toString();
-    }
-  }
-
   private class Sender extends Daemon {
     @Override
     public void run() {
",,8558
3495,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-grpc/src/main/java/org/apache/raft/grpc/client/AppendStreamer.java,d3a9c00b02f090f0c1c76a92a947253de520e11b,1478738325,255,,,,c94ef67096b84e3eb64c3cbe7d3bf9f07b7e617d,1478830803,-1,1478830803/1478738325,"      proxy = null;","     return this.getClass().getSimpleName() + ""-"" + clientId;
   }
 
-  private class RaftPeerAndProxy {
-    private final RaftPeer peer;
-    private RaftClientProtocolClient proxy;
-    private ResponseHandler responseHandler;
-    private StreamObserver<RaftClientRequestProto> requestObserver;
-
-
-    RaftPeerAndProxy(RaftPeer peer) {
-      this.peer = peer;
-    }
-
-    private RaftClientProtocolClient getOrCreateProxy() {
-      if (proxy == null) {
-        LOG.debug(""Creating proxy for {}"", peer);
-        proxy = new RaftClientProtocolClient(peer);
-      }
-      return proxy;
-    }
-
-    synchronized void closeObserver(boolean onError) {
-      if (!onError && requestObserver != null) {
-        try {
-          responseHandler.active = false;
-          requestObserver.onCompleted();
-        } catch (Exception ignored) {
-        }
-      }
-      requestObserver = null;
-    }
-
-    synchronized StreamObserver<RaftClientRequestProto> getRequestObserver() {
-      if (requestObserver == null) {
-        responseHandler = new ResponseHandler(peer.getId());
-        requestObserver = getOrCreateProxy().append(responseHandler);
-      }
-      return requestObserver;
-    }
-
-    synchronized void close() {
-      closeObserver(false);
-      if (proxy != null) {
-        proxy.close();
-      }
-      proxy = null;
-    }
-
-    @Override
-    public String toString() {
-      return peer.toString();
-    }
-  }
-
   private class Sender extends Daemon {
     @Override
     public void run() {
",,8558
3496,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-grpc/src/main/java/org/apache/raft/grpc/client/RaftClientProtocolProxy.java,c94ef67096b84e3eb64c3cbe7d3bf9f07b7e617d,1478830803,54,2a20deb310eee42a01bd13bd3b9d2ee3830878f4,1479509342,54,,,,,"      currentSession = null;",,,8558
3497,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-common/src/main/java/org/apache/raft/util/test/ExitUtils.java,2383689f49d0321835462e4a5e9684f0cc3f0df2,1482312414,53,,,,,,,,"    firstExitException = null;",,,8558
3498,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-common/src/main/java/org/apache/raft/util/ExitUtils.java,8ebc647883ce2c3e596a334e28ce3dd1fbbeaa79,1482356735,53,f5b238dd2e4f5cf1fd1e652f498b7516052a4854,1482394084,50,,,,,"    firstExitException = null;",,,8558
3499,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/LeaderState.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,228,eaadf8e66a98e2bc5e254af96a56f6d8f6d9800f,1483443768,228,,,,,"    this.stagingState = null;",,,8558
3500,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/LeaderState.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,574,eaadf8e66a98e2bc5e254af96a56f6d8f6d9800f,1483443768,575,,,,,"      LeaderState.this.stagingState = null;",,,8558
3501,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/PendingRequests.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,74,22f3ee0b46a5485deafa84939eb5290938b5552b,1483359028,74,,,,,"      pendingSetConf = null;",,,8558
3502,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/PendingRequests.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,81,22f3ee0b46a5485deafa84939eb5290938b5552b,1483359028,81,,,,,"    pendingSetConf = null;",,,8558
3503,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/RaftServer.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,275,,,,,,,,"    leaderState = null;",,,8558
3504,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/RaftServer.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,285,,,,,,,,"    electionDaemon = null;",,,8558
3505,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/RaftServer.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,304,,,,,,,,"    heartbeatMonitor = null;",,,8558
3506,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/ServerState.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,86,673a28278346fb641f7c1e81c20bc37168be33f0,1483372754,86,,,,,"    leaderId = null;",,,8558
3507,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/ServerState.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,176,673a28278346fb641f7c1e81c20bc37168be33f0,1483372754,176,,,,,"    leaderId = null;",,,8558
3508,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/ServerState.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,185,673a28278346fb641f7c1e81c20bc37168be33f0,1483372754,185,,,,,"    votedFor = null;",,,8558
3509,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/ServerState.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,186,673a28278346fb641f7c1e81c20bc37168be33f0,1483372754,186,,,,,"    leaderId = null;",,,8558
3510,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/ServerState.java,c36810ed8dbd0e202f98ba57bd5730e7edff6863,1483176193,194,673a28278346fb641f7c1e81c20bc37168be33f0,1483372754,194,,,,,"    leaderId = null;",,,8558
3511,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/RaftServerImpl.java,22f3ee0b46a5485deafa84939eb5290938b5552b,1483359028,275,bdd516434a39714632dc4e563ed055348ef84c4f,1483740923,282,,,,,"    leaderState = null;",,,8558
3512,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/RaftServerImpl.java,22f3ee0b46a5485deafa84939eb5290938b5552b,1483359028,285,bdd516434a39714632dc4e563ed055348ef84c4f,1483740923,292,,,,,"    electionDaemon = null;",,,8558
3513,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/raft-server/src/main/java/org/apache/raft/server/impl/RaftServerImpl.java,22f3ee0b46a5485deafa84939eb5290938b5552b,1483359028,304,bdd516434a39714632dc4e563ed055348ef84c4f,1483740923,311,,,,,"    heartbeatMonitor = null;",,,8558
3514,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/conf/RaftProperties.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,262,47f2aeafd9672f2d1b43bc868daecd3eee07c1ab,1574792750,285,,,,,"    properties = null;                            // trigger reload",,,8558
3515,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/util/ExitUtils.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,50,be4c414e05d39c34148782a8860df2695170dc19,1506569291,50,cb68b56c2cb02ff3953b146d1029156941f33d3a,1544752587,-1,1544752587/1484090649,"    firstExitException = null;"," package org.apache.ratis.util;
 
 import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import java.util.Objects;
+import java.util.concurrent.atomic.AtomicReference;
 
 /** Facilitates hooking process termination for tests and debugging. */
-public class ExitUtils {
-  public static class ExitException extends RuntimeException {
+public interface ExitUtils {
+  class ExitException extends RuntimeException {
     private static final long serialVersionUID = 1L;
 
-    public final int status;
+    private final int status;
 
-    public ExitException(int status, String message, Throwable throwable) {
+    ExitException(int status, String message, Throwable throwable) {
       super(message, throwable);
       this.status = status;
     }
+
+    public int getStatus() {
+      return status;
+    }
   }
 
-  private static volatile boolean systemExitDisabled = false;
-  private static volatile ExitException firstExitException;
+  class States {
+    private static final Logger LOG = LoggerFactory.getLogger(ExitUtils.class);
+    private static final States INSTANCE = new States();
+
+    private volatile boolean systemExitDisabled = false;
+    private volatile boolean terminateOnUncaughtException = true;
+    private final AtomicReference<ExitException> firstExitException = new AtomicReference<>();
+
+    private States() {
+      Thread.setDefaultUncaughtExceptionHandler((thread, exception) -> {
+        if (terminateOnUncaughtException) {
+          terminate(-1, thread + "" has thrown an uncaught exception"", exception, false, LOG);
+        }
+      });
+    }
+
+    private void setTerminateOnUncaughtException(boolean terminateOnUncaughtException) {
+      this.terminateOnUncaughtException = terminateOnUncaughtException;
+    }
+
+    private void disableSystemExit() {
+      systemExitDisabled = true;
+    }
+
+    private boolean isSystemExitDisabled() {
+      return systemExitDisabled;
+    }
+
+    private ExitException getFirstExitException() {
+      return firstExitException.get();
+    }
+
+    private boolean setFirstExitException(ExitException e) {
+      Objects.requireNonNull(e, ""e == null"");
+      return firstExitException.compareAndSet(null, e);
+    }
+
+    private boolean clearFirstExitException() {
+      return firstExitException.getAndSet(null) != null;
+    }
+  }
 
   /**
    * @return the first {@link ExitException} thrown, or null if none thrown yet.
    */
-  public static ExitException getFirstExitException() {
-    return firstExitException;
+  static ExitException getFirstExitException() {
+    return States.INSTANCE.getFirstExitException();
   }
 
   /**
-   * Reset the tracking of process termination.
-   * This is useful when some tests expect an exit but the others do not.
+   * Clear all previous terminate(..) calls, if there are any.
+   *
+   * @return true if the state is changed.
    */
-  public static void resetFirstExitException() {
-    firstExitException = null;
+  static boolean clear() {
+    return States.INSTANCE.clearFirstExitException();
   }
 
-  /** @return true if {@link #terminate(int, String, Throwable, Logger)} has been invoked. */
-  public static boolean isTerminated() {
-    // Either this member is set or System.exit is actually invoked.
-    return firstExitException != null;
+  /** @return true if one of the terminate(..) methods has been invoked. */
+  static boolean isTerminated() {
+    return getFirstExitException() != null;
   }
 
-  public static void assertNotTerminated() {
+  /** @throws AssertionError if {@link #isTerminated()} == true. */
+  static void assertNotTerminated() {
     if (ExitUtils.isTerminated()) {
       throw new AssertionError(""Unexpected exited."", getFirstExitException());
     }
   }
 
-  /** Disable the use of {@link System#exit(int)} for testing. */
-  public static void disableSystemExit() {
-    systemExitDisabled = true;
+  /** Disable the use of {@link System#exit(int)}. */
+  static void disableSystemExit() {
+    States.INSTANCE.disableSystemExit();
   }
 
   /**
-   * Terminate the current process. Note that terminate is the *only* method
-   * that should be used to terminate the daemon processes.
+   *
    *
    * @param status Exit status
    * @param message message used to create the {@code ExitException}
-   * @throws ExitException if System.exit is disabled for test purposes
+   * @param throwExitException decide if this method should throw {@link ExitException}
+   * @throws ExitException if throwExitException == true and System.exit is disabled.
    */
-  public static void terminate(
-      int status, String message, Throwable throwable, Logger log)
+  static void terminate(int status, String message, Throwable throwable, boolean throwExitException, Logger log)
       throws ExitException {
     if (log != null) {
       final String s = ""Terminating with exit status "" + status + "": "" + message;
",,8558
3516,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/client/RaftClientProtocolProxy.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,54,6c97d0603ae8c12776b87b419ac5e66adafcccc5,1523583914,57,,,,,"      currentSession = null;",,,8558
3517,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/server/GRpcLogAppender.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,397,5e3269bb2c0d95b011097ad71124a2d2796739fc,1524678422,436,,,,,"      snapshotRequestObserver = null;",,,8558
3518,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/LeaderState.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,247,812d7dbeb5361911e269fa68995a2a7179cdf6be,1502429450,222,,,,,"    this.stagingState = null;",,,8558
3519,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/LeaderState.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,594,30bafb7a7fc91febfc3bf5b08a97f06d7f4ef810,1566968430,761,,,,,"      LeaderState.this.stagingState = null;",,,8558
3520,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/PendingRequests.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,75,cbfa28a0232d969521f5d905d3d22c3b0a8ab402,1521216727,118,,,,,"      pendingSetConf = null;",,,8558
3521,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/PendingRequests.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,82,cbfa28a0232d969521f5d905d3d22c3b0a8ab402,1521216727,125,,,,,"    pendingSetConf = null;",,,8558
3522,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,301,a25143eedb84a3da5ffba5d475314eca41a7ae48,1489694988,273,,,,,"    leaderState = null;",,,8558
3523,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,311,a25143eedb84a3da5ffba5d475314eca41a7ae48,1489694988,283,,,,,"    electionDaemon = null;",,,8558
3524,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,330,c3845bc3f3044f513347d8fec220e4e289a0ea5b,1538861693,330,,,,,"    heartbeatMonitor = null;",,,8558
3525,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,91,67bb9fcd4495eb4fa79c128a0abda3578d9a2947,1531637448,95,,,,,"    leaderId = null;",,,8558
3526,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,181,c0c3a3748c83517348c7d65016c8224029d30f90,1502992396,185,ee262d7e3daefe323900146beb460b20b1a72869,1503514302,-1,1503514302/1484090649,"    leaderId = null;","     this.log.writeMetadata(currentTerm, votedFor);
   }
 
-  void resetLeaderAndVotedFor() {
-    votedFor = null;
-    leaderId = null;
-  }
-
   /**
    * Vote for a candidate and update the local state.
    */
",,8558
3527,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,190,c0c3a3748c83517348c7d65016c8224029d30f90,1502992396,194,,,,,"    votedFor = null;",,,8558
3528,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,191,c0c3a3748c83517348c7d65016c8224029d30f90,1502992396,195,,,,,"    leaderId = null;",,,8558
3529,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,199,ee262d7e3daefe323900146beb460b20b1a72869,1503514302,204,8f0a3ed50aa7a347558551ab5ce3a8bc2e8e92a0,1512435356,-1,1512435356/1484090649,"    leaderId = null;","    */
   void grantVote(RaftPeerId candidateId) {
     votedFor = candidateId;
-    leaderId = null;
+    setLeader(null);
   }
 
-  void setLeader(RaftPeerId leaderId) {
-    this.leaderId = leaderId;
+  void setLeader(RaftPeerId newLeaderId) {
+    if (!Objects.equals(leaderId, newLeaderId)) {
+      LOG.info(""{}: change Leader from {} to {}"", selfId, leaderId, newLeaderId);
+      leaderId = newLeaderId;
+    }
   }
 
   void becomeLeader() {
-    leaderId = selfId;
+    setLeader(selfId);
   }
 
   public RaftLog getLog() {
",,8558
3530,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/LogOutputStream.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,140,087652d47704dc8b9edf7d28f8e6268af1364b1b,1544124733,152,,,,,"      fc = null;",,,8558
3531,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/LogOutputStream.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,141,087652d47704dc8b9edf7d28f8e6268af1364b1b,1544124733,153,,,,,"      out = null;",,,8558
3532,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/MetaFile.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,98,14927c7527afe13efb949065bbac0042ad82932f,1588058251,97,,,,,"      fos = null;",,,8558
3533,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,162,43bc6ebf4f415ecf23317ef4c38fa6c58afde29a,1491809537,160,,,,,"        (closedSegments.isEmpty() ? null :",,,8558
3534,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,189,43bc6ebf4f415ecf23317ef4c38fa6c58afde29a,1491809537,187,,,,,"      openSegment = null;",,,8558
3535,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,198,e6419972c8c2119f7ce48ad80cd09918d51e5725,1494632466,276,,,,,"    openSegment = null;",,,8558
3536,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,221,e6419972c8c2119f7ce48ad80cd09918d51e5725,1494632466,299,,,,,"          openSegment = null;",,,8558
3537,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,325,13fdb9ee6cb89a2bfa3533ab7955b33951de491b,1493229316,348,,,,,"    openSegment = null;",,,8558
3538,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogWorker.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,261,2373a4a08e5805af3291acae64c2efccd9f528d4,1492451009,256,,,,,"      out = null;",,,8558
3539,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogWorker.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,319,9dcb75a94eacae49b4fed7f7105b97deee4aba51,1555998951,491,,,,,"      out = null;",,,8558
3540,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftStorageDirectory.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,94,14927c7527afe13efb949065bbac0042ad82932f,1588058251,106,,,,,"    this.lock = null;",,,8558
3541,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftStorageDirectory.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,354,14927c7527afe13efb949065bbac0042ad82932f,1588058251,375,,,,,"    lock = null;",,,8558
3542,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/test/java/org/apache/ratis/RaftNotLeaderExceptionBaseTest.java,7e71a2e0e8ffb01a2168fabdf1d2f66f6ba7c4b9,1484090649,89,fd230c448b88becb79a216cd0cc0571a3ab9b0c4,1504319301,95,,,,,"    reply= null;",,,8558
3543,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,f970468b97582831c67036c0eb08e72c00bedf92,1490046385,275,2d99e61728402ccf848f4c47a38ac15d6275344d,1517016059,302,,,,,"    leaderState = null;",,,8558
3544,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,f970468b97582831c67036c0eb08e72c00bedf92,1490046385,285,c3845bc3f3044f513347d8fec220e4e289a0ea5b,1538861693,341,9b84d79cf9b305aff99b65c782ad340671a58c87,1538981310,-1,1538981310/1490046385,"    electionDaemon = null;","     }
   }
 
-  private synchronized void shutdownLeaderState(boolean allowNull) {
-    if (leaderState == null) {
-      if (!allowNull) {
-        throw new NullPointerException(""leaderState == null"");
-      }
-    } else {
-      leaderState.stop();
-      leaderState = null;
-    }
-    // TODO: make sure that StateMachineUpdater has applied all transactions that have context
-  }
-
-  private void shutdownElectionDaemon() {
-    final LeaderElection election = electionDaemon;
-    if (election != null) {
-      election.stopRunning();
-      // no need to interrupt the election thread
-    }
-    electionDaemon = null;
-  }
-
   synchronized void changeToLeader() {
     Preconditions.assertTrue(isCandidate());
-    shutdownElectionDaemon();
+    role.shutdownLeaderElection();
     setRole(RaftPeerRole.LEADER, ""changeToLeader"");
     state.becomeLeader();
 
     // start sending AppendEntries RPC to followers
-    leaderState = new LeaderState(this, getProxy().getProperties());
-    final LogEntryProto e = leaderState.start();
+    final LogEntryProto e = role.startLeaderState(this, getProxy().getProperties());
     getState().setRaftConf(e.getIndex(), ServerProtoUtils.toRaftConfiguration(e));
   }
 
-  private void startHeartbeatMonitor() {
-    Preconditions.assertTrue(heartbeatMonitor == null, ""heartbeatMonitor != null"");
-    LOG.debug(""{} starts heartbeatMonitor"", getId());
-    heartbeatMonitor = new FollowerState(this);
-    heartbeatMonitor.start();
-  }
-
-  private void shutdownHeartbeatMonitor() {
-    final FollowerState hm = heartbeatMonitor;
-    if (hm != null) {
-      hm.stopRunning();
-      hm.interrupt();
-    }
-    heartbeatMonitor = null;
-  }
-
   Collection<CommitInfoProto> getCommitInfos() {
     final List<CommitInfoProto> infos = new ArrayList<>();
     // add the commit info of this server
",,8558
3545,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,f970468b97582831c67036c0eb08e72c00bedf92,1490046385,304,c3845bc3f3044f513347d8fec220e4e289a0ea5b,1538861693,369,9b84d79cf9b305aff99b65c782ad340671a58c87,1538981310,-1,1538981310/1490046385,"    heartbeatMonitor = null;","     }
   }
 
-  private synchronized void shutdownLeaderState(boolean allowNull) {
-    if (leaderState == null) {
-      if (!allowNull) {
-        throw new NullPointerException(""leaderState == null"");
-      }
-    } else {
-      leaderState.stop();
-      leaderState = null;
-    }
-    // TODO: make sure that StateMachineUpdater has applied all transactions that have context
-  }
-
-  private void shutdownElectionDaemon() {
-    final LeaderElection election = electionDaemon;
-    if (election != null) {
-      election.stopRunning();
-      // no need to interrupt the election thread
-    }
-    electionDaemon = null;
-  }
-
   synchronized void changeToLeader() {
     Preconditions.assertTrue(isCandidate());
-    shutdownElectionDaemon();
+    role.shutdownLeaderElection();
     setRole(RaftPeerRole.LEADER, ""changeToLeader"");
     state.becomeLeader();
 
     // start sending AppendEntries RPC to followers
-    leaderState = new LeaderState(this, getProxy().getProperties());
-    final LogEntryProto e = leaderState.start();
+    final LogEntryProto e = role.startLeaderState(this, getProxy().getProperties());
     getState().setRaftConf(e.getIndex(), ServerProtoUtils.toRaftConfiguration(e));
   }
 
-  private void startHeartbeatMonitor() {
-    Preconditions.assertTrue(heartbeatMonitor == null, ""heartbeatMonitor != null"");
-    LOG.debug(""{} starts heartbeatMonitor"", getId());
-    heartbeatMonitor = new FollowerState(this);
-    heartbeatMonitor.start();
-  }
-
-  private void shutdownHeartbeatMonitor() {
-    final FollowerState hm = heartbeatMonitor;
-    if (hm != null) {
-      hm.stopRunning();
-      hm.interrupt();
-    }
-    heartbeatMonitor = null;
-  }
-
   Collection<CommitInfoProto> getCommitInfos() {
     final List<CommitInfoProto> infos = new ArrayList<>();
     // add the commit info of this server
",,8558
3546,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,2373a4a08e5805af3291acae64c2efccd9f528d4,1492451009,121,e6419972c8c2119f7ce48ad80cd09918d51e5725,1494632466,166,,,,,"      openSegment = null;",,,8558
3547,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,2373a4a08e5805af3291acae64c2efccd9f528d4,1492451009,220,a1edeabea016ff7c55d4459fdb96c70a0ff132c7,1543615364,417,,,,,"        (closedSegments.isEmpty() ? null :",,,8558
3548,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,2fbbe0aa9df31e5e982b235071e0b438f0241453,1494439040,392,e6419972c8c2119f7ce48ad80cd09918d51e5725,1494632466,392,,,,,"      openSegment = null;",,,8558
3549,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogWorker.java,e6419972c8c2119f7ce48ad80cd09918d51e5725,1494632466,273,9dcb75a94eacae49b4fed7f7105b97deee4aba51,1555998951,422,,,,,"      out = null;",,,8558
3550,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/RaftClientImpl.java,a5b84af2de1e3311e96ebdf81f2a1155976cace4,1498188742,60,8f0a3ed50aa7a347558551ab5ce3a8bc2e8e92a0,1512435356,66,,,,,"        : !peers.isEmpty()? peers.iterator().next().getId(): null;",,,8558
3551,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/LeaderState.java,3e0ad68a0897c622b00e85af0b7c06ed1a80fc12,1502576934,251,8acf988f72f604a59ca83ef80a7e7c0f4be6077c,1594294583,397,,,,,"    this.stagingState = null;",,,8558
3552,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,ee262d7e3daefe323900146beb460b20b1a72869,1503514302,171,3596a589707fa8f7947af50ada582b12ec15b650,1589314578,206,,,,,"      votedFor = null;",,,8558
3553,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,ee262d7e3daefe323900146beb460b20b1a72869,1503514302,172,,,,8f0a3ed50aa7a347558551ab5ce3a8bc2e8e92a0,1512435356,-1,1512435356/1503514302,"      leaderId = null;","     if (newTerm > currentTerm) {
       currentTerm = newTerm;
       votedFor = null;
-      leaderId = null;
+      setLeader(null);
       return true;
     }
     return false;
",,8558
3554,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,ee262d7e3daefe323900146beb460b20b1a72869,1503514302,191,,,,8f0a3ed50aa7a347558551ab5ce3a8bc2e8e92a0,1512435356,-1,1512435356/1503514302,"    leaderId = null;","    */
   long initElection() {
     votedFor = selfId;
-    leaderId = null;
+    setLeader(null);
     return ++currentTerm;
   }
 
",,8558
3555,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/test/java/org/apache/ratis/server/impl/RaftReconfigurationBaseTest.java,e46aee2c87e85fe7317f2e807cdf97da0be31ddc,1503954204,583,965bcec41ccc36056f029becb743d8f24b420d76,1591862204,556,,,,,"      log2 = null;",,,8558
3556,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/test/java/org/apache/ratis/RaftExceptionBaseTest.java,9ce1783d30726b940193e1926659fefdbe2a2cdb,1504562082,96,bef9a72e32ee93adf3d532c2397e01e098afff59,1544121518,101,cb68b56c2cb02ff3953b146d1029156941f33d3a,1544752587,-1,1544752587/1504562082,"    reply= null;","    */
   @Test
   public void testHandleNotLeaderAndIOException() throws Exception {
-    testHandleNotLeaderException(true);
+    runWithNewCluster(NUM_PEERS, cluster -> runTestHandleNotLeaderException(true, cluster));
   }
 
-  private void testHandleNotLeaderException(boolean killNewLeader)
-      throws Exception {
-    RaftTestUtil.waitForLeader(cluster);
-    final RaftPeerId leaderId = cluster.getLeader().getId();
-    final RaftClient client = cluster.createClient(leaderId);
+  void runTestHandleNotLeaderException(boolean killNewLeader, CLUSTER cluster) throws Exception {
+    final RaftPeerId oldLeader = RaftTestUtil.waitForLeader(cluster).getId();
+    try(final RaftClient client = cluster.createClient(oldLeader)) {
+      sendMessage(""m1"", client);
 
-    RaftClientReply reply = client.send(new SimpleMessage(""m1""));
-    Assert.assertTrue(reply.isSuccess());
+      // enforce leader change
+      final RaftPeerId newLeader = RaftTestUtil.changeLeader(cluster, oldLeader);
 
-    // enforce leader change
-    RaftPeerId newLeader = RaftTestUtil.changeLeader(cluster, leaderId);
-
-    if (killNewLeader) {
-      // kill the new leader
-      cluster.killServer(newLeader);
-    }
-
-    RaftClientRpc rpc = client.getClientRpc();
-    reply= null;
-    for (int i = 0; reply == null && i < 10; i++) {
-      try {
-        reply = rpc.sendRequest(cluster.newRaftClientRequest(
-            ClientId.randomId(), leaderId, new SimpleMessage(""m2"")));
-      } catch (IOException ignored) {
-        Thread.sleep(1000);
+      if (killNewLeader) {
+        // kill the new leader
+        cluster.killServer(newLeader);
       }
+
+      final RaftClientRpc rpc = client.getClientRpc();
+      JavaUtils.attempt(() -> assertNotLeaderException(newLeader, ""m2"", oldLeader, rpc, cluster),
+          10, ONE_SECOND, ""assertNotLeaderException"", LOG);
+
+      sendMessage(""m3"", client);
     }
+  }
+
+  RaftClientReply assertNotLeaderException(RaftPeerId expectedSuggestedLeader,
+      String messageId, RaftPeerId server, RaftClientRpc rpc, CLUSTER cluster) throws IOException {
+    final SimpleMessage message = new SimpleMessage(messageId);
+    final RaftClientReply reply = rpc.sendRequest(cluster.newRaftClientRequest(ClientId.randomId(), server, message));
     Assert.assertNotNull(reply);
     Assert.assertFalse(reply.isSuccess());
     final NotLeaderException nle = reply.getNotLeaderException();
     Objects.requireNonNull(nle);
-    Assert.assertEquals(newLeader, nle.getSuggestedLeader().getId());
+    Assert.assertEquals(expectedSuggestedLeader, nle.getSuggestedLeader().getId());
+    return reply;
+  }
 
-    reply = client.send(new SimpleMessage(""m3""));
+  static void sendMessage(String message, RaftClient client) throws IOException {
+    final RaftClientReply reply = client.send(new SimpleMessage(message));
     Assert.assertTrue(reply.isSuccess());
-    client.close();
   }
 
   @Test
   public void testNotLeaderExceptionWithReconf() throws Exception {
-    Assert.assertNotNull(RaftTestUtil.waitForLeader(cluster));
+    runWithNewCluster(NUM_PEERS, this::runTestNotLeaderExceptionWithReconf);
+  }
 
-    final RaftPeerId leaderId = cluster.getLeader().getId();
-    final RaftClient client = cluster.createClient(leaderId);
+  void runTestNotLeaderExceptionWithReconf(CLUSTER cluster) throws Exception {
+    final RaftPeerId oldLeader = RaftTestUtil.waitForLeader(cluster).getId();
+    try(final RaftClient client = cluster.createClient(oldLeader)) {
 
-    // enforce leader change
-    RaftPeerId newLeader = RaftTestUtil.changeLeader(cluster, leaderId);
+      // enforce leader change
+      final RaftPeerId newLeader = RaftTestUtil.changeLeader(cluster, oldLeader);
 
-    // also add two new peers
-    // add two more peers
-    MiniRaftCluster.PeerChanges change = cluster.addNewPeers(
-        new String[]{""ss1"", ""ss2""}, true);
-    // trigger setConfiguration
-    LOG.info(""Start changing the configuration: {}"",
-        Arrays.asList(change.allPeersInNewConf));
-    try(final RaftClient c2 = cluster.createClient(newLeader)) {
-      RaftClientReply reply = c2.setConfiguration(change.allPeersInNewConf);
-      Assert.assertTrue(reply.isSuccess());
-    }
-    LOG.info(cluster.printServers());
-
-    RaftClientRpc rpc = client.getClientRpc();
-    RaftClientReply reply = null;
-    // it is possible that the remote peer's rpc server is not ready. need retry
-    for (int i = 0; reply == null && i < 10; i++) {
-      try {
-        reply = rpc.sendRequest(cluster.newRaftClientRequest(
-            ClientId.randomId(), leaderId, new SimpleMessage(""m1"")));
-      } catch (IOException ignored) {
-        Thread.sleep(1000);
+      // add two more peers
+      MiniRaftCluster.PeerChanges change = cluster.addNewPeers(new String[]{""ss1"", ""ss2""}, true);
+      // trigger setConfiguration
+      LOG.info(""Start changing the configuration: {}"", Arrays.asList(change.allPeersInNewConf));
+      try (final RaftClient c2 = cluster.createClient(newLeader)) {
+        RaftClientReply reply = c2.setConfiguration(change.allPeersInNewConf);
+        Assert.assertTrue(reply.isSuccess());
       }
-    }
-    Assert.assertNotNull(reply);
-    Assert.assertFalse(reply.isSuccess());
-    final NotLeaderException nle = reply.getNotLeaderException();
-    Objects.requireNonNull(nle);
-    Assert.assertEquals(newLeader, nle.getSuggestedLeader().getId());
-    Collection<RaftPeer> peers = cluster.getPeers();
-    RaftPeer[] peersFromReply = reply.getNotLeaderException().getPeers();
-    Assert.assertEquals(peers.size(), peersFromReply.length);
-    for (RaftPeer p : peersFromReply) {
-      Assert.assertTrue(peers.contains(p));
-    }
+      LOG.info(cluster.printServers());
 
-    reply = client.send(new SimpleMessage(""m2""));
-    Assert.assertTrue(reply.isSuccess());
-    client.close();
+      // it is possible that the remote peer's rpc server is not ready. need retry
+      final RaftClientRpc rpc = client.getClientRpc();
+      final RaftClientReply reply = JavaUtils.attempt(
+          () -> assertNotLeaderException(newLeader, ""m1"", oldLeader, rpc, cluster),
+          10, ONE_SECOND, ""assertNotLeaderException"", LOG);
+
+      final Collection<RaftPeer> peers = cluster.getPeers();
+      final RaftPeer[] peersFromReply = reply.getNotLeaderException().getPeers();
+      Assert.assertEquals(peers.size(), peersFromReply.length);
+      for (RaftPeer p : peersFromReply) {
+        Assert.assertTrue(peers.contains(p));
+      }
+
+      sendMessage(""m2"", client);
+    }
   }
 
   @Test
   public void testGroupMismatchException() throws Exception {
+    runWithSameCluster(NUM_PEERS, this::runTestGroupMismatchException);
+  }
+
+  void runTestGroupMismatchException(CLUSTER cluster) throws Exception {
     final RaftGroup clusterGroup = cluster.getGroup();
     Assert.assertEquals(NUM_PEERS, clusterGroup.getPeers().size());
 
",,8558
3557,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,be4c414e05d39c34148782a8860df2695170dc19,1506569291,167,4d723a2c73b353f5228b067635383e03a697f563,1540791991,169,,,,,"    this.openSegment = null;",,,8558
3558,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/util/JmxRegister.java,2a781c220e0b9fe564cfa130b18fb952ece90a1e,1508875499,74,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,74,,,,,"    registeredName = null;",,,8558
3559,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogWorker.java,8a40ee4bccc23c37027829a9cc17838200650a0d,1510182160,257,9dcb75a94eacae49b4fed7f7105b97deee4aba51,1555998951,356,,,,,"        this.stateMachineFuture = null;",,,8558
3560,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/RaftClientImpl.java,7872f32962b5fdb5229be6bfc36eb73ec01ff79f,1514443444,105,39916f231499351c35dce64a1b5434ade1a5cf5f,1540221358,112,,,,,"        : !peers.isEmpty()? peers.iterator().next().getId(): null;",,,8558
3561,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,00f80b446faa61310f58d9986aa9bdcea56ac970,1515014589,629,a3a833290b15d0f74a27c03bf87a14bb380fb260,1532549858,701,,,,,"            isFollower()? heartbeatMonitor.getLastRpcTime().elapsedTimeMs() + ""ms"": null);",,,8558
3562,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/RaftClientImpl.java,8fd74ede411196a2b762b6ed741eccb30248e81c,1518963314,126,4b613c1e2e91e91de7a84dc378a2e67da7fb092b,1559105274,164,,,,,"    return getSlidingWindow(request.isStaleRead()? request.getServerId(): null);",,,8558
3563,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/protocol/RaftClientRequest.java,cbfa28a0232d969521f5d905d3d22c3b0a8ab402,1521216727,79,3b9d50deddcb2dc846b62ab63dd668f45c8b6536,1537542864,84,a82cd7b126f432cb2851e61155042c9f9ecfdb79,1539160184,-1,1539160184/1521216727,"      this.read = null;","           : new Type(staleRead);
     }
 
+    public static Type valueOf(WatchRequestTypeProto watch) {
+      return watchRequestType(watch.getIndex(), watch.getReplication());
+    }
+
     /**
      * The type case of the proto.
      * Only the corresponding proto (must be non-null) is used.
      * The other protos are ignored.
      */
     private final RaftClientRequestProto.TypeCase typeCase;
-    private final WriteRequestTypeProto write;
-    private final ReadRequestTypeProto read;
-    private final StaleReadRequestTypeProto staleRead;
+    private final Object proto;
+
+    private Type(RaftClientRequestProto.TypeCase typeCase, Object proto) {
+      this.typeCase = Objects.requireNonNull(typeCase, ""typeCase == null"");
+      this.proto = Objects.requireNonNull(proto, ""proto == null"");
+    }
 
     private Type(WriteRequestTypeProto write) {
-      this.typeCase = WRITE;
-      this.write = Objects.requireNonNull(write);
-      this.read = null;
-      this.staleRead = null;
+      this(WRITE, write);
     }
 
     private Type(ReadRequestTypeProto read) {
-      this.typeCase = READ;
-      this.write = null;
-      this.read = Objects.requireNonNull(read);
-      this.staleRead = null;
+      this(READ, read);
     }
 
     private Type(StaleReadRequestTypeProto staleRead) {
-      this.typeCase = STALEREAD;
-      this.write = null;
-      this.read = null;
-      this.staleRead = Objects.requireNonNull(staleRead);
+      this(STALEREAD, staleRead);
+    }
+
+    private Type(WatchRequestTypeProto watch) {
+      this(WATCH, watch);
+    }
+
+    public boolean is(RaftClientRequestProto.TypeCase typeCase) {
+      return getTypeCase().equals(typeCase);
     }
 
     public RaftClientRequestProto.TypeCase getTypeCase() {
",,8558
3564,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/protocol/RaftClientRequest.java,cbfa28a0232d969521f5d905d3d22c3b0a8ab402,1521216727,80,3b9d50deddcb2dc846b62ab63dd668f45c8b6536,1537542864,85,a82cd7b126f432cb2851e61155042c9f9ecfdb79,1539160184,-1,1539160184/1521216727,"      this.staleRead = null;","           : new Type(staleRead);
     }
 
+    public static Type valueOf(WatchRequestTypeProto watch) {
+      return watchRequestType(watch.getIndex(), watch.getReplication());
+    }
+
     /**
      * The type case of the proto.
      * Only the corresponding proto (must be non-null) is used.
      * The other protos are ignored.
      */
     private final RaftClientRequestProto.TypeCase typeCase;
-    private final WriteRequestTypeProto write;
-    private final ReadRequestTypeProto read;
-    private final StaleReadRequestTypeProto staleRead;
+    private final Object proto;
+
+    private Type(RaftClientRequestProto.TypeCase typeCase, Object proto) {
+      this.typeCase = Objects.requireNonNull(typeCase, ""typeCase == null"");
+      this.proto = Objects.requireNonNull(proto, ""proto == null"");
+    }
 
     private Type(WriteRequestTypeProto write) {
-      this.typeCase = WRITE;
-      this.write = Objects.requireNonNull(write);
-      this.read = null;
-      this.staleRead = null;
+      this(WRITE, write);
     }
 
     private Type(ReadRequestTypeProto read) {
-      this.typeCase = READ;
-      this.write = null;
-      this.read = Objects.requireNonNull(read);
-      this.staleRead = null;
+      this(READ, read);
     }
 
     private Type(StaleReadRequestTypeProto staleRead) {
-      this.typeCase = STALEREAD;
-      this.write = null;
-      this.read = null;
-      this.staleRead = Objects.requireNonNull(staleRead);
+      this(STALEREAD, staleRead);
+    }
+
+    private Type(WatchRequestTypeProto watch) {
+      this(WATCH, watch);
+    }
+
+    public boolean is(RaftClientRequestProto.TypeCase typeCase) {
+      return getTypeCase().equals(typeCase);
     }
 
     public RaftClientRequestProto.TypeCase getTypeCase() {
",,8558
3565,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/protocol/RaftClientRequest.java,cbfa28a0232d969521f5d905d3d22c3b0a8ab402,1521216727,85,3b9d50deddcb2dc846b62ab63dd668f45c8b6536,1537542864,90,a82cd7b126f432cb2851e61155042c9f9ecfdb79,1539160184,-1,1539160184/1521216727,"      this.write = null;","           : new Type(staleRead);
     }
 
+    public static Type valueOf(WatchRequestTypeProto watch) {
+      return watchRequestType(watch.getIndex(), watch.getReplication());
+    }
+
     /**
      * The type case of the proto.
      * Only the corresponding proto (must be non-null) is used.
      * The other protos are ignored.
      */
     private final RaftClientRequestProto.TypeCase typeCase;
-    private final WriteRequestTypeProto write;
-    private final ReadRequestTypeProto read;
-    private final StaleReadRequestTypeProto staleRead;
+    private final Object proto;
+
+    private Type(RaftClientRequestProto.TypeCase typeCase, Object proto) {
+      this.typeCase = Objects.requireNonNull(typeCase, ""typeCase == null"");
+      this.proto = Objects.requireNonNull(proto, ""proto == null"");
+    }
 
     private Type(WriteRequestTypeProto write) {
-      this.typeCase = WRITE;
-      this.write = Objects.requireNonNull(write);
-      this.read = null;
-      this.staleRead = null;
+      this(WRITE, write);
     }
 
     private Type(ReadRequestTypeProto read) {
-      this.typeCase = READ;
-      this.write = null;
-      this.read = Objects.requireNonNull(read);
-      this.staleRead = null;
+      this(READ, read);
     }
 
     private Type(StaleReadRequestTypeProto staleRead) {
-      this.typeCase = STALEREAD;
-      this.write = null;
-      this.read = null;
-      this.staleRead = Objects.requireNonNull(staleRead);
+      this(STALEREAD, staleRead);
+    }
+
+    private Type(WatchRequestTypeProto watch) {
+      this(WATCH, watch);
+    }
+
+    public boolean is(RaftClientRequestProto.TypeCase typeCase) {
+      return getTypeCase().equals(typeCase);
     }
 
     public RaftClientRequestProto.TypeCase getTypeCase() {
",,8558
3566,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/protocol/RaftClientRequest.java,cbfa28a0232d969521f5d905d3d22c3b0a8ab402,1521216727,87,3b9d50deddcb2dc846b62ab63dd668f45c8b6536,1537542864,92,a82cd7b126f432cb2851e61155042c9f9ecfdb79,1539160184,-1,1539160184/1521216727,"      this.staleRead = null;","           : new Type(staleRead);
     }
 
+    public static Type valueOf(WatchRequestTypeProto watch) {
+      return watchRequestType(watch.getIndex(), watch.getReplication());
+    }
+
     /**
      * The type case of the proto.
      * Only the corresponding proto (must be non-null) is used.
      * The other protos are ignored.
      */
     private final RaftClientRequestProto.TypeCase typeCase;
-    private final WriteRequestTypeProto write;
-    private final ReadRequestTypeProto read;
-    private final StaleReadRequestTypeProto staleRead;
+    private final Object proto;
+
+    private Type(RaftClientRequestProto.TypeCase typeCase, Object proto) {
+      this.typeCase = Objects.requireNonNull(typeCase, ""typeCase == null"");
+      this.proto = Objects.requireNonNull(proto, ""proto == null"");
+    }
 
     private Type(WriteRequestTypeProto write) {
-      this.typeCase = WRITE;
-      this.write = Objects.requireNonNull(write);
-      this.read = null;
-      this.staleRead = null;
+      this(WRITE, write);
     }
 
     private Type(ReadRequestTypeProto read) {
-      this.typeCase = READ;
-      this.write = null;
-      this.read = Objects.requireNonNull(read);
-      this.staleRead = null;
+      this(READ, read);
     }
 
     private Type(StaleReadRequestTypeProto staleRead) {
-      this.typeCase = STALEREAD;
-      this.write = null;
-      this.read = null;
-      this.staleRead = Objects.requireNonNull(staleRead);
+      this(STALEREAD, staleRead);
+    }
+
+    private Type(WatchRequestTypeProto watch) {
+      this(WATCH, watch);
+    }
+
+    public boolean is(RaftClientRequestProto.TypeCase typeCase) {
+      return getTypeCase().equals(typeCase);
     }
 
     public RaftClientRequestProto.TypeCase getTypeCase() {
",,8558
3567,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/protocol/RaftClientRequest.java,cbfa28a0232d969521f5d905d3d22c3b0a8ab402,1521216727,92,3b9d50deddcb2dc846b62ab63dd668f45c8b6536,1537542864,97,a82cd7b126f432cb2851e61155042c9f9ecfdb79,1539160184,-1,1539160184/1521216727,"      this.write = null;","           : new Type(staleRead);
     }
 
+    public static Type valueOf(WatchRequestTypeProto watch) {
+      return watchRequestType(watch.getIndex(), watch.getReplication());
+    }
+
     /**
      * The type case of the proto.
      * Only the corresponding proto (must be non-null) is used.
      * The other protos are ignored.
      */
     private final RaftClientRequestProto.TypeCase typeCase;
-    private final WriteRequestTypeProto write;
-    private final ReadRequestTypeProto read;
-    private final StaleReadRequestTypeProto staleRead;
+    private final Object proto;
+
+    private Type(RaftClientRequestProto.TypeCase typeCase, Object proto) {
+      this.typeCase = Objects.requireNonNull(typeCase, ""typeCase == null"");
+      this.proto = Objects.requireNonNull(proto, ""proto == null"");
+    }
 
     private Type(WriteRequestTypeProto write) {
-      this.typeCase = WRITE;
-      this.write = Objects.requireNonNull(write);
-      this.read = null;
-      this.staleRead = null;
+      this(WRITE, write);
     }
 
     private Type(ReadRequestTypeProto read) {
-      this.typeCase = READ;
-      this.write = null;
-      this.read = Objects.requireNonNull(read);
-      this.staleRead = null;
+      this(READ, read);
     }
 
     private Type(StaleReadRequestTypeProto staleRead) {
-      this.typeCase = STALEREAD;
-      this.write = null;
-      this.read = null;
-      this.staleRead = Objects.requireNonNull(staleRead);
+      this(STALEREAD, staleRead);
+    }
+
+    private Type(WatchRequestTypeProto watch) {
+      this(WATCH, watch);
+    }
+
+    public boolean is(RaftClientRequestProto.TypeCase typeCase) {
+      return getTypeCase().equals(typeCase);
     }
 
     public RaftClientRequestProto.TypeCase getTypeCase() {
",,8558
3568,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/protocol/RaftClientRequest.java,cbfa28a0232d969521f5d905d3d22c3b0a8ab402,1521216727,93,3b9d50deddcb2dc846b62ab63dd668f45c8b6536,1537542864,98,,,,,"      this.read = null;",,,8558
3569,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/rpc/RpcTimeout.java,00f64b4c17dfa2f5bd57d25aec5c5eb24c1bb535,1523109062,51,,,,,,,,"      timeoutScheduler = null;",,,8558
3570,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/PendingRequests.java,c692bf201d01a67e2c85efcd625e0bf80c96758b,1523358630,171,6ab75ae9da4b380056279b02f208dc9b1329325b,1591167631,218,,,,,"      pendingSetConf = null;",,,8558
3571,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/PendingRequests.java,c692bf201d01a67e2c85efcd625e0bf80c96758b,1523358630,178,6ab75ae9da4b380056279b02f208dc9b1329325b,1591167631,225,,,,,"    pendingSetConf = null;",,,8558
3572,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/util/TimeoutScheduler.java,e37ab2ee164fab84172513a72aa7175826b8dfd0,1523450058,112,,,,,,,,"      scheduler = null;",,,8558
3573,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/server/GRpcLogAppender.java,451e8551b7f8aea23a969d6bccb8a56b5937c7f7,1525110603,73,357ba82937a757e70e32555423cc8b9edd69271b,1537265807,79,,,,,"    appendLogRequestObserver = null;",,,8558
3574,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/util/TimeoutScheduler.java,fef6574c2887d99d1f04618ade6dec1c67eeb6bd,1525456545,125,087652d47704dc8b9edf7d28f8e6268af1364b1b,1544124733,126,,,,,"      scheduler = null;",,,8558
3575,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,67bb9fcd4495eb4fa79c128a0abda3578d9a2947,1531637448,311,,,,,,,,"      leaderState = null;",,,8558
3576,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,67bb9fcd4495eb4fa79c128a0abda3578d9a2947,1531637448,322,,,,,,,,"    electionDaemon = null;",,,8558
3577,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,67bb9fcd4495eb4fa79c128a0abda3578d9a2947,1531637448,349,,,,9b84d79cf9b305aff99b65c782ad340671a58c87,1538981310,-1,1538981310/1531637448,"    heartbeatMonitor = null;","     }
   }
 
-  private synchronized void shutdownLeaderState(boolean allowNull) {
-    if (leaderState == null) {
-      if (!allowNull) {
-        throw new NullPointerException(""leaderState == null"");
-      }
-    } else {
-      leaderState.stop();
-      leaderState = null;
-    }
-    // TODO: make sure that StateMachineUpdater has applied all transactions that have context
-  }
-
-  private void shutdownElectionDaemon() {
-    final LeaderElection election = electionDaemon;
-    if (election != null) {
-      election.stopRunning();
-      // no need to interrupt the election thread
-    }
-    electionDaemon = null;
-  }
-
   synchronized void changeToLeader() {
     Preconditions.assertTrue(isCandidate());
-    shutdownElectionDaemon();
+    role.shutdownLeaderElection();
     setRole(RaftPeerRole.LEADER, ""changeToLeader"");
     state.becomeLeader();
 
     // start sending AppendEntries RPC to followers
-    leaderState = new LeaderState(this, getProxy().getProperties());
-    final LogEntryProto e = leaderState.start();
+    final LogEntryProto e = role.startLeaderState(this, getProxy().getProperties());
     getState().setRaftConf(e.getIndex(), ServerProtoUtils.toRaftConfiguration(e));
   }
 
-  private void startHeartbeatMonitor() {
-    Preconditions.assertTrue(heartbeatMonitor == null, ""heartbeatMonitor != null"");
-    LOG.debug(""{} starts heartbeatMonitor"", getId());
-    heartbeatMonitor = new FollowerState(this);
-    heartbeatMonitor.start();
-  }
-
-  private void shutdownHeartbeatMonitor() {
-    final FollowerState hm = heartbeatMonitor;
-    if (hm != null) {
-      hm.stopRunning();
-      hm.interrupt();
-    }
-    heartbeatMonitor = null;
-  }
-
   Collection<CommitInfoProto> getCommitInfos() {
     final List<CommitInfoProto> infos = new ArrayList<>();
     // add the commit info of this server
",,8558
3578,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,67bb9fcd4495eb4fa79c128a0abda3578d9a2947,1531637448,699,,,,,,,,"            isFollower()? heartbeatMonitor.getLastRpcTime().elapsedTimeMs() + ""ms"": null);",,,8558
3579,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,67bb9fcd4495eb4fa79c128a0abda3578d9a2947,1531637448,172,,,,,,,,"      votedFor = null;",,,8558
3580,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,c2423179b8390a7ece679465e50b9abd47b4686d,1533089274,748,c3845bc3f3044f513347d8fec220e4e289a0ea5b,1538861693,775,,,,,"            isFollower()? heartbeatMonitor.getLastRpcTime().elapsedTimeMs() + ""ms"": null);",,,8558
3581,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,67db67efd4a32b1ec3054571c0a8d885f4db882b,1534198084,101,3596a589707fa8f7947af50ada582b12ec15b650,1589314578,115,,,,,"    leaderId = null;",,,8558
3582,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/ServerState.java,67db67efd4a32b1ec3054571c0a8d885f4db882b,1534198084,227,3596a589707fa8f7947af50ada582b12ec15b650,1589314578,251,,,,,"        lastNoLeaderTime = null;",,,8558
3583,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/client/GrpcClientProtocolProxy.java,ed8e60dad83ae733fe6c6c3752e82f1fee72c12e,1537419588,57,74b491cc76aa5e26029c3f6d77c1210809ecc110,1552979851,58,,,,,"      currentSession = null;",,,8558
3584,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/server/GrpcLogAppender.java,ed8e60dad83ae733fe6c6c3752e82f1fee72c12e,1537419588,78,1024b3382f7862d47527a85b77e4936249e4183c,1592807699,90,,,,,"    appendLogRequestObserver = null;",,,8558
3585,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/api/LogStateMachine.java,48d6a2a421a8b44f4080bad0ef4c004cbf7b456d,1539888230,275,85d8e025ffe332dc1329fbecd41d841fbc136db8,1540423099,258,,,,,"        list = null;",,,8558
3586,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/api/LogStateMachine.java,b901b3a5a95a0128569d3a660fd0af24a7ee83e4,1540582857,284,,,,,,,,"          list = null;",,,8558
3587,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/test/java/org/apache/ratis/RaftTestUtil.java,1d2ebee02d9e97763936ebd9b8b7cbfded514a1e,1540876277,294,44b6bd4376149a194bade2ddf30406f744cd48a4,1588051266,340,,,,,"          clientId, callId, bytes, hasStateMachineData? bytes: null);",,,8558
3588,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogStateMachine.java,a0f19ceb2a70644ce31ce6d92ef228bb10127b07,1542320783,284,447ccfb1f152a605c10e06f940df17bc5de6ea37,1548873430,375,386f70284277a87214115e31bc92752b443bd2e6,1549927689,-1,1549927689/1542320783,"          list = null;","    * @return reply message
    */
   private CompletableFuture<Message> processReadRequest(LogServiceRequestProto proto) {
-
     ReadLogRequestProto msgProto = proto.getReadNextQuery();
+    // Get the recordId the user wants to start reading at
     long startRecordId = msgProto.getStartRecordId();
+    // And the number of records they want to read
     int numRecordsToRead = msgProto.getNumRecords();
     Throwable t = verifyState(State.OPEN);
-    List<byte[]> list = new ArrayList<byte[]>();
-    LOG.info(""Start Index: {}"", startRecordId);
-    LOG.info(""Total to read: {}"", numRecordsToRead);
-    long raftLogIndex = log.getStartIndex();
+    List<byte[]> list = null;
+
     if (t == null) {
-      // Seek to first entry
-      long logServiceIndex = 0;
-      while (logServiceIndex < startRecordId) {
-        try {
-          LogEntryProto entry = log.get(raftLogIndex);
-          // Skip ""meta"" entries
-          if (entry == null || entry.hasConfigurationEntry()) {
-            raftLogIndex++;
-            continue;
-          }
-
-          LogServiceRequestProto logServiceProto =
-              LogServiceRequestProto.parseFrom(entry.getStateMachineLogEntry().getLogData());
-          // TODO is it possible to get LogService messages that aren't appends?
-          if (RequestCase.APPENDREQUEST != logServiceProto.getRequestCase()) {
-            raftLogIndex++;
-            continue;
-          }
-
-          AppendLogEntryRequestProto append = logServiceProto.getAppendRequest();
-          int numRecordsInAppend = append.getDataCount();
-          if (logServiceIndex + numRecordsInAppend > startRecordId) {
-            // The starting record is within this raft log entry.
+      LogServiceRaftLogReader reader = new LogServiceRaftLogReader(log);
+      list = new ArrayList<byte[]>();
+      try {
+        reader.seek(startRecordId);
+        for (int i = 0; i < numRecordsToRead; i++) {
+          if (!reader.hasNext()) {
             break;
           }
-          // We didn't find the log record, increment the logService record counter
-          logServiceIndex += numRecordsInAppend;
-          // And increment the raft log index
-          raftLogIndex++;
-        } catch (RaftLogIOException e) {
-          t = e;
-          list = null;
-          break;
-        } catch (InvalidProtocolBufferException e) {
-          LOG.error(""Failed to read LogService protobuf from Raft log"", e);
-          t = e;
-          list = null;
-          break;
+          list.add(reader.next().toByteArray());
         }
-      }
-    }
-    LOG.debug(""Starting to read {} logservice records starting at raft log index {}"", numRecordsToRead, raftLogIndex);
-    if (t == null) {
-      // Make sure we don't read off the end of the Raft log
-      for (long index = raftLogIndex; index < log.getLastCommittedIndex(); index++) {
-        try {
-          LogEntryProto entry = log.get(index);
-          LOG.trace(""Index: {} Entry: {}"", index, entry);
-          if (entry == null || entry.hasConfigurationEntry()) {
-            continue;
-          }
-
-          LogServiceRequestProto logServiceProto =
-              LogServiceRequestProto.parseFrom(entry.getStateMachineLogEntry().getLogData());
-          // TODO is it possible to get LogService messages that aren't appends?
-          if (RequestCase.APPENDREQUEST != logServiceProto.getRequestCase()) {
-            continue;
-          }
-
-          AppendLogEntryRequestProto append = logServiceProto.getAppendRequest();
-          for (int i = 0; i < append.getDataCount() && list.size() < numRecordsToRead; i++) {
-            list.add(append.getData(i).toByteArray());
-          }
-          if (list.size() == numRecordsToRead) {
-            break;
-          }
-        } catch (RaftLogIOException e) {
-          t = e;
-          list = null;
-          break;
-        } catch (InvalidProtocolBufferException e) {
-          LOG.error(""Failed to read LogService protobuf from Raft log"", e);
-          t = e;
-          list = null;
-          break;
-        }
+      } catch (Exception e) {
+        LOG.error(""Failed to execute ReadNextQuery"", e);
+        t = e;
+        list = null;
       }
     }
     return CompletableFuture.completedFuture(
",,8558
3589,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/RaftClientImpl.java,3fde3d2ac7c48c93d2dd1b18c560cee1d918046e,1542402678,117,4b613c1e2e91e91de7a84dc378a2e67da7fb092b,1559105274,141,,,,,"        : !peers.isEmpty()? peers.iterator().next().getId(): null;",,,8558
3590,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,0b22e0935a95aea1eb70d38e713526d71d71df45,1542915727,317,9dcb75a94eacae49b4fed7f7105b97deee4aba51,1555998951,352,,,,,"    this.openSegment = null;",,,8558
3591,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogStateMachine.java,447ccfb1f152a605c10e06f940df17bc5de6ea37,1548873430,333,,,,386f70284277a87214115e31bc92752b443bd2e6,1549927689,-1,1549927689/1548873430,"          list = null;","    * @return reply message
    */
   private CompletableFuture<Message> processReadRequest(LogServiceRequestProto proto) {
-
     ReadLogRequestProto msgProto = proto.getReadNextQuery();
+    // Get the recordId the user wants to start reading at
     long startRecordId = msgProto.getStartRecordId();
+    // And the number of records they want to read
     int numRecordsToRead = msgProto.getNumRecords();
     Throwable t = verifyState(State.OPEN);
-    List<byte[]> list = new ArrayList<byte[]>();
-    LOG.info(""Start Index: {}"", startRecordId);
-    LOG.info(""Total to read: {}"", numRecordsToRead);
-    long raftLogIndex = log.getStartIndex();
+    List<byte[]> list = null;
+
     if (t == null) {
-      // Seek to first entry
-      long logServiceIndex = 0;
-      while (logServiceIndex < startRecordId) {
-        try {
-          LogEntryProto entry = log.get(raftLogIndex);
-          // Skip ""meta"" entries
-          if (entry == null || entry.hasConfigurationEntry()) {
-            raftLogIndex++;
-            continue;
-          }
-
-          LogServiceRequestProto logServiceProto =
-              LogServiceRequestProto.parseFrom(entry.getStateMachineLogEntry().getLogData());
-          // TODO is it possible to get LogService messages that aren't appends?
-          if (RequestCase.APPENDREQUEST != logServiceProto.getRequestCase()) {
-            raftLogIndex++;
-            continue;
-          }
-
-          AppendLogEntryRequestProto append = logServiceProto.getAppendRequest();
-          int numRecordsInAppend = append.getDataCount();
-          if (logServiceIndex + numRecordsInAppend > startRecordId) {
-            // The starting record is within this raft log entry.
+      LogServiceRaftLogReader reader = new LogServiceRaftLogReader(log);
+      list = new ArrayList<byte[]>();
+      try {
+        reader.seek(startRecordId);
+        for (int i = 0; i < numRecordsToRead; i++) {
+          if (!reader.hasNext()) {
             break;
           }
-          // We didn't find the log record, increment the logService record counter
-          logServiceIndex += numRecordsInAppend;
-          // And increment the raft log index
-          raftLogIndex++;
-        } catch (RaftLogIOException e) {
-          t = e;
-          list = null;
-          break;
-        } catch (InvalidProtocolBufferException e) {
-          LOG.error(""Failed to read LogService protobuf from Raft log"", e);
-          t = e;
-          list = null;
-          break;
+          list.add(reader.next().toByteArray());
         }
-      }
-    }
-    LOG.debug(""Starting to read {} logservice records starting at raft log index {}"", numRecordsToRead, raftLogIndex);
-    if (t == null) {
-      // Make sure we don't read off the end of the Raft log
-      for (long index = raftLogIndex; index < log.getLastCommittedIndex(); index++) {
-        try {
-          LogEntryProto entry = log.get(index);
-          LOG.trace(""Index: {} Entry: {}"", index, entry);
-          if (entry == null || entry.hasConfigurationEntry()) {
-            continue;
-          }
-
-          LogServiceRequestProto logServiceProto =
-              LogServiceRequestProto.parseFrom(entry.getStateMachineLogEntry().getLogData());
-          // TODO is it possible to get LogService messages that aren't appends?
-          if (RequestCase.APPENDREQUEST != logServiceProto.getRequestCase()) {
-            continue;
-          }
-
-          AppendLogEntryRequestProto append = logServiceProto.getAppendRequest();
-          for (int i = 0; i < append.getDataCount() && list.size() < numRecordsToRead; i++) {
-            list.add(append.getData(i).toByteArray());
-          }
-          if (list.size() == numRecordsToRead) {
-            break;
-          }
-        } catch (RaftLogIOException e) {
-          t = e;
-          list = null;
-          break;
-        } catch (InvalidProtocolBufferException e) {
-          LOG.error(""Failed to read LogService protobuf from Raft log"", e);
-          t = e;
-          list = null;
-          break;
-        }
+      } catch (Exception e) {
+        LOG.error(""Failed to execute ReadNextQuery"", e);
+        t = e;
+        list = null;
       }
     }
     return CompletableFuture.completedFuture(
",,8558
3592,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogStateMachine.java,447ccfb1f152a605c10e06f940df17bc5de6ea37,1548873430,338,,,,386f70284277a87214115e31bc92752b443bd2e6,1549927689,-1,1549927689/1548873430,"          list = null;","    * @return reply message
    */
   private CompletableFuture<Message> processReadRequest(LogServiceRequestProto proto) {
-
     ReadLogRequestProto msgProto = proto.getReadNextQuery();
+    // Get the recordId the user wants to start reading at
     long startRecordId = msgProto.getStartRecordId();
+    // And the number of records they want to read
     int numRecordsToRead = msgProto.getNumRecords();
     Throwable t = verifyState(State.OPEN);
-    List<byte[]> list = new ArrayList<byte[]>();
-    LOG.info(""Start Index: {}"", startRecordId);
-    LOG.info(""Total to read: {}"", numRecordsToRead);
-    long raftLogIndex = log.getStartIndex();
+    List<byte[]> list = null;
+
     if (t == null) {
-      // Seek to first entry
-      long logServiceIndex = 0;
-      while (logServiceIndex < startRecordId) {
-        try {
-          LogEntryProto entry = log.get(raftLogIndex);
-          // Skip ""meta"" entries
-          if (entry == null || entry.hasConfigurationEntry()) {
-            raftLogIndex++;
-            continue;
-          }
-
-          LogServiceRequestProto logServiceProto =
-              LogServiceRequestProto.parseFrom(entry.getStateMachineLogEntry().getLogData());
-          // TODO is it possible to get LogService messages that aren't appends?
-          if (RequestCase.APPENDREQUEST != logServiceProto.getRequestCase()) {
-            raftLogIndex++;
-            continue;
-          }
-
-          AppendLogEntryRequestProto append = logServiceProto.getAppendRequest();
-          int numRecordsInAppend = append.getDataCount();
-          if (logServiceIndex + numRecordsInAppend > startRecordId) {
-            // The starting record is within this raft log entry.
+      LogServiceRaftLogReader reader = new LogServiceRaftLogReader(log);
+      list = new ArrayList<byte[]>();
+      try {
+        reader.seek(startRecordId);
+        for (int i = 0; i < numRecordsToRead; i++) {
+          if (!reader.hasNext()) {
             break;
           }
-          // We didn't find the log record, increment the logService record counter
-          logServiceIndex += numRecordsInAppend;
-          // And increment the raft log index
-          raftLogIndex++;
-        } catch (RaftLogIOException e) {
-          t = e;
-          list = null;
-          break;
-        } catch (InvalidProtocolBufferException e) {
-          LOG.error(""Failed to read LogService protobuf from Raft log"", e);
-          t = e;
-          list = null;
-          break;
+          list.add(reader.next().toByteArray());
         }
-      }
-    }
-    LOG.debug(""Starting to read {} logservice records starting at raft log index {}"", numRecordsToRead, raftLogIndex);
-    if (t == null) {
-      // Make sure we don't read off the end of the Raft log
-      for (long index = raftLogIndex; index < log.getLastCommittedIndex(); index++) {
-        try {
-          LogEntryProto entry = log.get(index);
-          LOG.trace(""Index: {} Entry: {}"", index, entry);
-          if (entry == null || entry.hasConfigurationEntry()) {
-            continue;
-          }
-
-          LogServiceRequestProto logServiceProto =
-              LogServiceRequestProto.parseFrom(entry.getStateMachineLogEntry().getLogData());
-          // TODO is it possible to get LogService messages that aren't appends?
-          if (RequestCase.APPENDREQUEST != logServiceProto.getRequestCase()) {
-            continue;
-          }
-
-          AppendLogEntryRequestProto append = logServiceProto.getAppendRequest();
-          for (int i = 0; i < append.getDataCount() && list.size() < numRecordsToRead; i++) {
-            list.add(append.getData(i).toByteArray());
-          }
-          if (list.size() == numRecordsToRead) {
-            break;
-          }
-        } catch (RaftLogIOException e) {
-          t = e;
-          list = null;
-          break;
-        } catch (InvalidProtocolBufferException e) {
-          LOG.error(""Failed to read LogService protobuf from Raft log"", e);
-          t = e;
-          list = null;
-          break;
-        }
+      } catch (Exception e) {
+        LOG.error(""Failed to execute ReadNextQuery"", e);
+        t = e;
+        list = null;
       }
     }
     return CompletableFuture.completedFuture(
",,8558
3593,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogStateMachine.java,447ccfb1f152a605c10e06f940df17bc5de6ea37,1548873430,370,,,,386f70284277a87214115e31bc92752b443bd2e6,1549927689,-1,1549927689/1548873430,"          list = null;","    * @return reply message
    */
   private CompletableFuture<Message> processReadRequest(LogServiceRequestProto proto) {
-
     ReadLogRequestProto msgProto = proto.getReadNextQuery();
+    // Get the recordId the user wants to start reading at
     long startRecordId = msgProto.getStartRecordId();
+    // And the number of records they want to read
     int numRecordsToRead = msgProto.getNumRecords();
     Throwable t = verifyState(State.OPEN);
-    List<byte[]> list = new ArrayList<byte[]>();
-    LOG.info(""Start Index: {}"", startRecordId);
-    LOG.info(""Total to read: {}"", numRecordsToRead);
-    long raftLogIndex = log.getStartIndex();
+    List<byte[]> list = null;
+
     if (t == null) {
-      // Seek to first entry
-      long logServiceIndex = 0;
-      while (logServiceIndex < startRecordId) {
-        try {
-          LogEntryProto entry = log.get(raftLogIndex);
-          // Skip ""meta"" entries
-          if (entry == null || entry.hasConfigurationEntry()) {
-            raftLogIndex++;
-            continue;
-          }
-
-          LogServiceRequestProto logServiceProto =
-              LogServiceRequestProto.parseFrom(entry.getStateMachineLogEntry().getLogData());
-          // TODO is it possible to get LogService messages that aren't appends?
-          if (RequestCase.APPENDREQUEST != logServiceProto.getRequestCase()) {
-            raftLogIndex++;
-            continue;
-          }
-
-          AppendLogEntryRequestProto append = logServiceProto.getAppendRequest();
-          int numRecordsInAppend = append.getDataCount();
-          if (logServiceIndex + numRecordsInAppend > startRecordId) {
-            // The starting record is within this raft log entry.
+      LogServiceRaftLogReader reader = new LogServiceRaftLogReader(log);
+      list = new ArrayList<byte[]>();
+      try {
+        reader.seek(startRecordId);
+        for (int i = 0; i < numRecordsToRead; i++) {
+          if (!reader.hasNext()) {
             break;
           }
-          // We didn't find the log record, increment the logService record counter
-          logServiceIndex += numRecordsInAppend;
-          // And increment the raft log index
-          raftLogIndex++;
-        } catch (RaftLogIOException e) {
-          t = e;
-          list = null;
-          break;
-        } catch (InvalidProtocolBufferException e) {
-          LOG.error(""Failed to read LogService protobuf from Raft log"", e);
-          t = e;
-          list = null;
-          break;
+          list.add(reader.next().toByteArray());
         }
-      }
-    }
-    LOG.debug(""Starting to read {} logservice records starting at raft log index {}"", numRecordsToRead, raftLogIndex);
-    if (t == null) {
-      // Make sure we don't read off the end of the Raft log
-      for (long index = raftLogIndex; index < log.getLastCommittedIndex(); index++) {
-        try {
-          LogEntryProto entry = log.get(index);
-          LOG.trace(""Index: {} Entry: {}"", index, entry);
-          if (entry == null || entry.hasConfigurationEntry()) {
-            continue;
-          }
-
-          LogServiceRequestProto logServiceProto =
-              LogServiceRequestProto.parseFrom(entry.getStateMachineLogEntry().getLogData());
-          // TODO is it possible to get LogService messages that aren't appends?
-          if (RequestCase.APPENDREQUEST != logServiceProto.getRequestCase()) {
-            continue;
-          }
-
-          AppendLogEntryRequestProto append = logServiceProto.getAppendRequest();
-          for (int i = 0; i < append.getDataCount() && list.size() < numRecordsToRead; i++) {
-            list.add(append.getData(i).toByteArray());
-          }
-          if (list.size() == numRecordsToRead) {
-            break;
-          }
-        } catch (RaftLogIOException e) {
-          t = e;
-          list = null;
-          break;
-        } catch (InvalidProtocolBufferException e) {
-          LOG.error(""Failed to read LogService protobuf from Raft log"", e);
-          t = e;
-          list = null;
-          break;
-        }
+      } catch (Exception e) {
+        LOG.error(""Failed to execute ReadNextQuery"", e);
+        t = e;
+        list = null;
       }
     }
     return CompletableFuture.completedFuture(
",,8558
3594,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogServiceRaftLogReader.java,386f70284277a87214115e31bc92752b443bd2e6,1549927689,64,b7e11bf39409dd469ad20a081d1c91c7cb4edfb4,1590735706,65,,,,,"    currentLogEntry = null;",,,8558
3595,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogServiceRaftLogReader.java,386f70284277a87214115e31bc92752b443bd2e6,1549927689,66,b7e11bf39409dd469ad20a081d1c91c7cb4edfb4,1590735706,67,,,,,"    currentRecord = null;",,,8558
3596,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogServiceRaftLogReader.java,386f70284277a87214115e31bc92752b443bd2e6,1549927689,91,b7e11bf39409dd469ad20a081d1c91c7cb4edfb4,1590735706,94,,,,,"    currentRecord = null;",,,8558
3597,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogServiceRaftLogReader.java,386f70284277a87214115e31bc92752b443bd2e6,1549927689,101,b7e11bf39409dd469ad20a081d1c91c7cb4edfb4,1590735706,104,,,,,"    currentRecord = null;",,,8558
3598,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogServiceRaftLogReader.java,386f70284277a87214115e31bc92752b443bd2e6,1549927689,117,b7e11bf39409dd469ad20a081d1c91c7cb4edfb4,1590735706,122,,,,,"      currentLogEntry = null;",,,8558
3599,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogServiceRaftLogReader.java,386f70284277a87214115e31bc92752b443bd2e6,1549927689,148,b7e11bf39409dd469ad20a081d1c91c7cb4edfb4,1590735706,153,,,,,"        currentLogEntry = null;",,,8558
3600,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogStateMachine.java,386f70284277a87214115e31bc92752b443bd2e6,1549927689,314,965bcec41ccc36056f029becb743d8f24b420d76,1591862204,429,,,,,"        list = null;",,,8558
3601,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftLogCache.java,9dcb75a94eacae49b4fed7f7105b97deee4aba51,1555998951,442,,,,,,,,"        (closedSegments.isEmpty() ? null :",,,8558
3602,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/WatchRequests.java,c7b35c3f43fd52bf7669f19fc86c1b05b71bef0e,1557429862,100,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,100,,,,,"        computed = q.compute(pending, (key, old) -> old != null? old: resource.tryAcquire()? pending: null);",,,8558
3603,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogCache.java,34197939571287dd0b81896499b028b82a29b0fa,1557962347,353,0cc6aca13497f638a3ad1e2224fe614b750d2a5b,1593103043,426,,,,,"    this.openSegment = null;",,,8558
3604,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogCache.java,34197939571287dd0b81896499b028b82a29b0fa,1557962347,443,0cc6aca13497f638a3ad1e2224fe614b750d2a5b,1593103043,521,,,,,"        (closedSegments.isEmpty() ? null :",,,8558
3605,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogOutputStream.java,34197939571287dd0b81896499b028b82a29b0fa,1557962347,152,284db7f50f59bbbac11c11f6f2ed847fedb59472,1575700773,147,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,-1,1587476502/1557962347,"      fc = null;","    */
   public void write(LogEntryProto entry) throws IOException {
     final int serialized = entry.getSerializedSize();
-    final int bufferSize = CodedOutputStream.computeUInt32SizeNoTag(serialized)
-        + serialized;
+    final int proto = CodedOutputStream.computeUInt32SizeNoTag(serialized) + serialized;
+    final byte[] buf = new byte[proto + 4]; // proto and 4-byte checksum
+    preallocateIfNecessary(buf.length);
 
-    preallocateIfNecessary(bufferSize + 4);
-
-    byte[] buf = new byte[bufferSize];
     CodedOutputStream cout = CodedOutputStream.newInstance(buf);
     cout.writeUInt32NoTag(serialized);
     entry.writeTo(cout);
 
     checksum.reset();
-    checksum.update(buf, 0, buf.length);
-    final int sum = (int) checksum.getValue();
+    checksum.update(buf, 0, proto);
+    ByteBuffer.wrap(buf, proto, 4).putInt((int) checksum.getValue());
 
     out.write(buf);
-    writeInt(sum);
-  }
-
-  private void writeInt(int v) throws IOException {
-    out.write((v >>> 24) & 0xFF);
-    out.write((v >>> 16) & 0xFF);
-    out.write((v >>>  8) & 0xFF);
-    out.write((v) & 0xFF);
-  }
-
-  private void create() throws IOException {
-    fc.truncate(0);
-    fc.position(0);
-    preallocatedPos = 0;
-    preallocate(); // preallocate file
-
-    SegmentedRaftLogFormat.applyHeaderTo(CheckedConsumer.asCheckedFunction(out::write));
-    flush();
   }
 
   @Override
   public void close() throws IOException {
     try {
-      out.flush();
-      if (fc != null && fc.isOpen()) {
-        fc.truncate(fc.position());
-      }
+      flush();
     } finally {
-      IOUtils.cleanup(LOG, fc, out);
-      fc = null;
-      out = null;
+      IOUtils.cleanup(LOG, out);
     }
   }
 
",,8558
3606,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogOutputStream.java,34197939571287dd0b81896499b028b82a29b0fa,1557962347,153,284db7f50f59bbbac11c11f6f2ed847fedb59472,1575700773,148,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,-1,1587476502/1557962347,"      out = null;","    */
   public void write(LogEntryProto entry) throws IOException {
     final int serialized = entry.getSerializedSize();
-    final int bufferSize = CodedOutputStream.computeUInt32SizeNoTag(serialized)
-        + serialized;
+    final int proto = CodedOutputStream.computeUInt32SizeNoTag(serialized) + serialized;
+    final byte[] buf = new byte[proto + 4]; // proto and 4-byte checksum
+    preallocateIfNecessary(buf.length);
 
-    preallocateIfNecessary(bufferSize + 4);
-
-    byte[] buf = new byte[bufferSize];
     CodedOutputStream cout = CodedOutputStream.newInstance(buf);
     cout.writeUInt32NoTag(serialized);
     entry.writeTo(cout);
 
     checksum.reset();
-    checksum.update(buf, 0, buf.length);
-    final int sum = (int) checksum.getValue();
+    checksum.update(buf, 0, proto);
+    ByteBuffer.wrap(buf, proto, 4).putInt((int) checksum.getValue());
 
     out.write(buf);
-    writeInt(sum);
-  }
-
-  private void writeInt(int v) throws IOException {
-    out.write((v >>> 24) & 0xFF);
-    out.write((v >>> 16) & 0xFF);
-    out.write((v >>>  8) & 0xFF);
-    out.write((v) & 0xFF);
-  }
-
-  private void create() throws IOException {
-    fc.truncate(0);
-    fc.position(0);
-    preallocatedPos = 0;
-    preallocate(); // preallocate file
-
-    SegmentedRaftLogFormat.applyHeaderTo(CheckedConsumer.asCheckedFunction(out::write));
-    flush();
   }
 
   @Override
   public void close() throws IOException {
     try {
-      out.flush();
-      if (fc != null && fc.isOpen()) {
-        fc.truncate(fc.position());
-      }
+      flush();
     } finally {
-      IOUtils.cleanup(LOG, fc, out);
-      fc = null;
-      out = null;
+      IOUtils.cleanup(LOG, out);
     }
   }
 
",,8558
3607,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogWorker.java,34197939571287dd0b81896499b028b82a29b0fa,1557962347,357,9d7c7a38a97b4a93704259d4e837cf6fed74c856,1561353565,392,,,,,"        this.stateMachineFuture = null;",,,8558
3608,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogWorker.java,34197939571287dd0b81896499b028b82a29b0fa,1557962347,423,45e279f438e81d6dbc92b55f8505b251cf7f52b4,1574075781,524,,,,,"      out = null;",,,8558
3609,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogWorker.java,34197939571287dd0b81896499b028b82a29b0fa,1557962347,492,45e279f438e81d6dbc92b55f8505b251cf7f52b4,1574075781,600,284db7f50f59bbbac11c11f6f2ed847fedb59472,1575700773,-1,1575700773/1557962347,"      out = null;"," 
     @Override
     void execute() throws IOException {
-      IOUtils.cleanup(null, out);
-      out = null;
+      freeSegmentedRaftLogOutputStream();
       CompletableFuture<Void> stateMachineFuture = null;
       if (stateMachine != null) {
         stateMachineFuture = stateMachine.truncateStateMachineData(truncateIndex);
",,8558
3610,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/StateMachineUpdater.java,d5cd3f6c69082f42cb1a36d2c9a5a27f1d99a836,1558040565,88,14927c7527afe13efb949065bbac0042ad82932f,1588058251,98,,,,,"    this.autoSnapshotThreshold = autoSnapshot? RaftServerConfigKeys.Snapshot.autoTriggerThreshold(properties): null;",,,8558
3611,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/OrderedAsync.java,231b35c23d44a0afb889f0c6bb5ba9194b3cf398,1559120267,118,a14a1d7215f9f4aecafcd8384824eec6dfcf7d51,1587371171,140,,,,,"    return getSlidingWindow(request.is(TypeCase.STALEREAD) ? request.getServerId() : null);",,,8558
3612,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/RaftClientImpl.java,231b35c23d44a0afb889f0c6bb5ba9194b3cf398,1559120267,96,a14a1d7215f9f4aecafcd8384824eec6dfcf7d51,1587371171,110,,,,,"        : !peers.isEmpty()? peers.iterator().next().getId(): null;",,,8558
3613,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,6d7afecf4ec547815e283602f6ba2bac73b165cc,1561244483,455,6add5871b6de8064d5340a5b0fcdf5dac12a6dd4,1592988314,510,e08f2d13e44befd136655f4936a01dca704dc3b1,1561433286,-1,1561433286/1561244483,"      leaderId = null;","     RaftPeerId leaderId = state.getLeaderId();
     if (leaderId == null || leaderId.equals(state.getSelfId())) {
       // No idea about who is the current leader. Or the peer is the current
-      // leader, but it is about to step down. set the suggested leader as null.
-      leaderId = null;
+      // leader, but it is about to step down
+      RaftPeer suggestedLeader = getRaftConf().getRandomPeer(state.getSelfId());
+      leaderId = suggestedLeader == null ? null : suggestedLeader.getId();
     }
     RaftConfiguration conf = getRaftConf();
     Collection<RaftPeer> peers = conf.getPeers();
",,8558
3614,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogWorker.java,051fe4e657d542f88c0dabbbd5a90908295f8964,1561538100,438,91aaf6e010cc29ea8b8b11954f839c8b9668452b,1591196848,463,,,,,"        this.stateMachineFuture = null;",,,8558
3615,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/impl/ArchiveHdfsLogReader.java,c2a6a24a9ff85cc24132f5d5db40391bd36fbe70,1563407678,102,9cbf1efaf0c58c4702caa724f2e602839386c607,1571311898,99,,,,,"    currentRecord = null;",,,8558
3616,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/impl/ArchiveHdfsLogReader.java,c2a6a24a9ff85cc24132f5d5db40391bd36fbe70,1563407678,190,9cbf1efaf0c58c4702caa724f2e602839386c607,1571311898,187,,,,,"      this.is = null;",,,8558
3617,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/impl/ArchiveHdfsLogReader.java,c2a6a24a9ff85cc24132f5d5db40391bd36fbe70,1563407678,199,9cbf1efaf0c58c4702caa724f2e602839386c607,1571311898,196,,,,,"      currentRecord = null;",,,8558
3618,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/util/TimeoutScheduler.java,78e95b9b079e84908ca3f5506d71b2aefa227990,1567200151,168,,,,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,-1,1587476502/1567200151,"      scheduler = null;","     onTimeout(timeout, task, t -> log.error(errorMessage.get(), t));
   }
 
-  @Override public synchronized void close() {
-    if (scheduler != null) {
-      LOG.debug(""Closing ThreadPool"");
-      scheduler.shutdownNow();
-      scheduler = null;
-    }
+  @Override
+  public synchronized void close() {
+    tryShutdownScheduler(scheduleID);
   }
 }
",,8558
3619,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/util/TimeoutScheduler.java,78e95b9b079e84908ca3f5506d71b2aefa227990,1567200151,183,,,,,,,,"      scheduler = null;",,,8558
3620,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/LeaderState.java,c9308f64d14c49d4edd9eb116853de7c46794ed9,1568749393,772,8acf988f72f604a59ca83ef80a7e7c0f4be6077c,1594294583,844,,,,,"      LeaderState.this.stagingState = null;",,,8558
3621,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/LeaderState.java,ac158584b7c094254d3276b0e130e7cb39a251b1,1568868339,359,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,379,,,,,"    this.stagingState = null;",,,8558
3622,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/LeaderState.java,ac158584b7c094254d3276b0e130e7cb39a251b1,1568868339,772,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,793,,,,,"      LeaderState.this.stagingState = null;",,,8558
3623,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/RaftServerImpl.java,ac158584b7c094254d3276b0e130e7cb39a251b1,1568868339,459,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,471,,,,,"      leaderId = null;",,,8558
3624,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/StateMachineUpdater.java,ac158584b7c094254d3276b0e130e7cb39a251b1,1568868339,95,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,97,,,,,"    this.autoSnapshotThreshold = autoSnapshot? RaftServerConfigKeys.Snapshot.autoTriggerThreshold(properties): null;",,,8558
3625,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/server/GrpcLogAppender.java,ad6d7c3ea63e6b728ae5121582d02e2709311e91,1571911929,533,1024b3382f7862d47527a85b77e4936249e4183c,1592807699,557,,,,,"      this.previousLog = proto.hasPreviousLog()? ServerProtoUtils.toTermIndex(proto.getPreviousLog()): null;",,,8558
3626,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/server/GrpcLogAppender.java,ad6d7c3ea63e6b728ae5121582d02e2709311e91,1571911929,535,1024b3382f7862d47527a85b77e4936249e4183c,1592807699,559,,,,,"      this.lastEntry = entriesCount > 0? ServerProtoUtils.toTermIndex(proto.getEntries(entriesCount - 1)): null;",,,8558
3627,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogWorker.java,284db7f50f59bbbac11c11f6f2ed847fedb59472,1575700773,678,91aaf6e010cc29ea8b8b11954f839c8b9668452b,1591196848,704,,,,,"    out = null;",,,8558
3628,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/OrderedAsync.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,140,,,,,,,,"    return getSlidingWindow(request.is(TypeCase.STALEREAD) ? request.getServerId() : null);",,,8558
3629,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/RaftClientImpl.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,98,,,,,,,,"        : !peers.isEmpty()? peers.iterator().next().getId(): null;",,,8558
3630,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-common/src/main/java/org/apache/ratis/conf/RaftProperties.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,285,,,,,,,,"    properties = null;                            // trigger reload",,,8558
3631,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/server/GrpcLogAppender.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,90,,,,,,,,"    appendLogRequestObserver = null;",,,8558
3632,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/server/GrpcLogAppender.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,532,,,,,,,,"      this.previousLog = proto.hasPreviousLog()? ServerProtoUtils.toTermIndex(proto.getPreviousLog()): null;",,,8558
3633,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-grpc/src/main/java/org/apache/ratis/grpc/server/GrpcLogAppender.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,534,,,,,,,,"      this.lastEntry = entriesCount > 0? ServerProtoUtils.toTermIndex(proto.getEntries(entriesCount - 1)): null;",,,8558
3634,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/impl/ArchiveHdfsLogReader.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,99,,,,,,,,"    currentRecord = null;",,,8558
3635,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/impl/ArchiveHdfsLogReader.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,187,,,,,,,,"      this.is = null;",,,8558
3636,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/impl/ArchiveHdfsLogReader.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,196,,,,,,,,"      currentRecord = null;",,,8558
3637,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-logservice/src/main/java/org/apache/ratis/logservice/server/LogStateMachine.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,430,,,,,,,,"        list = null;",,,8558
3638,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/PendingRequests.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,210,,,,,,,,"      pendingSetConf = null;",,,8558
3639,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/impl/PendingRequests.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,217,,,,,,,,"    pendingSetConf = null;",,,8558
3640,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogWorker.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,451,,,,,,,,"        this.stateMachineFuture = null;",,,8558
3641,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogWorker.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,686,,,,,,,,"    out = null;",,,8558
3642,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/main/java/org/apache/ratis/server/storage/RaftStorageDirectory.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,366,,,,,,,,"    lock = null;",,,8558
3643,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-server/src/test/java/org/apache/ratis/RaftTestUtil.java,4ffe135e3b71dbfe0dd030a9b87288e9ad6c43ea,1587476502,336,,,,,,,,"          clientId, callId, bytes, hasStateMachineData? bytes: null);",,,8558
3644,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/OrderedAsync.java,1e909dfcd493e32f3a5c47a5533f745715e5669a,1587644825,138,c42b44cfe1577b97dcd490860780e81e19e48106,1587988046,138,,,,,"    return getSlidingWindow(request.is(TypeCase.STALEREAD) ? request.getServerId() : null);",,,8558
3645,0373c58fd4be937e4c3bf347be1956f45d12950d9b93397478ad50d78479881426d7faf551126499c6d712823bb9d6fb62480a1e33096f6fd9aafe1e6d979e49190a48fc1c43edc0ff2b410eae09381d7965351dcf385205409adb2f5f0fe928a55f77d23f641fe61e1e3964272601012b895620a987134af362313860401024b7141489e66ee76af442eb76c2323b774725139dea401bac4837d7e706ba5ed286f66e21e1521164a87ca3ae5b60d090db214416,6.25,category/java/errorprone.xml/NullAssignment,./TargetProjects/incubator-ratis/ratis-client/src/main/java/org/apache/ratis/client/impl/RaftClientImpl.java,c42b44cfe1577b97dcd490860780e81e19e48106,1587988046,120,50490661d22bee2a360cac07fac198f5bd5c8ebd,1592491227,120,,,,,"        : !peers.isEmpty()? peers.iterator().next().getId(): null;",,,8558
